import {
  RawDateSchema
} from "./chunk-SUHZGYFJ.js";
import {
  NFTInputOrUriSchema
} from "./chunk-C6HNAJ4E.js";
import {
  AddressOrEnsSchema,
  AmountSchema,
  BigNumberishSchema,
  external_exports
} from "./chunk-RMBH3OGQ.js";

// node_modules/.pnpm/@thirdweb-dev+sdk@4.0.99_@types+react-dom@18.3.7_@types+react@18.3.26__@types+react@18._4ecbbc39539d7059b1b8ad321c3f738a/node_modules/@thirdweb-dev/sdk/dist/pack-29c3a58f.browser.esm.js
var CommonWrappableSchema = (() => external_exports.object({
  contractAddress: AddressOrEnsSchema
}))();
var ERC20WrappableSchema = (() => CommonWrappableSchema.extend({
  quantity: AmountSchema
}))();
var ERC721WrappableSchema = (() => CommonWrappableSchema.extend({
  tokenId: BigNumberishSchema
}))();
var ERC1155WrappableSchema = (() => CommonWrappableSchema.extend({
  tokenId: BigNumberishSchema,
  quantity: BigNumberishSchema
}))();
var ERC20RewardSchema = (() => ERC20WrappableSchema.omit({
  quantity: true
}).extend({
  quantityPerReward: AmountSchema
}))();
var ERC721RewardSchema = ERC721WrappableSchema;
var ERC1155RewardSchema = (() => ERC1155WrappableSchema.omit({
  quantity: true
}).extend({
  quantityPerReward: BigNumberishSchema
}))();
var ERC20RewardContentsSchema = (() => ERC20RewardSchema.extend({
  totalRewards: BigNumberishSchema.default("1")
}))();
var ERC721RewardContentsSchema = ERC721RewardSchema;
var ERC1155RewardContentsSchema = (() => ERC1155RewardSchema.extend({
  totalRewards: BigNumberishSchema.default("1")
}))();
var PackRewardsSchema = (() => external_exports.object({
  erc20Rewards: external_exports.array(ERC20RewardSchema).default([]),
  erc721Rewards: external_exports.array(ERC721RewardSchema).default([]),
  erc1155Rewards: external_exports.array(ERC1155RewardSchema).default([])
}))();
var PackRewardsOutputSchema = (() => external_exports.object({
  erc20Rewards: external_exports.array(ERC20RewardContentsSchema).default([]),
  erc721Rewards: external_exports.array(ERC721RewardContentsSchema).default([]),
  erc1155Rewards: external_exports.array(ERC1155RewardContentsSchema).default([])
}))();
var PackMetadataInputSchema = (() => PackRewardsOutputSchema.extend({
  packMetadata: NFTInputOrUriSchema,
  rewardsPerPack: BigNumberishSchema.default("1"),
  openStartTime: RawDateSchema.default(/* @__PURE__ */ new Date())
}))();

export {
  ERC20WrappableSchema,
  ERC721WrappableSchema,
  ERC1155WrappableSchema,
  PackRewardsSchema,
  PackRewardsOutputSchema,
  PackMetadataInputSchema
};
//# sourceMappingURL=chunk-JCHTCLVA.js.map
