import {
  toSerializableTransaction
} from "./chunk-LHNQBU3K.js";
import "./chunk-3CKHE3UX.js";
import "./chunk-KBSU7P7E.js";
import {
  getContract
} from "./chunk-K3WLKV3W.js";
import {
  readContract,
  serializeTransaction
} from "./chunk-GPHOYIUU.js";
import "./chunk-XCEIDS74.js";
import "./chunk-5KA42CBB.js";
import "./chunk-WUFPCT7Y.js";
import "./chunk-UALPWOVE.js";
import "./chunk-HWDUXV26.js";
import "./chunk-SMCLQ63X.js";
import "./chunk-CCZJMTRD.js";
import "./chunk-AS7Y3LQA.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-RZ55PUNP.js";

// node_modules/.pnpm/thirdweb@5.29.6_@types+react-dom@18.3.7_@types+react@18.3.26__@types+react@18.3.26_buff_c058282b6cfdb3c3dc6baf54d128684f/node_modules/thirdweb/dist/esm/gas/estimate-l1-fee.js
var OPStackGasPriceOracleAddress = "0x420000000000000000000000000000000000000F";
async function estimateL1Fee(options) {
  const { transaction, gasPriceOracleAddress } = options;
  const oracleContract = getContract({
    client: transaction.client,
    address: gasPriceOracleAddress || OPStackGasPriceOracleAddress,
    chain: transaction.chain
  });
  const { gasPrice, ...serializableTx } = await toSerializableTransaction({
    transaction
  });
  const serialized = serializeTransaction({
    ...serializableTx,
    type: "eip1559"
  });
  return readContract({
    contract: oracleContract,
    method: "function getL1Fee(bytes memory _data) view returns (uint256)",
    params: [serialized]
  });
}
export {
  estimateL1Fee
};
//# sourceMappingURL=estimate-l1-fee-7AR2OBKF.js.map
