{
  "version": 3,
  "sources": ["../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/bind.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/utils.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/buildURL.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/InterceptorManager.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/AxiosError.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/defaults/transitional.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/toFormData.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/settle.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/cookies.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/combineURLs.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/buildFullPath.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/parseHeaders.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/CanceledError.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/parseProtocol.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/adapters/xhr.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/null.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/defaults/index.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/transformData.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/isCancel.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/dispatchRequest.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/mergeConfig.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/env/data.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/validator.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/core/Axios.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/cancel/CancelToken.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/spread.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/helpers/isAxiosError.js", "../../.pnpm/axios@0.27.2/node_modules/axios/lib/axios.js", "../../.pnpm/axios@0.27.2/node_modules/axios/index.js", "../../.pnpm/@safe-global+safe-ethers-adapters@0.1.0-alpha.19_@ethersproject+abstract-provider@5.8.0_f206e203843fdb269f81a28f46761ebb/node_modules/@safe-global/safe-ethers-adapters/src/service.ts", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/CompatibilityFallbackHandlerContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/CreateCallContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/GnosisSafeContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/GnosisSafeProxyFactoryContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/MultiSendCallOnlyContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/MultiSendContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/contracts/SignMessageLibContract.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/dist/src/ethereumLibs/EthAdapter.js", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/src/types.ts", "../../.pnpm/@safe-global+safe-core-sdk-types@1.10.1/node_modules/@safe-global/safe-core-sdk-types/src/index.ts", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/types.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/simulate_tx_accessor.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/simulate_tx_accessor.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/simulate_tx_accessor.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.0.0/proxy_factory.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.1.1/proxy_factory.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/proxy_factory.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe_proxy_factory.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/safe_proxy_factory.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.1.1/default_callback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/token_callback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/compatibility_fallback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/compatibility_fallback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/compatibility_fallback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/extensible_fallback_handler.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.0.0/gnosis_safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.1.1/gnosis_safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.2.0/gnosis_safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/gnosis_safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/safe.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/gnosis_safe_l2.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe_l2.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/safe_l2.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.1.1/multi_send.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/multi_send.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/multi_send.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/multi_send.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/multi_send_call_only.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/multi_send_call_only.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/multi_send_call_only.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/create_call.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/create_call.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/create_call.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.3.0/sign_message_lib.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/sign_message_lib.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/sign_message_lib.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe_migration.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/safe_migration.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe_to_l2_migration.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.4.1/safe_to_l2_setup.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/assets/v1.5.0/safe_to_l2_setup.json", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/deployments.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/utils.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/safes.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/factories.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/libs.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/handler.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/accessors.js", "../../.pnpm/@safe-global+safe-deployments@1.37.45/node_modules/@safe-global/safe-deployments/dist/index.js", "../../.pnpm/@safe-global+safe-ethers-adapters@0.1.0-alpha.19_@ethersproject+abstract-provider@5.8.0_f206e203843fdb269f81a28f46761ebb/node_modules/@safe-global/safe-ethers-adapters/src/utils.ts", "../../.pnpm/@safe-global+safe-ethers-adapters@0.1.0-alpha.19_@ethersproject+abstract-provider@5.8.0_f206e203843fdb269f81a28f46761ebb/node_modules/@safe-global/safe-ethers-adapters/src/signer.ts", "../../.pnpm/@safe-global+safe-ethers-adapters@0.1.0-alpha.19_@ethersproject+abstract-provider@5.8.0_f206e203843fdb269f81a28f46761ebb/node_modules/@safe-global/safe-ethers-adapters/src/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/contracts/config.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/contracts/safeDeploymentContracts.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/managers/contractManager.ts", "../../.pnpm/bn.js@4.11.6/node_modules/bn.js/lib/bn.js", "../../.pnpm/is-hex-prefixed@1.0.0/node_modules/is-hex-prefixed/src/index.js", "../../.pnpm/strip-hex-prefix@1.0.0/node_modules/strip-hex-prefix/src/index.js", "../../.pnpm/number-to-bn@1.7.0/node_modules/number-to-bn/src/index.js", "../../.pnpm/ethjs-unit@0.1.6/node_modules/ethjs-unit/lib/index.js", "../../.pnpm/utf8@3.0.0/node_modules/utf8/utf8.js", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/_assert.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/crypto.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/utils.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/_md.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/sha256.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/hmac.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/abstract/utils.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/abstract/modular.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/abstract/curve.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/_shortw_utils.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../.pnpm/@noble+curves@1.4.2/node_modules/@noble/curves/src/secp256k1.ts", "../../.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/secp256k1.js", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/constants.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/units.ts", "../../.pnpm/@ethereumjs+rlp@4.0.1/node_modules/@ethereumjs/rlp/src/index.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/_u64.ts", "../../.pnpm/@noble+hashes@1.4.0/node_modules/@noble/hashes/src/sha3.ts", "../../.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/utils.js", "../../.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/keccak.js", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/internal.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/helpers.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/bytes.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/account.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/address.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/types.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/withdrawal.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/signature.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/encoding.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/asyncEventEmitter.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/lock.ts", "browser-external:http", "browser-external:https", "browser-external:zlib", "../../.pnpm/util@0.11.1/node_modules/util/support/isBufferBrowser.js", "../../.pnpm/util@0.11.1/node_modules/util/util.js", "../../.pnpm/punycode@1.4.1/node_modules/punycode/punycode.js", "../../.pnpm/object-inspect@1.13.4/node_modules/object-inspect/index.js", "../../.pnpm/side-channel-list@1.0.0/node_modules/side-channel-list/index.js", "../../.pnpm/side-channel-map@1.0.1/node_modules/side-channel-map/index.js", "../../.pnpm/side-channel-weakmap@1.0.2/node_modules/side-channel-weakmap/index.js", "../../.pnpm/side-channel@1.1.0/node_modules/side-channel/index.js", "../../.pnpm/qs@6.14.0/node_modules/qs/lib/formats.js", "../../.pnpm/qs@6.14.0/node_modules/qs/lib/utils.js", "../../.pnpm/qs@6.14.0/node_modules/qs/lib/stringify.js", "../../.pnpm/qs@6.14.0/node_modules/qs/lib/parse.js", "../../.pnpm/qs@6.14.0/node_modules/qs/lib/index.js", "../../.pnpm/url@0.11.4/node_modules/url/url.js", "../../.pnpm/micro-ftch@0.3.1/node_modules/micro-ftch/index.js", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/provider.ts", "../../.pnpm/@ethereumjs+util@8.1.0/node_modules/@ethereumjs/util/src/index.ts", "../../.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/src/_u64.ts", "../../.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/src/crypto.ts", "../../.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/src/utils.ts", "../../.pnpm/@noble+hashes@1.8.0/node_modules/@noble/hashes/src/sha3.ts", "../../.pnpm/ethereum-bloom-filters@1.2.0/node_modules/ethereum-bloom-filters/dist/utils.js", "../../.pnpm/ethereum-bloom-filters@1.2.0/node_modules/ethereum-bloom-filters/dist/index.js", "../../.pnpm/web3-utils@1.10.4/node_modules/web3-utils/lib/utils.js", "../../.pnpm/web3-utils@1.10.4/node_modules/web3-utils/lib/soliditySha3.js", "../../.pnpm/randombytes@2.1.0/node_modules/randombytes/browser.js", "../../.pnpm/web3-utils@1.10.4/node_modules/web3-utils/lib/index.js", "../../.pnpm/@safe-global+safe-core-sdk-utils@1.7.4/node_modules/@safe-global/safe-core-sdk-utils/src/eip-3770/config.ts", "../../.pnpm/@safe-global+safe-core-sdk-utils@1.7.4/node_modules/@safe-global/safe-core-sdk-utils/src/eip-3770/index.ts", "../../.pnpm/@safe-global+safe-core-sdk-utils@1.7.4/node_modules/@safe-global/safe-core-sdk-utils/src/eip-712/index.ts", "../../.pnpm/@safe-global+safe-core-sdk-utils@1.7.4/node_modules/@safe-global/safe-core-sdk-utils/src/safeVersions.ts", "../../.pnpm/@safe-global+safe-core-sdk-utils@1.7.4/node_modules/@safe-global/safe-core-sdk-utils/src/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/constants.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/managers/fallbackHandlerManager.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/managers/guardManager.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/managers/moduleManager.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/managers/ownerManager.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/externals.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/constants.ts", "../../.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/index.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/package.json", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/utils.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/base.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/short.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/mont.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/edwards.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curve/index.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/curves.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/key.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/signature.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/ec/index.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/key.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/signature.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic/eddsa/index.js", "../../.pnpm/elliptic@6.6.1/node_modules/elliptic/lib/elliptic.js", "../../.pnpm/secp256k1@4.0.4/node_modules/secp256k1/lib/elliptic.js", "../../.pnpm/secp256k1@4.0.4/node_modules/secp256k1/elliptic.js", "../../.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/src/random.ts", "../../.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/src/secp256k1.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/internal.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/helpers.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/bytes.ts", "../../.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/src/hash-utils.ts", "../../.pnpm/ethereum-cryptography@0.1.3/node_modules/ethereum-cryptography/src/keccak.ts", "../../.pnpm/hash-base@3.1.2/node_modules/hash-base/to-buffer.js", "../../.pnpm/process-nextick-args@2.0.1/node_modules/process-nextick-args/index.js", "../../.pnpm/isarray@1.0.0/node_modules/isarray/index.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/stream-browser.js", "../../.pnpm/safe-buffer@5.1.2/node_modules/safe-buffer/index.js", "../../.pnpm/core-util-is@1.0.3/node_modules/core-util-is/lib/util.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/BufferList.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/internal/streams/destroy.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_writable.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_duplex.js", "../../.pnpm/string_decoder@1.1.1/node_modules/string_decoder/lib/string_decoder.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_readable.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_transform.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/lib/_stream_passthrough.js", "../../.pnpm/readable-stream@2.3.8/node_modules/readable-stream/readable-browser.js", "../../.pnpm/hash-base@3.1.2/node_modules/hash-base/index.js", "../../.pnpm/md5.js@1.3.5/node_modules/md5.js/index.js", "../../.pnpm/ripemd160@2.0.3/node_modules/ripemd160/index.js", "browser-external:stream", "../../.pnpm/cipher-base@1.0.7/node_modules/cipher-base/index.js", "../../.pnpm/create-hash@1.2.0/node_modules/create-hash/browser.js", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/hash.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/types.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/account.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/address.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/signature.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/object.ts", "../../.pnpm/ethereumjs-util@7.1.5/node_modules/ethereumjs-util/src/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/signatures/SafeSignature.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/signatures/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/transactions/SafeTransaction.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/transactions/gas.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/utils/transactions/utils.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/Safe.ts", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/types.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IZkSyncFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IERC20MetadataFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IL1BridgeFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IL2BridgeFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IAllowListFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/IEthTokenFactory.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/typechain/index.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/adapters.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/signer.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IPaymasterFlow.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/paymaster-utils.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IZkSync.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/ContractDeployer.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IL1Messenger.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IERC20.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IERC1271.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IL1Bridge.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/abi/IL2Bridge.json", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/utils.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/wallet.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/provider.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/contract.js", "../../.pnpm/zksync-web3@0.14.4_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/zksync-web3/build/src/index.js", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/safeFactory/utils.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/safeFactory/index.ts", "../../.pnpm/@safe-global+safe-core-sdk@3.3.5_ethers@5.8.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/@safe-global/safe-core-sdk/src/index.ts", "../../.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/src.ts/_version.ts", "../../.pnpm/@ethersproject+logger@5.7.0/node_modules/@ethersproject/logger/src.ts/index.ts", "../../.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/_version.ts", "../../.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts", "../../.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/_version.ts", "../../.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts", "../../.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts", "../../.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/index.ts", "../../.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/src.ts/_version.ts", "../../.pnpm/@ethersproject+properties@5.7.0/node_modules/@ethersproject/properties/src.ts/index.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/_version.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/fragments.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts", "../../.pnpm/@ethersproject+keccak256@5.7.0/node_modules/@ethersproject/keccak256/src.ts/index.ts", "../../.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/src.ts/_version.ts", "../../.pnpm/@ethersproject+rlp@5.7.0/node_modules/@ethersproject/rlp/src.ts/index.ts", "../../.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/src.ts/_version.ts", "../../.pnpm/@ethersproject+address@5.7.0/node_modules/@ethersproject/address/src.ts/index.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/address.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/array.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/boolean.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/bytes.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/null.ts", "../../.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/src.ts/addresses.ts", "../../.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/src.ts/bignumbers.ts", "../../.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/src.ts/hashes.ts", "../../.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/src.ts/strings.ts", "../../.pnpm/@ethersproject+constants@5.7.0/node_modules/@ethersproject/constants/src.ts/index.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/number.ts", "../../.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/src.ts/_version.ts", "../../.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/src.ts/utf8.ts", "../../.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/src.ts/bytes32.ts", "../../.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/src.ts/idna.ts", "../../.pnpm/@ethersproject+strings@5.7.0/node_modules/@ethersproject/strings/src.ts/index.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/string.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/coders/tuple.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/abi-coder.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/interface.ts", "../../.pnpm/@ethersproject+abi@5.7.0/node_modules/@ethersproject/abi/src.ts/index.ts", "../../.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts", "../../.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts", "../../.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts", "../../.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts", "../../.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/_version.ts", "../../.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts", "../../.pnpm/@ethersproject+basex@5.7.0/node_modules/@ethersproject/basex/src.ts/index.ts", "../../.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/src.ts/types.ts", "../../.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/src.ts/_version.ts", "../../.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts", "../../.pnpm/@ethersproject+sha2@5.7.0/node_modules/@ethersproject/sha2/src.ts/index.ts", "../../.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts", "../../.pnpm/@ethersproject+pbkdf2@5.7.0/node_modules/@ethersproject/pbkdf2/src.ts/index.ts", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/minimalistic-assert/index.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/utils.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/inherits/inherits_browser.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/curves.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/node_modules/elliptic/lib/elliptic.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/src.ts/_version.ts", "../../.pnpm/@ethersproject+signing-key@5.7.0/node_modules/@ethersproject/signing-key/src.ts/index.ts", "../../.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/src.ts/_version.ts", "../../.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/src.ts/wordlist.ts", "../../.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/src.ts/lang-en.ts", "../../.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/src.ts/browser-wordlists.ts", "../../.pnpm/@ethersproject+wordlists@5.7.0/node_modules/@ethersproject/wordlists/src.ts/index.ts", "../../.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/src.ts/_version.ts", "../../.pnpm/@ethersproject+hdnode@5.7.0/node_modules/@ethersproject/hdnode/src.ts/index.ts", "../../.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/src.ts/_version.ts", "../../.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/src.ts/browser-random.ts", "../../.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/src.ts/shuffle.ts", "../../.pnpm/@ethersproject+random@5.7.0/node_modules/@ethersproject/random/src.ts/index.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/_version.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/utils.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/inspect.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/keystore.ts", "../../.pnpm/@ethersproject+json-wallets@5.7.0/node_modules/@ethersproject/json-wallets/src.ts/index.ts", "../../.pnpm/@ethersproject+wallet@5.7.0/node_modules/@ethersproject/wallet/src.ts/_version.ts", "../../.pnpm/@ethersproject+wallet@5.7.0/node_modules/@ethersproject/wallet/src.ts/index.ts", "../../.pnpm/@ethersproject+networks@5.7.1/node_modules/@ethersproject/networks/src.ts/_version.ts", "../../.pnpm/@ethersproject+networks@5.7.1/node_modules/@ethersproject/networks/src.ts/index.ts", "../../.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/src.ts/browser-base64.ts", "../../.pnpm/@ethersproject+base64@5.7.0/node_modules/@ethersproject/base64/src.ts/index.ts", "../../.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/src.ts/_version.ts", "../../.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/src.ts/browser-geturl.ts", "../../.pnpm/@ethersproject+web@5.7.1/node_modules/@ethersproject/web/src.ts/index.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/_version.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/formatter.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/base-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/browser-ws.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/websocket-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/ankr-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/fallback-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/infura-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/pocket-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/web3-provider.ts", "../../.pnpm/@ethersproject+providers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@ethersproject/providers/src.ts/index.ts", "../../.pnpm/@ethersproject+solidity@5.7.0/node_modules/@ethersproject/solidity/src.ts/_version.ts", "../../.pnpm/@ethersproject+solidity@5.7.0/node_modules/@ethersproject/solidity/src.ts/index.ts", "../../.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/src.ts/_version.ts", "../../.pnpm/@ethersproject+units@5.7.0/node_modules/@ethersproject/units/src.ts/index.ts", "../../.pnpm/ethers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/src.ts/utils.ts", "../../.pnpm/ethers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/src.ts/_version.ts", "../../.pnpm/ethers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/src.ts/ethers.ts", "../../.pnpm/ethers@5.7.2_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/ethers/src.ts/index.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.0.0/factories/Gnosis_safe__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.0.0/factories/Proxy_factory__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.1.1/factories/Gnosis_safe__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.1.1/factories/Multi_send__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.1.1/factories/Proxy_factory__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.2.0/factories/Gnosis_safe__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Compatibility_fallback_handler__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Gnosis_safe__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Multi_send_call_only__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Multi_send__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Proxy_factory__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Sign_message_lib__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/typechain/src/ethers-v5/v1.3.0/factories/Create_call__factory.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/CompatibilityFallbackHandler/CompatibilityFallbackHandlerEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/CompatibilityFallbackHandler/v1.3.0/CompatibilityFallbackHandler_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/utils/index.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/CreateCall/CreateCallEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/CreateCall/v1.3.0/CreateCallEthersContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/utils/constants.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafe/GnosisSafeContractEthers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafe/v1.0.0/GnosisSafeContract_V1_0_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafe/v1.1.1/GnosisSafeContract_V1_1_1_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafe/v1.2.0/GnosisSafeContract_V1_2_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafe/v1.3.0/GnosisSafeContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafeProxyFactory/GnosisSafeProxyFactoryEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafeProxyFactory/v1.0.0/GnosisSafeProxyFactoryContract_V1_0_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafeProxyFactory/v1.1.1/GnosisSafeProxyFactoryContract_V1_1_1_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/GnosisSafeProxyFactory/v1.3.0/GnosisSafeProxyFactoryContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/MultiSend/MultiSendEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/MultiSend/v1.1.1/MultiSendContract_V1_1_1_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/MultiSend/v1.3.0/MultiSendContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/MultiSendCallOnly/MultiSendCallOnlyEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/MultiSendCallOnly/v1.3.0/MultiSendCallOnlyContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/SignMessageLib/SignMessageLibEthersContract.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/SignMessageLib/v1.3.0/SignMessageLibContract_V1_3_0_Ethers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/contracts/contractInstancesEthers.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/EthersAdapter.ts", "../../.pnpm/@safe-global+safe-ethers-lib@1.9.4_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@safe-global/safe-ethers-lib/src/index.ts", "../../.pnpm/@thirdweb-dev+wallets@2.5.39_@ethersproject+abstract-provider@5.8.0_@ethersproject+abst_1aeb6cf3f58449f29485c00b075a9d50/node_modules/@thirdweb-dev/wallets/evm/connectors/safe/dist/thirdweb-dev-wallets-evm-connectors-safe.browser.esm.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n", "'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n", "'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "// eslint-disable-next-line strict\nmodule.exports = null;\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.27.2\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CompatibilityFallbackHandlerContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CreateCallContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=GnosisSafeContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=GnosisSafeProxyFactoryContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MultiSendCallOnlyContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MultiSendContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=SignMessageLibContract.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=EthAdapter.js.map", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "{\n    \"released\": true,\n    \"contractName\": \"SimulateTxAccessor\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x59AD6735bCd8152B84860Cb256dD9e96b85F69Da\",\n            \"codeHash\": \"0xb3fb9763869f2c09a2ac5a425d2dd6060bf7ef46b3899049d71a711e71e00f04\"\n        },\n        \"eip155\": {\n            \"address\": \"0x727a77a074D1E6c4530e814F89E618a3298FC044\",\n            \"codeHash\": \"0x66712e1d9161706f826d8d74a3cc03db0289b2530a1202f24d52986952b69a02\"\n        },\n        \"zksync\": {\n            \"address\": \"0x4191E2e12E8BC5002424CE0c51f9947b02675a44\",\n            \"codeHash\": \"0x18c486b76cb76981360e96ca4f90fc745fde6a8575b8c2b35ac98eab3856fd72\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"estimate\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SimulateTxAccessor\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x3d4BA2E0884aa488718476ca2FB8Efc291A46199\",\n            \"codeHash\": \"0x91f82615581fc73b190b83d72e883608b25e392f72322035df1b13d51766cf8d\"\n        },\n        \"zksync\": {\n            \"address\": \"0xdd35026932273768A3e31F4efF7313B5B7A7199d\",\n            \"codeHash\": \"0xe772f957acb3987a0b2f1af9e0b515d2a213ec79cbe96a5187e5c5ba6709361e\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"estimate\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SimulateTxAccessor\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x07EfA797c55B5DdE3698d876b277aBb6B893654C\",\n            \"codeHash\": \"0x706db4bb6151f75a5b3845724174e201c59046dfbe65b4e5909ad4b88f8f752d\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"estimate\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"ProxyFactory\",\n    \"version\": \"1.0.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x12302fE9c02ff50939BaAaaf415fc226C078613C\",\n            \"codeHash\": \"0x84a375ad96ab395850d46cd601ed6354d3cf3fb67cec0caf18f34af5c9d1a7f0\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"100\": \"canonical\",\n        \"369\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_mastercopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"proxyCreationCode\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"masterCopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"createProxy\",\n            \"outputs\": [\n                {\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"proxyRuntimeCode\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ProxyCreation\",\n            \"type\": \"event\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"ProxyFactory\",\n    \"version\": \"1.1.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B\",\n            \"codeHash\": \"0x0f0bb9c13be3b595d6f0fde841d5247a96f7e315bd8b97e1363553bee9a7d995\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"88\": \"canonical\",\n        \"100\": \"canonical\",\n        \"246\": \"canonical\",\n        \"369\": \"canonical\",\n        \"73799\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ProxyCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"masterCopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"createProxy\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"proxyRuntimeCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"proxyCreationCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_mastercopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_mastercopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"contract IProxyCreationCallback\",\n                    \"name\": \"callback\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"createProxyWithCallback\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_mastercopy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"calculateCreateProxyWithNonceAddress\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafeProxyFactory\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xa6B71E26C5e0845f74c812102Ca7114b6a896AB2\",\n            \"codeHash\": \"0x337d7f54be11b6ed55fef7b667ea5488db53db8320a05d1146aa4bd169a39a9b\"\n        },\n        \"eip155\": {\n            \"address\": \"0xC22834581EbC8527d974F8a1c97E1bEA4EF910BC\",\n            \"codeHash\": \"0x337d7f54be11b6ed55fef7b667ea5488db53db8320a05d1146aa4bd169a39a9b\"\n        },\n        \"zksync\": {\n            \"address\": \"0xDAec33641865E4651fB43181C6DB6f7232Ee91c2\",\n            \"codeHash\": \"0x55daa5d390d283edbc5fa835bd53befce45179c758feaac8c149a95850d0a6b6\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ProxyCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"calculateCreateProxyWithNonceAddress\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"createProxy\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"contract IProxyCreationCallback\",\n                    \"name\": \"callback\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"createProxyWithCallback\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"proxyCreationCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"proxyRuntimeCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeProxyFactory\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67\",\n            \"codeHash\": \"0x50c3cdc4074750a7a974204a716c999edd37482f907608d960b2b025ee0b3317\"\n        },\n        \"zksync\": {\n            \"address\": \"0xc329D02fd8CB2fc13aa919005aF46320794a8629\",\n            \"codeHash\": \"0xa4915e4a50124b5dce3c9adc34cce8108fc5dbda97d443534699621d6e0013ba\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ProxyCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createChainSpecificProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"contract IProxyCreationCallback\",\n                    \"name\": \"callback\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"createProxyWithCallback\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"proxyCreationCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeProxyFactory\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x14F2982D601c9458F93bd70B218933A6f8165e7b\",\n            \"codeHash\": \"0x967dae4cda22b0c9ef7f31b010bdc1ceb0af9904b0c3dc060b5302e4c18a4529\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"chainId\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChainSpecificProxyCreationL2\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ProxyCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ProxyCreationL2\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createChainSpecificProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createChainSpecificProxyWithNonceL2\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"initializer\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"saltNonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"createProxyWithNonceL2\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract SafeProxy\",\n                    \"name\": \"proxy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"proxyCreationCode\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"DefaultCallbackHandler\",\n    \"version\": \"1.1.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xd5D82B6aDDc9027B22dCA772Aa68D5d74cdBdF44\",\n            \"codeHash\": \"0x919a9f5dd111a01f7a8e4b1f5c6a972bb2d1441c67bdec71de6a09d0be92f5b9\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"88\": \"canonical\",\n        \"100\": \"canonical\",\n        \"246\": \"canonical\",\n        \"369\": \"canonical\",\n        \"73799\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"NAME\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"tokensReceived\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"TokenCallbackHandler\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x54e86d004d71a8D2112ec75FaCE57D730b0433F3\",\n            \"codeHash\": \"0xcbc723172700efa52cc33ee26c7fc7e284edc8097f9dc307857fe525fec98cd8\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"tokensReceived\",\n            \"outputs\": [],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CompatibilityFallbackHandler\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xf48f2B2d2a534e402487b3ee7C18c33Aec0Fe5e4\",\n            \"codeHash\": \"0x03e69f7ce809e81687c69b19a7d7cca45b6d551ffdec73d9bb87178476de1abf\"\n        },\n        \"eip155\": {\n            \"address\": \"0x017062a1dE2FE6b99BE3d9d37841FeD19F573804\",\n            \"codeHash\": \"0x03e69f7ce809e81687c69b19a7d7cca45b6d551ffdec73d9bb87178476de1abf\"\n        },\n        \"zksync\": {\n            \"address\": \"0x2f870a80647BbC554F3a0EBD093f11B4d2a7492A\",\n            \"codeHash\": \"0x017e9a83d5513f503fb85274f4d1ad1811040d7caa31772750ffb08638c28fbb\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"name\": \"NAME\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract GnosisSafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHashForSafe\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"response\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"tokensReceived\",\n            \"outputs\": [],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CompatibilityFallbackHandler\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xfd0732Dc9E303f09fCEf3a7388Ad10A83459Ec99\",\n            \"codeHash\": \"0x7c6007a5d711cea8dfd5d91f5940ec29c7f200fe511eb1fc1397b367af3c42f9\"\n        },\n        \"zksync\": {\n            \"address\": \"0x9301E98DD367135f21bdF66f342A249c9D5F9069\",\n            \"codeHash\": \"0x331ff834e83e6e1596325f04eb7d16614155e324010af21f14e9c945e7669d5f\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Safe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"encodeMessageDataForSafe\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Safe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHashForSafe\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"response\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"tokensReceived\",\n            \"outputs\": [],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CompatibilityFallbackHandler\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x3EfCBb83A4A7AfcB4F68D501E2c2203a38be77f4\",\n            \"codeHash\": \"0x3c6a85bcf7b563daa624b884b4e9a1b9fa5371edde7be945d998071a48f28bbc\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"encodeMessageDataForSafe\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHashForSafe\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"response\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"tokensReceived\",\n            \"outputs\": [],\n            \"stateMutability\": \"pure\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"ExtensibleFallbackHandler\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x85a8ca358D388530ad0fB95D0cb89Dd44Fc242c3\",\n            \"codeHash\": \"0xba5bafdfba82e226b6dc8ae29bedf5026bd854ab4bee00128ca322717a5f2acf\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"AddedInterface\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"domainSeparator\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract ISafeSignatureVerifier\",\n                    \"name\": \"oldVerifier\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract ISafeSignatureVerifier\",\n                    \"name\": \"newVerifier\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedDomainVerifier\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"selector\",\n                    \"type\": \"bytes4\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"oldMethod\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"newMethod\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"ChangedSafeMethod\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"safe\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"RemovedInterface\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"_interfaceId\",\n                    \"type\": \"bytes4\"\n                },\n                {\n                    \"internalType\": \"bytes32[]\",\n                    \"name\": \"handlerWithSelectors\",\n                    \"type\": \"bytes32[]\"\n                }\n            ],\n            \"name\": \"addSupportedInterfaceBatch\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"domainVerifiers\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"contract ISafeSignatureVerifier\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_hash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"magic\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"uint256[]\",\n                    \"name\": \"\",\n                    \"type\": \"uint256[]\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155BatchReceived\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC1155Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"onERC721Received\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"_interfaceId\",\n                    \"type\": \"bytes4\"\n                },\n                {\n                    \"internalType\": \"bytes4[]\",\n                    \"name\": \"selectors\",\n                    \"type\": \"bytes4[]\"\n                }\n            ],\n            \"name\": \"removeSupportedInterfaceBatch\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"safeInterfaces\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract ISafe\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"safeMethods\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"domainSeparator\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"contract ISafeSignatureVerifier\",\n                    \"name\": \"newVerifier\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setDomainVerifier\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"selector\",\n                    \"type\": \"bytes4\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"newMethod\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"setSafeMethod\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                },\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"supported\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"name\": \"setSupportedInterface\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"interfaceId\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"name\": \"supportsInterface\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafe\",\n    \"version\": \"1.0.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xb6029EA3B2c51D09a50B53CA8012FeEB05bDa35A\",\n            \"codeHash\": \"0xe1f1593df76e69abc2d692792c80f329457551d5e83dde597546a1d58764da80\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"100\": \"canonical\",\n        \"369\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"DOMAIN_SEPARATOR_TYPEHASH\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_masterCopy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"changeMasterCopy\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"SENTINEL_MODULES\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"SENTINEL_OWNERS\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"NAME\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"SAFE_MSG_TYPEHASH\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"SAFE_TX_TYPEHASH\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"ExecutionFailed\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ContractCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"requiredTxGas\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafe\",\n    \"version\": \"1.1.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F\",\n            \"codeHash\": \"0x56b8be58b5ad629a621593a2e5e5e8e9a28408dc06e95597497b303902772e45\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"88\": \"canonical\",\n        \"100\": \"canonical\",\n        \"246\": \"canonical\",\n        \"369\": \"canonical\",\n        \"73799\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"masterCopy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"NAME\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_masterCopy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"changeMasterCopy\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"requiredTxGas\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafe\",\n    \"version\": \"1.2.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x6851D6fDFAfD08c0295C392436245E5bc78B0185\",\n            \"codeHash\": \"0x2ae2d1231f0d754a7fa4f5e5d0e5554085e1b500d8e09f95aaaaa3f49c0db922\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"88\": \"canonical\",\n        \"100\": \"canonical\",\n        \"246\": \"canonical\",\n        \"369\": \"canonical\",\n        \"73799\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"masterCopy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"NAME\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"_masterCopy\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"changeMasterCopy\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getModules\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"contract Module\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"requiredTxGas\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"constant\": true,\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafe\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552\",\n            \"codeHash\": \"0xbba688fbdb21ad2bb58bc320638b43d94e7d100f6f3ebaab0a4e4de6304b1c2e\"\n        },\n        \"eip155\": {\n            \"address\": \"0x69f4D1788e39c87893C980c06EdF4b7f686e2938\",\n            \"codeHash\": \"0xbba688fbdb21ad2bb58bc320638b43d94e7d100f6f3ebaab0a4e4de6304b1c2e\"\n        },\n        \"zksync\": {\n            \"address\": \"0xB00ce5CCcdEf57e539ddcEd01DF43a13855d9910\",\n            \"codeHash\": \"0x551b7fdfd2dbcec4f785059e1ef6e0b40ca2e44d792158c4e825bc0b092f15e9\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"requiredTxGas\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"Safe\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x41675C099F32341bf84BFc5382aF534df5C7461a\",\n            \"codeHash\": \"0x1fe2df852ba3299d6534ef416eefa406e56ced995bca886ab7a553e6d0c5e1c4\"\n        },\n        \"zksync\": {\n            \"address\": \"0xC35F063962328aC65cED5D4c3fC5dEf8dec68dFa\",\n            \"codeHash\": \"0xfa4d4fc0fa9f1a061571a3f3f66502464edf1a519ab1ab93dc232addf4fbe30f\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"Safe\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xFf51A5898e281Db6DfC7855790607438dF2ca44b\",\n            \"codeHash\": \"0xdda019cbd7c867a533a2a86e5c53434fdc50b13122b5a5ddb4a8df61b31c20f2\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"moduleGuard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedModuleGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"executor\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"executor\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"moduleGuard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setModuleGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"GnosisSafeL2\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x3E5c63644E683549055b9Be8653de26E0B4CD36E\",\n            \"codeHash\": \"0x21842597390c4c6e3c1239e434a682b054bd9548eee5e9b1d6a4482731023c0f\"\n        },\n        \"eip155\": {\n            \"address\": \"0xfb1bffC9d739B8D520DaF37dF666da4C687191EA\",\n            \"codeHash\": \"0x21842597390c4c6e3c1239e434a682b054bd9548eee5e9b1d6a4482731023c0f\"\n        },\n        \"zksync\": {\n            \"address\": \"0x1727c2c531cf966f902E5927b98490fDFb3b2b70\",\n            \"codeHash\": \"0xe2ca068330339d608367d83a0b25545efe39e619098597699ab8ff828cb1ddd8\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"SafeModuleTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"additionalInfo\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"SafeMultiSigTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"requiredTxGas\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeL2\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x29fcB43b46531BcA003ddC8FCB67FFE91900C762\",\n            \"codeHash\": \"0xb1f926978a0f44a2c0ec8fe822418ae969bd8c3f18d61e5103100339894f81ff\"\n        },\n        \"zksync\": {\n            \"address\": \"0x610fcA2e0279Fa1F8C00c8c2F71dF522AD469380\",\n            \"codeHash\": \"0x520462ebe1156cd2d37b1d470c57f23e12fe0c4cda4c62502d96e03fa0cb44da\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"SafeModuleTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"additionalInfo\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"SafeMultiSigTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"encodeTransactionData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getChainId\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeL2\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xEdd160fEBBD92E350D4D398fb636302fccd67C7e\",\n            \"codeHash\": \"0x180193227186ccb85316c94db1f0d156ed932b14712cfaac78901899178572dc\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"AddedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"approvedHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ApproveHash\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedFallbackHandler\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"moduleGuard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedModuleGuard\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ChangedThreshold\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"DisabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"EnabledModule\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleFailure\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ExecutionFromModuleSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"ExecutionSuccess\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"RemovedOwner\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"SafeModuleTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"additionalInfo\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"SafeMultiSigTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"SafeReceived\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"fallback\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"VERSION\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"string\",\n                    \"name\": \"\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"addOwnerWithThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hashToApprove\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approveHash\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"approvedHashes\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"changeThreshold\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"executor\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"requiredSignatures\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"checkNSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"executor\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"dataHash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"checkSignatures\",\n            \"outputs\": [],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevModule\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"disableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"domainSeparator\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"enableModule\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"execTransaction\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModule\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                }\n            ],\n            \"name\": \"execTransactionFromModuleReturnData\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"success\",\n                    \"type\": \"bool\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"returnData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"start\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"pageSize\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getModulesPaginated\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"array\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"next\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getOwners\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"\",\n                    \"type\": \"address[]\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"offset\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"length\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getStorageAt\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"getThreshold\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_nonce\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"getTransactionHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"txHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"module\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isModuleEnabled\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"isOwner\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"nonce\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"owner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"removeOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"handler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"guard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"moduleGuard\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setModuleGuard\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address[]\",\n                    \"name\": \"_owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"paymentToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"payment\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"paymentReceiver\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setup\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"signedMessages\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"targetContract\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"calldataPayload\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"simulateAndRevert\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"prevOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"oldOwner\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newOwner\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"swapOwner\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"stateMutability\": \"payable\",\n            \"type\": \"receive\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSend\",\n    \"version\": \"1.1.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x8D29bE29923b68abfDD21e541b9374737B49cdAD\",\n            \"codeHash\": \"0xe4e9b4d4c1e3ff06cd51afe0b51eb1b22c0bab51eab38d428ee74540a5ff603e\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"42\": \"canonical\",\n        \"88\": \"canonical\",\n        \"100\": \"canonical\",\n        \"246\": \"canonical\",\n        \"369\": \"canonical\",\n        \"73799\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSend\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761\",\n            \"codeHash\": \"0x0208282bd262360d0320862c5ac70f375f5ed3b9d89a83a615b4d398415bdc83\"\n        },\n        \"eip155\": {\n            \"address\": \"0x998739BFdAAdde7C933B942a68053933098f9EDa\",\n            \"codeHash\": \"0x81db0e4afdf5178583537b58c5ad403bd47a4ac7f9bde2442ef3e341d433126a\"\n        },\n        \"zksync\": {\n            \"address\": \"0x0dFcccB95225ffB03c6FBB2559B530C2B7C8A912\",\n            \"codeHash\": \"0xd9aa004a59b3738a108e747e578ae409b84e9f3ffd689d81b10f4d96000c5f5c\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSend\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x38869bf66a61cF6bDB996A6aE40D5853Fd43B526\",\n            \"codeHash\": \"0x0e4f7fc66550a322d1e7688e181b75e217e662a4f3f4d6a29b22bc61217c4b77\"\n        },\n        \"zksync\": {\n            \"address\": \"0x309D0B190FeCCa8e1D5D8309a16F7e3CB133E885\",\n            \"codeHash\": \"0xcb372f27aba6983e7b54997ebb4a75c35876b2a279238ab914c5415de1e95137\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSend\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x218543288004CD07832472D464648173c77D7eB7\",\n            \"codeHash\": \"0xca1147a12963172a93910c5cb2bfa5ad0e941c7f03fc7eb017dd06a8ea4e5604\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSendCallOnly\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x40A2aCCbd92BCA938b02010E17A5b8929b49130D\",\n            \"codeHash\": \"0xa9865ac2d9c7a1591619b188c4d88167b50df6cc0c5327fcbd1c8c75f7c066ad\"\n        },\n        \"eip155\": {\n            \"address\": \"0xA1dabEF33b3B82c7814B6D82A79e50F4AC44102B\",\n            \"codeHash\": \"0xa9865ac2d9c7a1591619b188c4d88167b50df6cc0c5327fcbd1c8c75f7c066ad\"\n        },\n        \"zksync\": {\n            \"address\": \"0xf220D3b4DFb23C4ade8C88E526C1353AbAcbC38F\",\n            \"codeHash\": \"0x064ddbf252714bcd4cb79f679e8c12df96d998ce07bbb13b3118c1dbf4a31942\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSendCallOnly\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x9641d764fc13c8B624c04430C7356C1C7C8102e2\",\n            \"codeHash\": \"0xecd5bd14a08c5d2122379900b2f272bdf107a7e92423c10dd5fe3254386c9939\"\n        },\n        \"zksync\": {\n            \"address\": \"0x0408EF011960d02349d50286D20531229BCef773\",\n            \"codeHash\": \"0x44c70b30fed5c3a07358a52c2fb028f651031010ef99e4d8c3b45c208e88a264\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"MultiSendCallOnly\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xA83c336B20401Af773B6219BA5027174338D1836\",\n            \"codeHash\": \"0xcdbdcec38d2f1c7d961b0029ff8416b7e86e9974d6f0e9c9580c7d17fcfb6663\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"transactions\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"multiSend\",\n            \"outputs\": [],\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CreateCall\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x7cbB62EaA69F79e6873cD1ecB2392971036cFAa4\",\n            \"codeHash\": \"0x8155d988823a4f6f1bcbc76a64af8e510c4ce68819290d43cf24956bd24dee82\"\n        },\n        \"eip155\": {\n            \"address\": \"0xB19D6FFc2182150F8Eb585b79D4ABcd7C5640A9d\",\n            \"codeHash\": \"0x8155d988823a4f6f1bcbc76a64af8e510c4ce68819290d43cf24956bd24dee82\"\n        },\n        \"zksync\": {\n            \"address\": \"0xcB8e5E438c5c2b45FbE17B02Ca9aF91509a8ad56\",\n            \"codeHash\": \"0x98095337deb9718f4e5ccb1b25a53be5f5e0093502b29df9e857f5e3e12aa194\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ContractCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"performCreate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"salt\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"performCreate2\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CreateCall\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x9b35Af71d77eaf8d7e40252370304687390A1A52\",\n            \"codeHash\": \"0x2b3060c55fcb8275653e99ad511a71f67ba76934ed66a7d74d6e68b52afff889\"\n        },\n        \"zksync\": {\n            \"address\": \"0xAAA566Fe7978bB0fb0B5362B7ba23038f4428D8f\",\n            \"codeHash\": \"0x3aa5b033c45ab4866216847b12f15bca9a94c66ad5bbfbbbc42cc778079059d4\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ContractCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"performCreate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"salt\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"performCreate2\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"CreateCall\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x2Ef5ECfbea521449E4De05EDB1ce63B75eDA90B4\",\n            \"codeHash\": \"0x6b7d8d29bdf7004c4617d95041923774f3f7e74b056bff55c1861c9ec92ce54f\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ContractCreation\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"performCreate\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"deploymentData\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"salt\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"performCreate2\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"newContract\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SignMessageLib\",\n    \"version\": \"1.3.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n            \"codeHash\": \"0x3ac65dea3cc9dd0d7b7b800f834e3d73415b4e944bb94555c3e4a08fb137e918\"\n        },\n        \"eip155\": {\n            \"address\": \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n            \"codeHash\": \"0x3ac65dea3cc9dd0d7b7b800f834e3d73415b4e944bb94555c3e4a08fb137e918\"\n        },\n        \"zksync\": {\n            \"address\": \"0x357147caf9C0cCa67DfA0CF5369318d8193c8407\",\n            \"codeHash\": \"0x9da86f7e32ef976bd442a8eeb353e16d683b53e30e926ae7adce7c609f75b1fc\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": [\"canonical\", \"eip155\"],\n        \"3\": \"canonical\",\n        \"4\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": [\"eip155\", \"canonical\"],\n        \"11\": \"canonical\",\n        \"12\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"eip155\",\n        \"18\": \"eip155\",\n        \"19\": \"eip155\",\n        \"25\": [\"eip155\", \"canonical\"],\n        \"28\": \"eip155\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"42\": \"canonical\",\n        \"43\": [\"eip155\", \"canonical\"],\n        \"44\": [\"eip155\", \"canonical\"],\n        \"46\": [\"eip155\", \"canonical\"],\n        \"50\": [\"eip155\", \"canonical\"],\n        \"51\": [\"canonical\", \"eip155\"],\n        \"56\": [\"canonical\", \"eip155\"],\n        \"57\": \"eip155\",\n        \"61\": \"eip155\",\n        \"63\": \"eip155\",\n        \"69\": \"eip155\",\n        \"71\": \"canonical\",\n        \"81\": \"eip155\",\n        \"82\": \"eip155\",\n        \"83\": [\"eip155\", \"canonical\"],\n        \"96\": \"canonical\",\n        \"97\": \"canonical\",\n        \"100\": [\"canonical\", \"eip155\"],\n        \"106\": \"eip155\",\n        \"108\": \"eip155\",\n        \"109\": \"eip155\",\n        \"111\": \"eip155\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"123\": \"canonical\",\n        \"130\": [\"canonical\", \"eip155\"],\n        \"133\": \"canonical\",\n        \"137\": [\"canonical\", \"eip155\"],\n        \"143\": [\"canonical\", \"eip155\"],\n        \"146\": [\"canonical\", \"eip155\"],\n        \"148\": \"eip155\",\n        \"155\": \"eip155\",\n        \"169\": \"canonical\",\n        \"177\": \"canonical\",\n        \"179\": \"eip155\",\n        \"185\": \"eip155\",\n        \"195\": \"eip155\",\n        \"196\": [\"eip155\", \"canonical\"],\n        \"204\": [\"eip155\", \"canonical\"],\n        \"232\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"239\": [\"eip155\", \"canonical\"],\n        \"240\": \"zksync\",\n        \"246\": \"canonical\",\n        \"250\": [\"canonical\", \"eip155\"],\n        \"252\": [\"eip155\", \"canonical\"],\n        \"255\": \"eip155\",\n        \"274\": \"canonical\",\n        \"280\": \"zksync\",\n        \"282\": \"zksync\",\n        \"288\": \"eip155\",\n        \"291\": \"canonical\",\n        \"295\": \"canonical\",\n        \"296\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"314\": \"eip155\",\n        \"321\": \"canonical\",\n        \"322\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"336\": [\"canonical\", \"eip155\"],\n        \"338\": \"eip155\",\n        \"360\": [\"eip155\", \"canonical\"],\n        \"369\": \"canonical\",\n        \"388\": \"zksync\",\n        \"418\": \"canonical\",\n        \"420\": \"eip155\",\n        \"424\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": [\"canonical\", \"eip155\"],\n        \"545\": \"eip155\",\n        \"570\": \"eip155\",\n        \"588\": \"eip155\",\n        \"592\": [\"canonical\", \"eip155\"],\n        \"595\": \"eip155\",\n        \"599\": \"eip155\",\n        \"648\": [\"canonical\", \"eip155\"],\n        \"686\": \"eip155\",\n        \"690\": [\"eip155\", \"canonical\"],\n        \"698\": \"canonical\",\n        \"747\": \"eip155\",\n        \"787\": \"eip155\",\n        \"919\": [\"canonical\", \"eip155\"],\n        \"943\": \"canonical\",\n        \"999\": [\"canonical\", \"eip155\"],\n        \"1001\": \"eip155\",\n        \"1008\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1088\": [\"eip155\", \"canonical\"],\n        \"1101\": [\"canonical\", \"eip155\"],\n        \"1111\": \"eip155\",\n        \"1112\": \"eip155\",\n        \"1114\": \"canonical\",\n        \"1115\": \"canonical\",\n        \"1116\": \"canonical\",\n        \"1135\": [\"canonical\", \"eip155\"],\n        \"1230\": \"eip155\",\n        \"1231\": \"eip155\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1294\": \"eip155\",\n        \"1315\": [\"eip155\", \"canonical\"],\n        \"1328\": [\"eip155\", \"canonical\"],\n        \"1329\": \"canonical\",\n        \"1337\": \"eip155\",\n        \"1424\": \"canonical\",\n        \"1439\": \"canonical\",\n        \"1442\": \"eip155\",\n        \"1480\": [\"eip155\", \"canonical\"],\n        \"1513\": [\"eip155\", \"canonical\"],\n        \"1514\": [\"eip155\", \"canonical\"],\n        \"1516\": [\"eip155\", \"canonical\"],\n        \"1559\": \"eip155\",\n        \"1625\": \"eip155\",\n        \"1663\": \"eip155\",\n        \"1729\": \"canonical\",\n        \"1740\": [\"eip155\", \"canonical\"],\n        \"1750\": [\"eip155\", \"canonical\"],\n        \"1807\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1890\": \"canonical\",\n        \"1891\": \"canonical\",\n        \"1923\": [\"canonical\", \"eip155\"],\n        \"1924\": [\"canonical\", \"eip155\"],\n        \"1946\": [\"canonical\", \"eip155\"],\n        \"1984\": \"canonical\",\n        \"1998\": \"canonical\",\n        \"2001\": \"canonical\",\n        \"2002\": \"canonical\",\n        \"2008\": \"canonical\",\n        \"2019\": \"canonical\",\n        \"2020\": \"canonical\",\n        \"2021\": \"canonical\",\n        \"2039\": [\"canonical\", \"eip155\"],\n        \"2187\": [\"canonical\", \"eip155\"],\n        \"2192\": [\"canonical\", \"eip155\"],\n        \"2201\": [\"canonical\", \"eip155\"],\n        \"2221\": [\"canonical\", \"eip155\"],\n        \"2222\": [\"canonical\", \"eip155\"],\n        \"2331\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"eip155\",\n        \"2390\": \"eip155\",\n        \"2391\": [\"eip155\", \"canonical\"],\n        \"2741\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"2810\": [\"eip155\", \"canonical\"],\n        \"2818\": [\"canonical\", \"eip155\"],\n        \"3338\": [\"canonical\", \"eip155\"],\n        \"3636\": \"eip155\",\n        \"3637\": [\"canonical\", \"eip155\"],\n        \"3737\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4078\": \"canonical\",\n        \"4157\": \"eip155\",\n        \"4158\": \"eip155\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4460\": \"canonical\",\n        \"4653\": \"eip155\",\n        \"4661\": \"canonical\",\n        \"4689\": \"eip155\",\n        \"4918\": \"canonical\",\n        \"4919\": \"canonical\",\n        \"5000\": [\"eip155\", \"canonical\"],\n        \"5001\": \"eip155\",\n        \"5003\": [\"eip155\", \"canonical\"],\n        \"5115\": [\"eip155\", \"canonical\"],\n        \"5165\": \"canonical\",\n        \"5330\": [\"eip155\", \"canonical\"],\n        \"5700\": [\"eip155\", \"canonical\"],\n        \"6001\": \"canonical\",\n        \"6102\": \"eip155\",\n        \"6398\": \"eip155\",\n        \"6880\": \"canonical\",\n        \"6900\": [\"canonical\", \"eip155\"],\n        \"6911\": [\"canonical\", \"eip155\"],\n        \"7000\": [\"eip155\", \"canonical\"],\n        \"7001\": \"eip155\",\n        \"7070\": \"canonical\",\n        \"7332\": \"eip155\",\n        \"7341\": \"canonical\",\n        \"7560\": [\"canonical\", \"eip155\"],\n        \"7700\": \"eip155\",\n        \"7897\": [\"canonical\", \"eip155\"],\n        \"8008\": [\"canonical\", \"eip155\"],\n        \"8192\": \"eip155\",\n        \"8194\": \"eip155\",\n        \"8217\": \"eip155\",\n        \"8329\": \"canonical\",\n        \"8333\": \"eip155\",\n        \"8453\": [\"eip155\", \"canonical\"],\n        \"8822\": \"eip155\",\n        \"9000\": [\"canonical\", \"eip155\"],\n        \"9001\": [\"canonical\", \"eip155\"],\n        \"9069\": \"canonical\",\n        \"9070\": \"canonical\",\n        \"9728\": \"eip155\",\n        \"9745\": [\"canonical\", \"eip155\"],\n        \"9746\": [\"canonical\", \"eip155\"],\n        \"10000\": \"eip155\",\n        \"10001\": \"eip155\",\n        \"10081\": \"eip155\",\n        \"10200\": \"canonical\",\n        \"10242\": \"eip155\",\n        \"10243\": \"eip155\",\n        \"10849\": \"canonical\",\n        \"11011\": [\"eip155\", \"canonical\"],\n        \"11111\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\", \"eip155\"],\n        \"11235\": \"canonical\",\n        \"11437\": \"canonical\",\n        \"11820\": \"canonical\",\n        \"11891\": \"canonical\",\n        \"12324\": \"canonical\",\n        \"12325\": \"canonical\",\n        \"12357\": \"canonical\",\n        \"12553\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": [\"eip155\", \"canonical\"],\n        \"13473\": [\"eip155\", \"canonical\"],\n        \"13505\": \"eip155\",\n        \"13746\": [\"canonical\", \"eip155\"],\n        \"14800\": \"eip155\",\n        \"16661\": [\"canonical\", \"eip155\"],\n        \"17000\": [\"canonical\", \"eip155\"],\n        \"17069\": [\"eip155\", \"canonical\"],\n        \"17172\": \"eip155\",\n        \"18231\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"22776\": \"canonical\",\n        \"23294\": [\"eip155\", \"canonical\"],\n        \"23295\": [\"eip155\", \"canonical\"],\n        \"25327\": \"eip155\",\n        \"28802\": \"eip155\",\n        \"28882\": [\"eip155\", \"canonical\"],\n        \"28979\": \"canonical\",\n        \"31611\": \"canonical\",\n        \"32323\": \"canonical\",\n        \"32769\": \"eip155\",\n        \"32770\": \"eip155\",\n        \"33101\": \"eip155\",\n        \"33139\": \"eip155\",\n        \"33401\": \"canonical\",\n        \"34443\": [\"canonical\", \"eip155\"],\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"37111\": \"zksync\",\n        \"41455\": [\"canonical\", \"eip155\"],\n        \"41923\": \"eip155\",\n        \"42161\": [\"canonical\", \"eip155\"],\n        \"42170\": \"canonical\",\n        \"42220\": [\"eip155\", \"canonical\"],\n        \"42793\": [\"eip155\", \"canonical\"],\n        \"43111\": [\"eip155\", \"canonical\"],\n        \"43113\": [\"canonical\", \"eip155\"],\n        \"43114\": [\"eip155\", \"canonical\"],\n        \"43288\": \"eip155\",\n        \"44787\": \"canonical\",\n        \"45000\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"47805\": \"canonical\",\n        \"48898\": [\"eip155\", \"canonical\"],\n        \"48899\": [\"eip155\", \"canonical\"],\n        \"48900\": [\"canonical\", \"eip155\"],\n        \"50104\": \"zksync\",\n        \"53456\": \"canonical\",\n        \"53457\": \"canonical\",\n        \"54211\": \"eip155\",\n        \"56288\": \"eip155\",\n        \"57000\": \"eip155\",\n        \"57054\": \"canonical\",\n        \"57073\": [\"eip155\", \"canonical\"],\n        \"58008\": \"canonical\",\n        \"59140\": [\"canonical\", \"eip155\"],\n        \"59141\": [\"canonical\", \"eip155\"],\n        \"59144\": [\"canonical\", \"eip155\"],\n        \"60808\": [\"canonical\", \"eip155\"],\n        \"61166\": \"zksync\",\n        \"71401\": \"eip155\",\n        \"71402\": \"eip155\",\n        \"73799\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": [\"canonical\", \"eip155\"],\n        \"80084\": \"canonical\",\n        \"80085\": [\"canonical\", \"eip155\"],\n        \"80094\": [\"canonical\", \"eip155\"],\n        \"81224\": [\"canonical\", \"eip155\"],\n        \"81457\": [\"canonical\", \"eip155\"],\n        \"83291\": \"canonical\",\n        \"84531\": \"eip155\",\n        \"84532\": [\"eip155\", \"canonical\"],\n        \"97435\": \"canonical\",\n        \"103454\": \"eip155\",\n        \"111188\": \"canonical\",\n        \"128123\": [\"eip155\", \"canonical\"],\n        \"167000\": [\"eip155\", \"canonical\"],\n        \"167008\": \"canonical\",\n        \"167009\": [\"eip155\", \"canonical\"],\n        \"175188\": \"canonical\",\n        \"200101\": \"canonical\",\n        \"200202\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"314159\": \"eip155\",\n        \"328527\": \"canonical\",\n        \"333999\": \"canonical\",\n        \"421611\": \"canonical\",\n        \"421613\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"490000\": [\"eip155\", \"canonical\"],\n        \"534351\": [\"canonical\", \"eip155\"],\n        \"534352\": [\"canonical\", \"eip155\"],\n        \"534353\": \"eip155\",\n        \"543210\": [\"zksync\", \"canonical\"],\n        \"555666\": \"canonical\",\n        \"560048\": [\"eip155\", \"canonical\"],\n        \"622277\": \"canonical\",\n        \"656476\": [\"eip155\", \"canonical\"],\n        \"657468\": [\"canonical\", \"eip155\"],\n        \"660279\": \"canonical\",\n        \"668668\": \"canonical\",\n        \"688688\": \"eip155\",\n        \"695569\": [\"eip155\", \"canonical\"],\n        \"713715\": [\"eip155\", \"canonical\"],\n        \"747474\": [\"eip155\", \"canonical\"],\n        \"763373\": \"eip155\",\n        \"764984\": \"canonical\",\n        \"808813\": [\"eip155\", \"canonical\"],\n        \"810180\": \"zksync\",\n        \"978657\": \"canonical\",\n        \"4457845\": \"zksync\",\n        \"6038361\": [\"eip155\", \"canonical\"],\n        \"7225878\": \"eip155\",\n        \"7777777\": [\"canonical\", \"eip155\"],\n        \"11155111\": [\"eip155\", \"canonical\"],\n        \"11155420\": \"eip155\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"eip155\",\n        \"94204209\": [\"canonical\", \"eip155\"],\n        \"111557560\": [\"canonical\", \"eip155\"],\n        \"123420111\": [\"canonical\", \"eip155\"],\n        \"161221135\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"222000222\": \"canonical\",\n        \"245022926\": \"eip155\",\n        \"245022934\": \"eip155\",\n        \"328527624\": \"canonical\",\n        \"333000333\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": [\"canonical\", \"eip155\"],\n        \"888888888\": \"canonical\",\n        \"999999999\": [\"canonical\", \"eip155\"],\n        \"1313161554\": [\"canonical\", \"eip155\"],\n        \"1313161555\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1666600000\": \"eip155\",\n        \"1666700000\": \"eip155\",\n        \"11297108099\": \"canonical\",\n        \"11297108109\": \"canonical\",\n        \"37714555429\": \"canonical\",\n        \"88153591557\": [\"canonical\", \"eip155\"],\n        \"920637907288165\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SignMessageLib\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xd53cd0aB83D845Ac265BE939c57F53AD838012c9\",\n            \"codeHash\": \"0x525c754a46b79e05543a59bb61e8de3c9eee0d955a59352409cbe67ea1077528\"\n        },\n        \"zksync\": {\n            \"address\": \"0xAca1ec0a1A575CDCCF1DC3d5d296202Eb6061888\",\n            \"codeHash\": \"0x3e762bdca5f7d61c70e7ad1d1cb7b999481954543e7c29540e757d3e7004aa6b\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"5\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"16\": \"canonical\",\n        \"19\": \"canonical\",\n        \"25\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"40\": \"canonical\",\n        \"41\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"71\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"97\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"114\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"155\": \"canonical\",\n        \"169\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"250\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"338\": \"canonical\",\n        \"360\": \"canonical\",\n        \"369\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"530\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1030\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1442\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1729\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1811\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2000\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"3776\": \"canonical\",\n        \"4002\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4062\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4162\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4337\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4653\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6001\": \"canonical\",\n        \"6321\": \"canonical\",\n        \"6322\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6688\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7171\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7771\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8192\": \"canonical\",\n        \"8194\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10243\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"11235\": \"canonical\",\n        \"11501\": \"canonical\",\n        \"11503\": \"canonical\",\n        \"13337\": \"canonical\",\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"17069\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"35441\": \"canonical\",\n        \"35443\": \"canonical\",\n        \"41455\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"54211\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59140\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80001\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80085\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84531\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"90001\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"105105\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"205205\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"421614\": \"canonical\",\n        \"444444\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534351\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"555666\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"6038361\": \"canonical\",\n        \"7225878\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"9999999\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"52164803\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"94204209\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"123420111\": \"canonical\",\n        \"168587773\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"476462898\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"666666666\": \"canonical\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1313161555\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1511670449\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\",\n        \"88153591557\": \"canonical\",\n        \"123420000220\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SignMessageLib\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x4FfeF8222648872B3dE295Ba1e49110E61f5b5aa\",\n            \"codeHash\": \"0xd61840855da008da59a00fc03fb71455b4f70bdca1f56f9504f072ed8d90c50e\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"msgHash\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"name\": \"SignMsg\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"message\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"getMessageHash\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"_data\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"signMessage\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeMigration\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x526643F69b81B008F46d95CD5ced5eC0edFFDaC6\",\n            \"codeHash\": \"0xc00d7921460cd5a05393e7772e634bd7d212f356356aa3a77f0120a9b8e25e99\"\n        },\n        \"zksync\": {\n            \"address\": \"0x817756C6c555A94BCEE39eB5a102AbC1678b09A7\",\n            \"codeHash\": \"0x6815c12fbdeb438fb0fb1e1484ac190ca2fc98065b93f95db846596c3c0eee70\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"360\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"safeSingleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"safeL2Singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"MIGRATION_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_FALLBACK_HANDLER\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_L2_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateL2Singleton\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateL2WithFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateSingleton\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateWithFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeMigration\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x6439e7ABD8Bb915A5263094784C5CF561c4172AC\",\n            \"codeHash\": \"0x52d7472fa02c3a574544f9b5a4ed4c7777e4e3315217e368926b51e1cc6014ea\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"safeSingleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"safeL2Singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"MIGRATION_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_FALLBACK_HANDLER\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_L2_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"SAFE_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateL2Singleton\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateL2WithFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateSingleton\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"migrateWithFallbackHandler\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeToL2Migration\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xfF83F6335d8930cBad1c0D439A841f01888D9f69\",\n            \"codeHash\": \"0xa83e7be2fa20c96dc9575e3937239d552f3831ea437d7c96397eec8736f0cba0\"\n        },\n        \"zksync\": {\n            \"address\": \"0xa26620d1f8f1a2433F0D25027F141aaCAFB3E590\",\n            \"codeHash\": \"0x2a68d940fb2460312e98bc36be0efaeff392237039e7282bc12155f049287c70\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"360\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"enum Enum.Operation\",\n                    \"name\": \"operation\",\n                    \"type\": \"uint8\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"safeTxGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"baseGas\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"gasPrice\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"gasToken\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address payable\",\n                    \"name\": \"refundReceiver\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signatures\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"bytes\",\n                    \"name\": \"additionalInfo\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"SafeMultiSigTransaction\",\n            \"type\": \"event\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"initiator\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address[]\",\n                    \"name\": \"owners\",\n                    \"type\": \"address[]\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"threshold\",\n                    \"type\": \"uint256\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"initializer\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"SafeSetup\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [],\n            \"name\": \"MIGRATION_SINGLETON\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"l2Singleton\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"fallbackHandler\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"migrateFromV111\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"l2Singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"migrateToL2\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeToL2Setup\",\n    \"version\": \"1.4.1\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0xBD89A1CE4DDe368FFAB0eC35506eEcE0b1fFdc54\",\n            \"codeHash\": \"0x2f25df28caf984366ee584e13241707e85dcd5a6ea0c14267928dafc1fd6274b\"\n        },\n        \"zksync\": {\n            \"address\": \"0x199A9df0224031c20Cc27083A4164c9c8F1Bcb39\",\n            \"codeHash\": \"0x0bbcc5092b50efd183bb46cfe3f61abca3226cea4f612f23f22bb222cd7b3d45\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"10\": \"canonical\",\n        \"14\": \"canonical\",\n        \"30\": \"canonical\",\n        \"31\": \"canonical\",\n        \"39\": \"canonical\",\n        \"44\": \"canonical\",\n        \"46\": \"canonical\",\n        \"50\": \"canonical\",\n        \"51\": \"canonical\",\n        \"56\": \"canonical\",\n        \"81\": \"canonical\",\n        \"88\": \"canonical\",\n        \"98\": \"canonical\",\n        \"100\": \"canonical\",\n        \"122\": \"canonical\",\n        \"130\": \"canonical\",\n        \"133\": \"canonical\",\n        \"137\": \"canonical\",\n        \"143\": \"canonical\",\n        \"146\": \"canonical\",\n        \"150\": \"canonical\",\n        \"173\": \"canonical\",\n        \"177\": \"canonical\",\n        \"181\": \"canonical\",\n        \"185\": \"canonical\",\n        \"196\": \"canonical\",\n        \"204\": \"canonical\",\n        \"228\": \"canonical\",\n        \"232\": [\"zksync\", \"canonical\"],\n        \"239\": \"canonical\",\n        \"252\": \"canonical\",\n        \"255\": \"canonical\",\n        \"288\": \"canonical\",\n        \"300\": [\"zksync\", \"canonical\"],\n        \"314\": \"canonical\",\n        \"324\": [\"zksync\", \"canonical\"],\n        \"336\": \"canonical\",\n        \"360\": \"canonical\",\n        \"466\": \"canonical\",\n        \"478\": \"canonical\",\n        \"480\": \"canonical\",\n        \"545\": \"canonical\",\n        \"592\": \"canonical\",\n        \"690\": \"canonical\",\n        \"747\": \"canonical\",\n        \"842\": \"canonical\",\n        \"870\": \"canonical\",\n        \"919\": \"canonical\",\n        \"938\": \"canonical\",\n        \"964\": \"canonical\",\n        \"970\": \"canonical\",\n        \"995\": \"canonical\",\n        \"999\": \"canonical\",\n        \"1001\": \"canonical\",\n        \"1101\": \"canonical\",\n        \"1111\": \"canonical\",\n        \"1112\": \"canonical\",\n        \"1125\": \"canonical\",\n        \"1135\": \"canonical\",\n        \"1284\": \"canonical\",\n        \"1285\": \"canonical\",\n        \"1287\": \"canonical\",\n        \"1301\": \"canonical\",\n        \"1315\": \"canonical\",\n        \"1328\": \"canonical\",\n        \"1329\": \"canonical\",\n        \"1337\": \"canonical\",\n        \"1424\": \"canonical\",\n        \"1480\": \"canonical\",\n        \"1514\": \"canonical\",\n        \"1516\": \"canonical\",\n        \"1625\": \"canonical\",\n        \"1663\": \"canonical\",\n        \"1740\": \"canonical\",\n        \"1750\": \"canonical\",\n        \"1868\": \"canonical\",\n        \"1923\": \"canonical\",\n        \"1924\": \"canonical\",\n        \"1946\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"2039\": \"canonical\",\n        \"2187\": \"canonical\",\n        \"2192\": \"canonical\",\n        \"2201\": \"canonical\",\n        \"2221\": \"canonical\",\n        \"2345\": \"canonical\",\n        \"2358\": \"canonical\",\n        \"2390\": \"canonical\",\n        \"2391\": \"canonical\",\n        \"2424\": \"canonical\",\n        \"2442\": \"canonical\",\n        \"2741\": [\"zksync\", \"canonical\"],\n        \"2810\": \"canonical\",\n        \"2818\": \"canonical\",\n        \"3068\": \"canonical\",\n        \"3338\": \"canonical\",\n        \"3501\": \"canonical\",\n        \"3636\": \"canonical\",\n        \"3637\": \"canonical\",\n        \"4061\": \"canonical\",\n        \"4157\": \"canonical\",\n        \"4158\": \"canonical\",\n        \"4202\": \"canonical\",\n        \"4488\": \"canonical\",\n        \"4661\": \"canonical\",\n        \"5000\": \"canonical\",\n        \"5003\": \"canonical\",\n        \"5115\": \"canonical\",\n        \"5330\": \"canonical\",\n        \"5611\": \"canonical\",\n        \"5851\": \"canonical\",\n        \"6342\": \"canonical\",\n        \"6398\": \"canonical\",\n        \"6900\": \"canonical\",\n        \"6911\": \"canonical\",\n        \"6942\": \"canonical\",\n        \"7000\": \"canonical\",\n        \"7001\": \"canonical\",\n        \"7200\": \"canonical\",\n        \"7560\": \"canonical\",\n        \"7897\": \"canonical\",\n        \"8008\": \"canonical\",\n        \"8217\": \"canonical\",\n        \"8408\": \"canonical\",\n        \"8453\": \"canonical\",\n        \"8801\": \"canonical\",\n        \"8844\": \"canonical\",\n        \"9001\": \"canonical\",\n        \"9369\": \"canonical\",\n        \"9700\": \"canonical\",\n        \"9728\": \"canonical\",\n        \"9745\": \"canonical\",\n        \"9746\": \"canonical\",\n        \"10081\": \"canonical\",\n        \"10143\": \"canonical\",\n        \"10242\": \"canonical\",\n        \"10888\": \"canonical\",\n        \"11011\": \"canonical\",\n        \"11124\": [\"zksync\", \"canonical\"],\n        \"13371\": \"canonical\",\n        \"13473\": \"canonical\",\n        \"13505\": \"canonical\",\n        \"13746\": \"canonical\",\n        \"14800\": \"canonical\",\n        \"16661\": \"canonical\",\n        \"17000\": \"canonical\",\n        \"18233\": \"canonical\",\n        \"18880\": \"canonical\",\n        \"23294\": \"canonical\",\n        \"23295\": \"canonical\",\n        \"28802\": \"canonical\",\n        \"28882\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"32769\": \"canonical\",\n        \"32770\": \"canonical\",\n        \"33101\": \"canonical\",\n        \"33139\": \"canonical\",\n        \"34443\": \"canonical\",\n        \"41923\": \"canonical\",\n        \"42161\": \"canonical\",\n        \"42220\": \"canonical\",\n        \"42421\": \"canonical\",\n        \"42793\": \"canonical\",\n        \"43111\": \"canonical\",\n        \"43114\": \"canonical\",\n        \"43419\": \"canonical\",\n        \"44787\": \"canonical\",\n        \"47763\": \"canonical\",\n        \"48898\": \"canonical\",\n        \"48899\": \"canonical\",\n        \"48900\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"49321\": \"canonical\",\n        \"50104\": \"zksync\",\n        \"50312\": \"canonical\",\n        \"53302\": \"canonical\",\n        \"55244\": \"canonical\",\n        \"57000\": \"canonical\",\n        \"57054\": \"canonical\",\n        \"57073\": \"canonical\",\n        \"59141\": \"canonical\",\n        \"59144\": \"canonical\",\n        \"59902\": \"canonical\",\n        \"60808\": \"canonical\",\n        \"66665\": \"canonical\",\n        \"72080\": \"canonical\",\n        \"80002\": \"canonical\",\n        \"80069\": \"canonical\",\n        \"80094\": \"canonical\",\n        \"81224\": \"canonical\",\n        \"81457\": \"canonical\",\n        \"84532\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"98864\": \"canonical\",\n        \"98865\": \"canonical\",\n        \"98867\": \"canonical\",\n        \"111188\": \"canonical\",\n        \"128123\": \"canonical\",\n        \"167000\": \"canonical\",\n        \"167009\": \"canonical\",\n        \"175188\": \"canonical\",\n        \"200810\": \"canonical\",\n        \"200901\": \"canonical\",\n        \"210425\": \"canonical\",\n        \"314159\": \"canonical\",\n        \"325000\": \"canonical\",\n        \"381931\": \"canonical\",\n        \"490000\": \"canonical\",\n        \"534352\": \"canonical\",\n        \"543210\": \"canonical\",\n        \"560048\": \"canonical\",\n        \"656476\": \"canonical\",\n        \"657468\": \"canonical\",\n        \"688688\": \"canonical\",\n        \"695569\": \"canonical\",\n        \"713715\": \"canonical\",\n        \"743111\": \"canonical\",\n        \"747474\": \"canonical\",\n        \"763373\": \"canonical\",\n        \"808813\": \"canonical\",\n        \"839999\": \"canonical\",\n        \"984122\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"1501869\": \"canonical\",\n        \"2206132\": \"canonical\",\n        \"2632500\": \"canonical\",\n        \"3441006\": \"canonical\",\n        \"7777777\": \"canonical\",\n        \"11155111\": \"canonical\",\n        \"11155420\": \"canonical\",\n        \"11155931\": \"canonical\",\n        \"12227332\": \"canonical\",\n        \"21000000\": \"canonical\",\n        \"65100004\": \"canonical\",\n        \"111557560\": \"canonical\",\n        \"245022934\": \"canonical\",\n        \"253368190\": \"canonical\",\n        \"531050104\": \"zksync\",\n        \"994873017\": \"canonical\",\n        \"999999999\": \"canonical\",\n        \"1313161554\": \"canonical\",\n        \"1417429182\": \"canonical\",\n        \"1570754601\": \"canonical\",\n        \"1660990954\": \"canonical\",\n        \"1666600000\": \"canonical\",\n        \"1666700000\": \"canonical\",\n        \"1952959480\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"l2Singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setupToL2\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "{\n    \"released\": true,\n    \"contractName\": \"SafeToL2Setup\",\n    \"version\": \"1.5.0\",\n    \"deployments\": {\n        \"canonical\": {\n            \"address\": \"0x900C7589200010D6C6eCaaE5B06EBe653bc2D82a\",\n            \"codeHash\": \"0xf6034d841bcbff8912aa55526b0f1609212536aaf60bb16f5e8a269a4ab38f18\"\n        }\n    },\n    \"networkAddresses\": {\n        \"1\": \"canonical\",\n        \"1995\": \"canonical\",\n        \"5424\": \"canonical\",\n        \"5887\": \"canonical\",\n        \"9302\": \"canonical\",\n        \"32380\": \"canonical\",\n        \"49088\": \"canonical\",\n        \"88811\": \"canonical\",\n        \"88817\": \"canonical\",\n        \"843843\": \"canonical\",\n        \"1440000\": \"canonical\",\n        \"1449000\": \"canonical\",\n        \"11155111\": \"canonical\"\n    },\n    \"abi\": [\n        {\n            \"inputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        },\n        {\n            \"anonymous\": false,\n            \"inputs\": [\n                {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"ChangedMasterCopy\",\n            \"type\": \"event\"\n        },\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"address\",\n                    \"name\": \"l2Singleton\",\n                    \"type\": \"address\"\n                }\n            ],\n            \"name\": \"setupToL2\",\n            \"outputs\": [],\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ]\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._SAFE_TO_L2_SETUP_DEPLOYMENTS = exports._SAFE_TO_L2_MIGRATION_DEPLOYMENTS = exports._SAFE_MIGRATION_DEPLOYMENTS = exports._SIGN_MESSAGE_LIB_DEPLOYMENTS = exports._CREATE_CALL_DEPLOYMENTS = exports._MULTI_SEND_CALL_ONLY_DEPLOYMENTS = exports._MULTI_SEND_DEPLOYMENTS = exports._SAFE_L2_DEPLOYMENTS = exports._SAFE_DEPLOYMENTS = exports._EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS = exports._COMPAT_FALLBACK_HANDLER_DEPLOYMENTS = exports._TOKEN_CALLBACK_HANDLER_DEPLOYMENTS = exports._FACTORY_DEPLOYMENTS = exports._ACCESSOR_DEPLOYMENTS = void 0;\n// This is a file where all the deployments are consolidated\n// We do it in a separate file so we don't have to repeat comments about the array order and the type casting.\n// We use some specific types (like `AddressType`) in the `SingletonDeploymentJSON` type, but the TypeScript cannot infer that from the JSON files.\n// So we need to cast them to `SingletonDeploymentJSON` manually. The casting is valid because we have a test in `__tests__/assets.test.ts` that checks that the JSON files are valid.\n// The arrays are sorted by preference, which at the moment means from the most recent version to the oldest.\n// The arrays are prefixed with an underscore because they are not meant to be imported directly.\nconst simulate_tx_accessor_json_1 = __importDefault(require(\"./assets/v1.3.0/simulate_tx_accessor.json\"));\nconst simulate_tx_accessor_json_2 = __importDefault(require(\"./assets/v1.4.1/simulate_tx_accessor.json\"));\nconst simulate_tx_accessor_json_3 = __importDefault(require(\"./assets/v1.5.0/simulate_tx_accessor.json\"));\nconst _ACCESSOR_DEPLOYMENTS = [\n    simulate_tx_accessor_json_3.default,\n    simulate_tx_accessor_json_2.default,\n    simulate_tx_accessor_json_1.default,\n];\nexports._ACCESSOR_DEPLOYMENTS = _ACCESSOR_DEPLOYMENTS;\nconst proxy_factory_json_1 = __importDefault(require(\"./assets/v1.0.0/proxy_factory.json\"));\nconst proxy_factory_json_2 = __importDefault(require(\"./assets/v1.1.1/proxy_factory.json\"));\nconst proxy_factory_json_3 = __importDefault(require(\"./assets/v1.3.0/proxy_factory.json\"));\nconst safe_proxy_factory_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_proxy_factory.json\"));\nconst safe_proxy_factory_json_2 = __importDefault(require(\"./assets/v1.5.0/safe_proxy_factory.json\"));\nconst _FACTORY_DEPLOYMENTS = [\n    safe_proxy_factory_json_2.default,\n    safe_proxy_factory_json_1.default,\n    proxy_factory_json_3.default,\n    proxy_factory_json_2.default,\n    proxy_factory_json_1.default,\n];\nexports._FACTORY_DEPLOYMENTS = _FACTORY_DEPLOYMENTS;\nconst default_callback_handler_json_1 = __importDefault(require(\"./assets/v1.1.1/default_callback_handler.json\"));\nconst token_callback_handler_json_1 = __importDefault(require(\"./assets/v1.5.0/token_callback_handler.json\"));\nconst _TOKEN_CALLBACK_HANDLER_DEPLOYMENTS = [\n    token_callback_handler_json_1.default,\n    default_callback_handler_json_1.default,\n];\nexports._TOKEN_CALLBACK_HANDLER_DEPLOYMENTS = _TOKEN_CALLBACK_HANDLER_DEPLOYMENTS;\nconst compatibility_fallback_handler_json_1 = __importDefault(require(\"./assets/v1.3.0/compatibility_fallback_handler.json\"));\nconst compatibility_fallback_handler_json_2 = __importDefault(require(\"./assets/v1.4.1/compatibility_fallback_handler.json\"));\nconst compatibility_fallback_handler_json_3 = __importDefault(require(\"./assets/v1.5.0/compatibility_fallback_handler.json\"));\nconst _COMPAT_FALLBACK_HANDLER_DEPLOYMENTS = [\n    compatibility_fallback_handler_json_3.default,\n    compatibility_fallback_handler_json_2.default,\n    compatibility_fallback_handler_json_1.default,\n];\nexports._COMPAT_FALLBACK_HANDLER_DEPLOYMENTS = _COMPAT_FALLBACK_HANDLER_DEPLOYMENTS;\nconst extensible_fallback_handler_json_1 = __importDefault(require(\"./assets/v1.5.0/extensible_fallback_handler.json\"));\nconst _EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS = [extensible_fallback_handler_json_1.default];\nexports._EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS = _EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS;\nconst gnosis_safe_json_1 = __importDefault(require(\"./assets/v1.0.0/gnosis_safe.json\"));\nconst gnosis_safe_json_2 = __importDefault(require(\"./assets/v1.1.1/gnosis_safe.json\"));\nconst gnosis_safe_json_3 = __importDefault(require(\"./assets/v1.2.0/gnosis_safe.json\"));\nconst gnosis_safe_json_4 = __importDefault(require(\"./assets/v1.3.0/gnosis_safe.json\"));\nconst safe_json_1 = __importDefault(require(\"./assets/v1.4.1/safe.json\"));\nconst safe_json_2 = __importDefault(require(\"./assets/v1.5.0/safe.json\"));\nconst _SAFE_DEPLOYMENTS = [\n    safe_json_2.default,\n    safe_json_1.default,\n    gnosis_safe_json_4.default,\n    gnosis_safe_json_3.default,\n    gnosis_safe_json_2.default,\n    gnosis_safe_json_1.default,\n];\nexports._SAFE_DEPLOYMENTS = _SAFE_DEPLOYMENTS;\nconst gnosis_safe_l2_json_1 = __importDefault(require(\"./assets/v1.3.0/gnosis_safe_l2.json\"));\nconst safe_l2_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_l2.json\"));\nconst safe_l2_json_2 = __importDefault(require(\"./assets/v1.5.0/safe_l2.json\"));\nconst _SAFE_L2_DEPLOYMENTS = [safe_l2_json_2.default, safe_l2_json_1.default, gnosis_safe_l2_json_1.default];\nexports._SAFE_L2_DEPLOYMENTS = _SAFE_L2_DEPLOYMENTS;\nconst multi_send_json_1 = __importDefault(require(\"./assets/v1.1.1/multi_send.json\"));\nconst multi_send_json_2 = __importDefault(require(\"./assets/v1.3.0/multi_send.json\"));\nconst multi_send_json_3 = __importDefault(require(\"./assets/v1.4.1/multi_send.json\"));\nconst multi_send_json_4 = __importDefault(require(\"./assets/v1.5.0/multi_send.json\"));\nconst _MULTI_SEND_DEPLOYMENTS = [multi_send_json_4.default, multi_send_json_3.default, multi_send_json_2.default, multi_send_json_1.default];\nexports._MULTI_SEND_DEPLOYMENTS = _MULTI_SEND_DEPLOYMENTS;\nconst multi_send_call_only_json_1 = __importDefault(require(\"./assets/v1.3.0/multi_send_call_only.json\"));\nconst multi_send_call_only_json_2 = __importDefault(require(\"./assets/v1.4.1/multi_send_call_only.json\"));\nconst multi_send_call_only_json_3 = __importDefault(require(\"./assets/v1.5.0/multi_send_call_only.json\"));\nconst _MULTI_SEND_CALL_ONLY_DEPLOYMENTS = [\n    multi_send_call_only_json_3.default,\n    multi_send_call_only_json_2.default,\n    multi_send_call_only_json_1.default,\n];\nexports._MULTI_SEND_CALL_ONLY_DEPLOYMENTS = _MULTI_SEND_CALL_ONLY_DEPLOYMENTS;\nconst create_call_json_1 = __importDefault(require(\"./assets/v1.3.0/create_call.json\"));\nconst create_call_json_2 = __importDefault(require(\"./assets/v1.4.1/create_call.json\"));\nconst create_call_json_3 = __importDefault(require(\"./assets/v1.5.0/create_call.json\"));\nconst _CREATE_CALL_DEPLOYMENTS = [create_call_json_3.default, create_call_json_2.default, create_call_json_1.default];\nexports._CREATE_CALL_DEPLOYMENTS = _CREATE_CALL_DEPLOYMENTS;\nconst sign_message_lib_json_1 = __importDefault(require(\"./assets/v1.3.0/sign_message_lib.json\"));\nconst sign_message_lib_json_2 = __importDefault(require(\"./assets/v1.4.1/sign_message_lib.json\"));\nconst sign_message_lib_json_3 = __importDefault(require(\"./assets/v1.5.0/sign_message_lib.json\"));\nconst _SIGN_MESSAGE_LIB_DEPLOYMENTS = [\n    sign_message_lib_json_3.default,\n    sign_message_lib_json_2.default,\n    sign_message_lib_json_1.default,\n];\nexports._SIGN_MESSAGE_LIB_DEPLOYMENTS = _SIGN_MESSAGE_LIB_DEPLOYMENTS;\nconst safe_migration_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_migration.json\"));\nconst safe_migration_json_2 = __importDefault(require(\"./assets/v1.5.0/safe_migration.json\"));\nconst _SAFE_MIGRATION_DEPLOYMENTS = [safe_migration_json_2.default, safe_migration_json_1.default];\nexports._SAFE_MIGRATION_DEPLOYMENTS = _SAFE_MIGRATION_DEPLOYMENTS;\nconst safe_to_l2_migration_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_to_l2_migration.json\"));\nconst _SAFE_TO_L2_MIGRATION_DEPLOYMENTS = [safe_to_l2_migration_json_1.default];\nexports._SAFE_TO_L2_MIGRATION_DEPLOYMENTS = _SAFE_TO_L2_MIGRATION_DEPLOYMENTS;\nconst safe_to_l2_setup_json_1 = __importDefault(require(\"./assets/v1.4.1/safe_to_l2_setup.json\"));\nconst safe_to_l2_setup_json_2 = __importDefault(require(\"./assets/v1.5.0/safe_to_l2_setup.json\"));\nconst _SAFE_TO_L2_SETUP_DEPLOYMENTS = [safe_to_l2_setup_json_2.default, safe_to_l2_setup_json_1.default];\nexports._SAFE_TO_L2_SETUP_DEPLOYMENTS = _SAFE_TO_L2_SETUP_DEPLOYMENTS;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findDeployment = findDeployment;\nconst satisfies_1 = __importDefault(require(\"semver/functions/satisfies\"));\nconst DEFAULT_FILTER = { released: true };\n// The older JSON format had a `defaultAddress` field, which became obsolete due to EIP-155 enforcement and non-EVM compatible chains.\n// This led to multiple \"default\" addresses, sometimes on the same chain ID. To maintain backwards compatibility, we map `defaultAddress`\n// to the address deployed on a chosen default network.\nconst DEFAULT_NETWORK_CHAIN_ID = '1';\n/**\n * Maps a SingletonDeploymentJSON object to a SingletonDeployment object.\n *\n * @param {SingletonDeploymentJSON} deployment - The deployment JSON object to map.\n * @returns {SingletonDeployment} - The mapped deployment object.\n */\nconst mapJsonToDeploymentsFormatV1 = (deployment) => {\n    const defaultAddressType = Array.isArray(deployment.networkAddresses[DEFAULT_NETWORK_CHAIN_ID])\n        ? deployment.networkAddresses[DEFAULT_NETWORK_CHAIN_ID][0]\n        : deployment.networkAddresses[DEFAULT_NETWORK_CHAIN_ID];\n    // The usage of non-null assertion below is safe, because we validate that the asset files are properly formed in tests\n    const defaultAddress = deployment.deployments[defaultAddressType].address;\n    const networkAddresses = Object.fromEntries(Object.entries(deployment.networkAddresses).map(([chainId, addressTypes]) => [\n        chainId,\n        Array.isArray(addressTypes)\n            ? deployment.deployments[addressTypes[0]].address\n            : deployment.deployments[addressTypes].address,\n    ]));\n    return Object.assign(Object.assign({}, deployment), { defaultAddress, networkAddresses });\n};\n/**\n * Maps a SingletonDeploymentJSON object to a SingletonDeploymentV2 object.\n *\n * This function transforms the `networkAddresses` field of the deployment JSON object.\n * It converts each entry in `networkAddresses` to an array of addresses, using the `addresses` field\n * to resolve each address type.\n *\n * @param {SingletonDeploymentJSON} deployment - The deployment JSON object to map.\n * @returns {SingletonDeploymentV2} - The mapped deployment object in V2 format.\n */\nconst mapJsonToDeploymentsFormatV2 = (deployment) => (Object.assign(Object.assign({}, deployment), { networkAddresses: Object.fromEntries(Object.entries(deployment.networkAddresses).map(([chainId, addressTypes]) => [\n        chainId,\n        (Array.isArray(addressTypes)\n            ? // The usage of non-null assertion below is safe, because we validate that the asset files are properly formed in tests\n                addressTypes.map((addressType) => deployment.deployments[addressType].address)\n            : deployment.deployments[addressTypes].address),\n    ])) }));\nfunction findDeployment(criteria = DEFAULT_FILTER, deployments, format = \"singleton\" /* DeploymentFormats.SINGLETON */) {\n    const { version, released, network } = Object.assign(Object.assign({}, DEFAULT_FILTER), criteria);\n    const deploymentJson = deployments.find((deployment) => {\n        if (version && !(0, satisfies_1.default)(deployment.version, version))\n            return false;\n        if (typeof released === 'boolean' && deployment.released !== released)\n            return false;\n        if (network && !deployment.networkAddresses[network])\n            return false;\n        return true;\n    });\n    if (!deploymentJson)\n        return undefined;\n    if (format === \"multiple\" /* DeploymentFormats.MULTIPLE */) {\n        return mapJsonToDeploymentsFormatV2(deploymentJson);\n    }\n    else {\n        return mapJsonToDeploymentsFormatV1(deploymentJson);\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSafeL2SingletonDeployments = exports.getSafeL2SingletonDeployment = exports.getSafeSingletonDeployments = exports.getSafeSingletonDeployment = void 0;\nconst deployments_1 = require(\"./deployments\");\nconst utils_1 = require(\"./utils\");\n/**\n * Finds the latest safe singleton deployment that matches the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployment.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if no deployment matches the filter.\n */\nconst getSafeSingletonDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_DEPLOYMENTS);\n};\nexports.getSafeSingletonDeployment = getSafeSingletonDeployment;\n/**\n * Finds all safe singleton deployments that match the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments or undefined if no deployments match the filter.\n */\nconst getSafeSingletonDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSafeSingletonDeployments = getSafeSingletonDeployments;\n/**\n * Finds the latest safe L2 singleton deployment that matches the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployment.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if no deployment matches the filter.\n */\nconst getSafeL2SingletonDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_L2_DEPLOYMENTS);\n};\nexports.getSafeL2SingletonDeployment = getSafeL2SingletonDeployment;\n/**\n * Finds all safe L2 singleton deployments that match the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments or undefined if no deployments match the filter.\n */\nconst getSafeL2SingletonDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_L2_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSafeL2SingletonDeployments = getSafeL2SingletonDeployments;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProxyFactoryDeployments = exports.getProxyFactoryDeployment = void 0;\nconst utils_1 = require(\"./utils\");\nconst deployments_1 = require(\"./deployments\");\n/**\n * Finds the latest proxy factory deployment that matches the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployment.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if no deployment matches the filter.\n */\nconst getProxyFactoryDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._FACTORY_DEPLOYMENTS);\n};\nexports.getProxyFactoryDeployment = getProxyFactoryDeployment;\n/**\n * Finds all proxy factory deployments that match the given filter.\n * @param {DeploymentFilter} [filter] - The filter to apply when searching for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments or undefined if no deployments match the filter.\n */\nconst getProxyFactoryDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._FACTORY_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getProxyFactoryDeployments = getProxyFactoryDeployments;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSafeToL2SetupDeployments = exports.getSafeToL2SetupDeployment = exports.getSafeToL2MigrationDeployments = exports.getSafeToL2MigrationDeployment = exports.getSafeMigrationDeployments = exports.getSafeMigrationDeployment = exports.getSignMessageLibDeployments = exports.getSignMessageLibDeployment = exports.getCreateCallDeployments = exports.getCreateCallDeployment = exports.getMultiSendCallOnlyDeployments = exports.getMultiSendCallOnlyDeployment = exports.getMultiSendDeployments = exports.getMultiSendDeployment = void 0;\nconst deployments_1 = require(\"./deployments\");\nconst utils_1 = require(\"./utils\");\n/**\n * Get the MultiSend deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getMultiSendDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._MULTI_SEND_DEPLOYMENTS);\n};\nexports.getMultiSendDeployment = getMultiSendDeployment;\n/**\n * Get all MultiSend deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getMultiSendDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._MULTI_SEND_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getMultiSendDeployments = getMultiSendDeployments;\n/**\n * Get the MultiSendCallOnly deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getMultiSendCallOnlyDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._MULTI_SEND_CALL_ONLY_DEPLOYMENTS);\n};\nexports.getMultiSendCallOnlyDeployment = getMultiSendCallOnlyDeployment;\n/**\n * Get all MultiSendCallOnly deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getMultiSendCallOnlyDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._MULTI_SEND_CALL_ONLY_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getMultiSendCallOnlyDeployments = getMultiSendCallOnlyDeployments;\n/**\n * Get the CreateCall deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getCreateCallDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._CREATE_CALL_DEPLOYMENTS);\n};\nexports.getCreateCallDeployment = getCreateCallDeployment;\n/**\n * Get all CreateCall deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getCreateCallDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._CREATE_CALL_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getCreateCallDeployments = getCreateCallDeployments;\n/**\n * Get the SignMessageLib deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getSignMessageLibDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SIGN_MESSAGE_LIB_DEPLOYMENTS);\n};\nexports.getSignMessageLibDeployment = getSignMessageLibDeployment;\n/**\n * Get all SignMessageLib deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getSignMessageLibDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SIGN_MESSAGE_LIB_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSignMessageLibDeployments = getSignMessageLibDeployments;\n/**\n * Get the SafeMigration deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getSafeMigrationDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_MIGRATION_DEPLOYMENTS);\n};\nexports.getSafeMigrationDeployment = getSafeMigrationDeployment;\n/**\n * Get all SafeMigration deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getSafeMigrationDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_MIGRATION_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSafeMigrationDeployments = getSafeMigrationDeployments;\n/**\n * Get the SafeToL2Migration deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getSafeToL2MigrationDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_TO_L2_MIGRATION_DEPLOYMENTS);\n};\nexports.getSafeToL2MigrationDeployment = getSafeToL2MigrationDeployment;\n/**\n * Get all SafeToL2Migration deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getSafeToL2MigrationDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_TO_L2_MIGRATION_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSafeToL2MigrationDeployments = getSafeToL2MigrationDeployments;\n/**\n * Get the SafeToL2Setup deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployment.\n * @returns {SingletonDeployment | undefined} - The matched deployment or undefined if not found.\n */\nconst getSafeToL2SetupDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_TO_L2_SETUP_DEPLOYMENTS);\n};\nexports.getSafeToL2SetupDeployment = getSafeToL2SetupDeployment;\n/**\n * Get all SafeToL2Setup deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - The filter criteria for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The matched deployments or undefined if not found.\n */\nconst getSafeToL2SetupDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._SAFE_TO_L2_SETUP_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSafeToL2SetupDeployments = getSafeToL2SetupDeployments;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFallbackHandlerDeployment = exports.getExtensibleFallbackHandlerDeployments = exports.getExtensibleFallbackHandlerDeployment = exports.getCompatibilityFallbackHandlerDeployments = exports.getCompatibilityFallbackHandlerDeployment = exports.getDefaultCallbackHandlerDeployments = exports.getTokenCallbackHandlerDeployments = exports.getDefaultCallbackHandlerDeployment = exports.getTokenCallbackHandlerDeployment = void 0;\nconst utils_1 = require(\"./utils\");\nconst deployments_1 = require(\"./deployments\");\n/**\n * Get the token callback handler deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if not found.\n */\nconst getTokenCallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._TOKEN_CALLBACK_HANDLER_DEPLOYMENTS);\n};\nexports.getTokenCallbackHandlerDeployment = getTokenCallbackHandlerDeployment;\n/**\n * Get the default callback handler deployment based on the provided filter.\n * Note that this is an alias to `getTokenCallbackHandlerDeployment` for API backwards compatibility.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if not found.\n */\nexports.getDefaultCallbackHandlerDeployment = exports.getTokenCallbackHandlerDeployment;\n/**\n * Get all default callback handler deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments in version 2 format or undefined if not found.\n */\nconst getTokenCallbackHandlerDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._TOKEN_CALLBACK_HANDLER_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getTokenCallbackHandlerDeployments = getTokenCallbackHandlerDeployments;\n/**\n * Get all default callback handler deployments based on the provided filter.\n * Note that this is an alias to `getTokenCallbackHandlerDeployments` for API backwards compatibility.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments in version 2 format or undefined if not found.\n */\nexports.getDefaultCallbackHandlerDeployments = exports.getTokenCallbackHandlerDeployments;\n/**\n * Get the compatibility fallback handler deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if not found.\n */\nconst getCompatibilityFallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._COMPAT_FALLBACK_HANDLER_DEPLOYMENTS);\n};\nexports.getCompatibilityFallbackHandlerDeployment = getCompatibilityFallbackHandlerDeployment;\n/**\n * Get all compatibility fallback handler deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments in version 2 format or undefined if not found.\n */\nconst getCompatibilityFallbackHandlerDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._COMPAT_FALLBACK_HANDLER_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getCompatibilityFallbackHandlerDeployments = getCompatibilityFallbackHandlerDeployments;\n/**\n * Get the extensible fallback handler deployment based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if not found.\n */\nconst getExtensibleFallbackHandlerDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS);\n};\nexports.getExtensibleFallbackHandlerDeployment = getExtensibleFallbackHandlerDeployment;\n/**\n * Get all extensible fallback handler deployments based on the provided filter.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments in version 2 format or undefined if not found.\n */\nconst getExtensibleFallbackHandlerDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._EXTENSIBLE_FALLBACK_HANDLER_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getExtensibleFallbackHandlerDeployments = getExtensibleFallbackHandlerDeployments;\n/**\n * Get the fallback handler deployment based on the provided filter. This method is an alias for `getCompatibilityFallbackHandlerDeployment`.\n * Kept for backwards compatibility.\n * @param {DeploymentFilter} [filter] - Optional filter to apply to the deployment search.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if not found.\n */\nexports.getFallbackHandlerDeployment = exports.getCompatibilityFallbackHandlerDeployment;\n// Leaving the comment here so it's not a part of the JSDoc\n// Previously, the function code was this:\n// // This is a sorted array (by preference)\n// const fallbackHandlerDeployments: SingletonDeploymentJSON[] = [\n//   CompatibilityFallbackHandler141,\n//   CompatibilityFallbackHandler130,\n//   DefaultCallbackHandler130,\n// ];\n// export const getFallbackHandlerDeployment = (filter?: DeploymentFilter): SingletonDeployment | undefined => {\n//   return findDeployment(filter, fallbackHandlerDeployments);\n// };\n// The problem with the function is that there’s no possible filter that would make the function return the last element of the array\n// (DefaultCallbackHandler130 ), since we only allow to filter by version, networks and released flag. The only possible way is to have\n// the default callback handler deployed to a network where the compatibility fallback handler isn’t deployed, but we require the whole\n// suite of the contracts be deployed to a network.\n// Since we didn't want to enforce a preferred fallback handler on the deployments package level,\n// we decided to alias it to getCompatibilityFallbackHandlerDeployment (previously returned value)\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSimulateTxAccessorDeployments = exports.getSimulateTxAccessorDeployment = void 0;\nconst utils_1 = require(\"./utils\");\nconst deployments_1 = require(\"./deployments\");\n/**\n * Retrieves a single simulate transaction accessor deployment based on the provided filter.\n *\n * @param {DeploymentFilter} [filter] - Optional filter to apply when searching for the deployment.\n * @returns {SingletonDeployment | undefined} - The found deployment or undefined if no deployment matches the filter.\n */\nconst getSimulateTxAccessorDeployment = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._ACCESSOR_DEPLOYMENTS);\n};\nexports.getSimulateTxAccessorDeployment = getSimulateTxAccessorDeployment;\n/**\n * Retrieves multiple simulate transaction accessor deployments based on the provided filter.\n *\n * @param {DeploymentFilter} [filter] - Optional filter to apply when searching for the deployments.\n * @returns {SingletonDeploymentV2 | undefined} - The found deployments in the specified format or undefined if no deployments match the filter.\n */\nconst getSimulateTxAccessorDeployments = (filter) => {\n    return (0, utils_1.findDeployment)(filter, deployments_1._ACCESSOR_DEPLOYMENTS, \"multiple\" /* DeploymentFormats.MULTIPLE */);\n};\nexports.getSimulateTxAccessorDeployments = getSimulateTxAccessorDeployments;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./safes\"), exports);\n__exportStar(require(\"./factories\"), exports);\n__exportStar(require(\"./libs\"), exports);\n__exportStar(require(\"./handler\"), exports);\n__exportStar(require(\"./accessors\"), exports);\n", null, null, null, null, null, null, "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n", "var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n", "var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n", "'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};", "/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean) {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { AffinePoint, BasicCurve, Group, GroupConstructor, validateBasic, wNAF } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    ut.abytes(data);\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { CHash } from './abstract/utils.js';\nimport { CurveType, weierstrass } from './abstract/weierstrass.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { AffinePoint, Group, GroupConstructor } from './curve.js';\nimport { IField, mod } from './modular.js';\nimport type { CHash } from './utils.js';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n    // Same as encodeToCurve, but without hash\n    mapToCurve(scalars: bigint[]) {\n      if (!Array.isArray(scalars)) throw new Error('mapToCurve: expected array of bigints');\n      for (const i of scalars)\n        if (typeof i !== 'bigint')\n          throw new Error(`mapToCurve: expected array of bigints, got ${i} in array`);\n      const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n", "import { Buffer } from 'buffer'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n", "/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n", "export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n  isLE,\n  byteSwap32,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\nexports.bytesToUtf8 = bytesToUtf8;\nexports.hexToBytes = hexToBytes;\nexports.equalsBytes = equalsBytes;\nexports.wrapHash = wrapHash;\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nexports.crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_js_1 = require(\"./utils.js\");\nexports.keccak224 = (0, utils_js_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_js_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_js_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_js_1.wrapHash)(sha3_1.keccak_512);\n", "/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n", "import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n", "import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n", "import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(\n    secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n  )\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n", "import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n", "import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n", "import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in Gwei 8 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toValue() {\n    return {\n      index: this.index,\n      validatorIndex: this.validatorIndex,\n      address: this.address.buf,\n      amount: this.amount,\n    }\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n", "import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = Buffer.from(buf.slice(0, 32))\n  const s = Buffer.from(buf.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return Buffer.from(senderPubKey.toRawBytes(false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n", "// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nexport const hasTerminator = (nibbles: Uint8Array) => {\n  return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16\n}\n\nexport const nibblesToBytes = (nibbles: Uint8Array, bytes: Uint8Array) => {\n  for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n    bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1]\n  }\n}\n\nexport const nibblesToCompactBytes = (nibbles: Uint8Array) => {\n  let terminator = 0\n  if (hasTerminator(nibbles)) {\n    terminator = 1\n    // Remove the terminator from the sequence\n    nibbles = nibbles.subarray(0, nibbles.length - 1)\n  }\n  const buf = new Uint8Array(nibbles.length / 2 + 1)\n  // Shift the terminator info into the first nibble of buf[0]\n  buf[0] = terminator << 5\n  // If odd length, then add that flag into the first nibble and put the odd nibble to\n  // second part of buf[0] which otherwise will be left padded with a 0\n  if ((nibbles.length & 1) === 1) {\n    buf[0] |= 1 << 4\n    buf[0] |= nibbles[0]\n    nibbles = nibbles.subarray(1)\n  }\n  // create bytes out of the rest even nibbles\n  nibblesToBytes(nibbles, buf.subarray(1))\n  return buf\n}\n\nexport const bytesToNibbles = (str: Uint8Array) => {\n  const l = str.length * 2 + 1\n  const nibbles = new Uint8Array(l)\n  for (let i = 0; i < str.length; i++) {\n    const b = str[i]\n    nibbles[i * 2] = b / 16\n    nibbles[i * 2 + 1] = b % 16\n  }\n  // This will get removed from calling function if the first nibble\n  // indicates that terminator is not present\n  nibbles[l - 1] = 16\n  return nibbles\n}\n\nexport const compactBytesToNibbles = (compact: Uint8Array) => {\n  if (compact.length === 0) {\n    return compact\n  }\n  let base = bytesToNibbles(compact)\n  // delete terminator flag if terminator flag was not in first nibble\n  if (base[0] < 2) {\n    base = base.subarray(0, base.length - 1)\n  }\n  // chop the terminator nibble and the even padding (if there is one)\n  // i.e.  chop 2 left nibbles when even else 1 when odd\n  const chop = 2 - (base[0] & 1)\n  return base.subarray(chop)\n}\n\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n", "/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nasync function runInSeries(\n  context: any,\n  tasks: Array<(data: unknown, callback?: (error?: Error) => void) => void>,\n  data: unknown\n): Promise<void> {\n  let error: Error | undefined\n  for await (const task of tasks) {\n    try {\n      if (task.length < 2) {\n        //sync\n        task.call(context, data)\n      } else {\n        await new Promise<void>((resolve, reject) => {\n          task.call(context, data, (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }\n    } catch (e: unknown) {\n      error = e as Error\n    }\n  }\n  if (error) {\n    throw error\n  }\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n    runInSeries(self, listeners.slice(), data).then(callback).catch(callback)\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n", "// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n", "/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode/');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n", "import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n", "/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Units helpers\n */\nexport * from './units'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Helper function for working with compact encoding\n */\nexport * from './encoding'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\nexport * from './provider'\n", "/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\n// prettier-ignore\nimport {\n  abytes, aexists, anumber, aoutput,\n  clean, createHasher, createXOFer, Hash,\n  swap32IfBE,\n  toBytes, u32,\n  type CHash, type CHashXO, type HashXOF, type Input\n} from './utils.ts';\n\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  clean(B);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (!(0 < blockLen && blockLen < 200))\n      throw new Error('only keccak-f1600 function is supported');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  clone(): Keccak {\n    return this._cloneInto();\n  }\n  protected keccak(): void {\n    swap32IfBE(this.state32);\n    keccakP(this.state32, this.rounds);\n    swap32IfBE(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { blockLen, state } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.state);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  createHasher(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  createXOFer<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"@noble/hashes/utils\");\n/**\n * Keccak256 hash\n * @param data The data\n */\nfunction keccak256(data) {\n    return bytesToHex(sha3_1.keccak_256(toByteArray(data)));\n}\nexports.keccak256 = keccak256;\n/**\n * Adding padding to string on the left\n * @param value The value\n * @param chars The chars\n */\nexports.padLeft = (value, chars) => {\n    const hasPrefix = /^0x/i.test(value) || typeof value === 'number';\n    value = value.toString().replace(/^0x/i, '');\n    const padding = chars - value.length + 1 >= 0 ? chars - value.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join('0') + value;\n};\n/**\n * Convert bytes to hex\n * @param bytes The bytes\n */\nfunction bytesToHex(bytes) {\n    return \"0x\" + utils_1.bytesToHex(bytes);\n}\nexports.bytesToHex = bytesToHex;\n/**\n * To byte array\n * @param value The value\n */\nfunction toByteArray(value) {\n    if (value == null) {\n        throw new Error('cannot convert null value to array');\n    }\n    if (typeof value === 'string') {\n        const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n        if (!match) {\n            throw new Error('invalid hexidecimal string');\n        }\n        if (match[1] !== '0x') {\n            throw new Error('hex string must have 0x prefix');\n        }\n        value = value.substring(2);\n        if (value.length % 2) {\n            value = '0' + value;\n        }\n        const result = [];\n        for (let i = 0; i < value.length; i += 2) {\n            result.push(parseInt(value.substr(i, 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isByteArray(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    throw new Error('invalid arrayify value');\n}\nexports.toByteArray = toByteArray;\n/**\n * Is byte array\n * @param value The value\n */\nfunction isByteArray(value) {\n    if (!value ||\n        // tslint:disable-next-line: radix\n        parseInt(String(value.length)) != value.length ||\n        typeof value === 'string') {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        // tslint:disable-next-line: radix\n        if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Add slice to array\n * @param array The array\n */\nfunction addSlice(array) {\n    if (array.slice !== undefined) {\n        return array;\n    }\n    array.slice = () => {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\n/**\n * Returns true if the bloom is a valid bloom\n * @param bloom The bloom\n */\nfunction isBloom(bloom) {\n    if (typeof bloom !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    }\n    if (/^(0x)?[0-9a-f]{512}$/.test(bloom) ||\n        /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n}\nexports.isBloom = isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param value The value\n */\nfunction isInBloom(bloom, value) {\n    if (typeof value === 'object' && value.constructor === Uint8Array) {\n        value = utils_1.bytesToHex(value);\n    }\n    const hash = utils_1.keccak256(value).replace('0x', '');\n    for (let i = 0; i < 12; i += 4) {\n        // calculate bit position in bloom filter that must be active\n        const bitpos = ((parseInt(hash.substr(i, 2), 16) << 8) +\n            parseInt(hash.substr(i + 2, 2), 16)) &\n            2047;\n        // test if bitpos in bloom is active\n        const code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\n        const offset = 1 << bitpos % 4;\n        if ((code & offset) !== offset) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isInBloom = isInBloom;\n/**\n * Code points to int\n * @param codePoint The code point\n */\nfunction codePointToInt(codePoint) {\n    if (codePoint >= 48 && codePoint <= 57) {\n        /* ['0'..'9'] -> [0..9] */\n        return codePoint - 48;\n    }\n    if (codePoint >= 65 && codePoint <= 70) {\n        /* ['A'..'F'] -> [10..15] */\n        return codePoint - 55;\n    }\n    if (codePoint >= 97 && codePoint <= 102) {\n        /* ['a'..'f'] -> [10..15] */\n        return codePoint - 87;\n    }\n    throw new Error('invalid bloom');\n}\n/**\n * Returns true if the ethereum users address is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param address the address to test\n */\nfunction isUserEthereumAddressInBloom(bloom, ethereumAddress) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isAddress(ethereumAddress)) {\n        throw new Error(`Invalid ethereum address given: \"${ethereumAddress}\"`);\n    }\n    // you have to pad the ethereum address to 32 bytes\n    // else the bloom filter does not work\n    // this is only if your matching the USERS\n    // ethereum address. Contract address do not need this\n    // hence why we have 2 methods\n    // (0x is not in the 2nd parameter of padleft so 64 chars is fine)\n    const address = utils_1.padLeft(ethereumAddress, 64);\n    return isInBloom(bloom, address);\n}\nexports.isUserEthereumAddressInBloom = isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param contractAddress the contract address to test\n */\nfunction isContractAddressInBloom(bloom, contractAddress) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isAddress(contractAddress)) {\n        throw new Error(`Invalid contract address given: \"${contractAddress}\"`);\n    }\n    return isInBloom(bloom, contractAddress);\n}\nexports.isContractAddressInBloom = isContractAddressInBloom;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n * @param bloom encoded bloom\n * @param topic the topic encoded hex\n */\nfunction isTopicInBloom(bloom, topic) {\n    if (!isBloom(bloom)) {\n        throw new Error('Invalid bloom given');\n    }\n    if (!isTopic(topic)) {\n        throw new Error('Invalid topic');\n    }\n    return isInBloom(bloom, topic);\n}\nexports.isTopicInBloom = isTopicInBloom;\n/**\n * Checks if its a valid topic\n * @param topic encoded hex topic\n */\nfunction isTopic(topic) {\n    if (typeof topic !== 'string') {\n        return false;\n    }\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{64}$/.test(topic) ||\n        /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n}\nexports.isTopic = isTopic;\n/**\n * Is valid address\n * @param address The address\n */\nfunction isAddress(address) {\n    if (typeof address !== 'string') {\n        return false;\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        return true;\n    }\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        return true;\n    }\n    return false;\n}\nexports.isAddress = isAddress;\n", "/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar ethereumjsUtil = require('@ethereumjs/util');\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\nvar { keccak256 } = require('ethereum-cryptography/keccak.js');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.slice(i, i + 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation.\n * However, if the value is larger than the maximum safe integer, returns the value as a string.\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @param {Boolean} bigIntOnOverflow - if true, return the hex value in case of overflow\n * @return {Number|String}\n */\nvar hexToNumber = function (value, bigIntOnOverflow = false) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    const n = toBN(value);\n    if (bigIntOnOverflow && (n > Number.MAX_SAFE_INTEGER || n < Number.MIN_SAFE_INTEGER)) {\n        return BigInt(n);\n    }\n    return n.toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if ((value === null || value === undefined)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.slice(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.slice(c, c + 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (typeof value === 'boolean') {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (typeof value === 'object' && !!value && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (typeof value === 'string') {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = ethereumjsUtil.toBuffer(value);\n    }\n    else if (typeof value === 'string') {\n        // Assume value is an arbitrary string\n        value = Buffer.from(value, 'utf-8');\n    }\n    var returnValue = ethereumjsUtil.bufferToHex(keccak256(value));\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = keccak256;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\n/**\n * Auto converts any given value into it's hex representation,\n * then converts hex to number.\n *\n * @method toNumber\n * @param {String|Number|BN} value\n * @param {Boolean} bigIntOnOverflow - if true, return the hex value in case of overflow\n * @return {Number|String}\n */\nvar toNumber = function (value, bigIntOnOverflow = false) {\n    return typeof value === 'number' ? value : hexToNumber(toHex(value), bigIntOnOverflow);\n};\n// 1.x currently accepts 0x... strings, bn.js after update doesn't. it would be a breaking change\nvar BNwrapped = function (value) {\n    // check negative\n    if (typeof value == \"string\" && value.includes(\"0x\")) {\n        const [negative, hexValue] = value.toLocaleLowerCase().startsWith('-') ? [\"-\", value.slice(3)] : [\"\", value.slice(2)];\n        return new BN(negative + hexValue, 16);\n    }\n    else {\n        return new BN(value);\n    }\n};\nObject.setPrototypeOf(BNwrapped, BN);\nObject.setPrototypeOf(BNwrapped.prototype, BN.prototype);\nmodule.exports = {\n    BN: BNwrapped,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw,\n    toNumber: toNumber\n};\n", "/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (!!arg && typeof arg === 'object' && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (Array.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (Array.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n", "'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n", "/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (typeof error === 'string') {\n        error = new Error(error);\n    }\n    if (typeof callback === 'function') {\n        callback(error, optionalData);\n    }\n    if (typeof reject === 'function') {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (typeof emitter.listeners === 'function' &&\n                emitter.listeners('error').length) || typeof callback === 'function') {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && typeof emitter.emit === 'function') {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (Array.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.slice(i, i + 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n * Block tag `safe` and `block number` combination param is not supported\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    // Increasing order: (genesis = earliest), safe, (finalized ~ latest), pending\n    // safe vs block-num cant be compared as block number provided can be on left or right side of safe tag, until safe tag block number is extracted and compared\n    if (a === b) {\n        return 0;\n    }\n    else if ((\"genesis\" === a || \"earliest\" === a || 0 === a) && (\"genesis\" === b || \"earliest\" === b || 0 === b)) {\n        return 0;\n    }\n    else if (\"genesis\" === a || \"earliest\" === a || a === 0) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" === b || \"earliest\" === b || b === 0) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a === \"latest\" || a === \"finalized\") {\n        if (b === \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\" || b === \"finalized\") {\n        if (a === \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a === \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b === \"pending\") {\n        return -1;\n    }\n    else if (a === \"safe\" || b === \"safe\") {\n        // either a or b is \"safe\" and the other one did not fall into any of the conditions above, so the other one is a number\n        return undefined;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers,\n    toNumber: utils.toNumber\n};\n", null, null, null, null, null, null, null, null, null, null, null, "/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n", "import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n", "const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n", "{\n  \"name\": \"elliptic\",\n  \"version\": \"6.6.1\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n", "module.exports = require('./lib')(require('./lib/elliptic'))\n", "const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n", "import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n", "/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n", "import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n", "import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n", "import { Hash } from \"crypto\";\n\nexport function createHashFunction(\n  hashConstructor: () => Hash\n): (msg: Buffer) => Buffer {\n  return msg => {\n    const hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n", "import { createHashFunction } from \"./hash-utils\";\n\nconst createKeccakHash = require(\"keccak\");\n\nexport const keccak224 = createHashFunction(() =>\n  createKeccakHash(\"keccak224\")\n);\n\nexport const keccak256 = createHashFunction(() =>\n  createKeccakHash(\"keccak256\")\n);\n\nexport const keccak384 = createHashFunction(() =>\n  createKeccakHash(\"keccak384\")\n);\n\nexport const keccak512 = createHashFunction(() =>\n  createKeccakHash(\"keccak512\")\n);\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = useUint8Array && typeof ArrayBuffer !== 'undefined';\nvar isView = useArrayBuffer && ArrayBuffer.isView;\n\nmodule.exports = function (thing, encoding) {\n\tif (\n\t\ttypeof thing === 'string'\n    || Buffer.isBuffer(thing)\n    || (useUint8Array && thing instanceof Uint8Array)\n    || (isView && isView(thing))\n\t) {\n\t\treturn toBuffer(thing, encoding);\n\t}\n\tthrow new TypeError('The \"data\" argument must be a string, a Buffer, a Uint8Array, or a DataView');\n};\n", "'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n", "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n", "module.exports = require('events').EventEmitter;\n", "/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n", "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}", "'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};", "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('./to-buffer');\nvar Transform = require('readable-stream').Transform;\nvar inherits = require('inherits');\n\nfunction HashBase(blockSize) {\n\tTransform.call(this);\n\n\tthis._block = Buffer.allocUnsafe(blockSize);\n\tthis._blockSize = blockSize;\n\tthis._blockOffset = 0;\n\tthis._length = [0, 0, 0, 0];\n\n\tthis._finalized = false;\n}\n\ninherits(HashBase, Transform);\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n\tvar error = null;\n\ttry {\n\t\tthis.update(chunk, encoding);\n\t} catch (err) {\n\t\terror = err;\n\t}\n\n\tcallback(error);\n};\n\nHashBase.prototype._flush = function (callback) {\n\tvar error = null;\n\ttry {\n\t\tthis.push(this.digest());\n\t} catch (err) {\n\t\terror = err;\n\t}\n\n\tcallback(error);\n};\n\nHashBase.prototype.update = function (data, encoding) {\n\tif (this._finalized) {\n\t\tthrow new Error('Digest already called');\n\t}\n\n\tvar dataBuffer = toBuffer(data, encoding); // asserts correct input type\n\n\t// consume data\n\tvar block = this._block;\n\tvar offset = 0;\n\twhile (this._blockOffset + dataBuffer.length - offset >= this._blockSize) {\n\t\tfor (var i = this._blockOffset; i < this._blockSize;) {\n\t\t\tblock[i] = dataBuffer[offset];\n\t\t\ti += 1;\n\t\t\toffset += 1;\n\t\t}\n\t\tthis._update();\n\t\tthis._blockOffset = 0;\n\t}\n\twhile (offset < dataBuffer.length) {\n\t\tblock[this._blockOffset] = dataBuffer[offset];\n\t\tthis._blockOffset += 1;\n\t\toffset += 1;\n\t}\n\n\t// update length\n\tfor (var j = 0, carry = dataBuffer.length * 8; carry > 0; ++j) {\n\t\tthis._length[j] += carry;\n\t\tcarry = (this._length[j] / 0x0100000000) | 0;\n\t\tif (carry > 0) {\n\t\t\tthis._length[j] -= 0x0100000000 * carry;\n\t\t}\n\t}\n\n\treturn this;\n};\n\nHashBase.prototype._update = function () {\n\tthrow new Error('_update is not implemented');\n};\n\nHashBase.prototype.digest = function (encoding) {\n\tif (this._finalized) {\n\t\tthrow new Error('Digest already called');\n\t}\n\tthis._finalized = true;\n\n\tvar digest = this._digest();\n\tif (encoding !== undefined) {\n\t\tdigest = digest.toString(encoding);\n\t}\n\n\t// reset state\n\tthis._block.fill(0);\n\tthis._blockOffset = 0;\n\tfor (var i = 0; i < 4; ++i) {\n\t\tthis._length[i] = 0;\n\t}\n\n\treturn digest;\n};\n\nHashBase.prototype._digest = function () {\n\tthrow new Error('_digest is not implemented');\n};\n\nmodule.exports = HashBase;\n", "'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n", "'use strict';\n\nvar Buffer = require('buffer').Buffer;\nvar inherits = require('inherits');\nvar HashBase = require('hash-base');\n\nvar ARRAY16 = new Array(16);\n\nvar zl = [\n\t0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n\t7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n\t3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n\t1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n\t4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar zr = [\n\t5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n\t6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n\t15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n\t8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n\t12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar sl = [\n\t11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n\t7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n\t11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n\t11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n\t9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sr = [\n\t8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n\t9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n\t9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n\t15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n\t8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];\n\nfunction rotl(x, n) {\n\treturn (x << n) | (x >>> (32 - n));\n}\n\nfunction fn1(a, b, c, d, e, m, k, s) {\n\treturn (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;\n}\n\nfunction fn2(a, b, c, d, e, m, k, s) {\n\treturn (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0;\n}\n\nfunction fn3(a, b, c, d, e, m, k, s) {\n\treturn (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0;\n}\n\nfunction fn4(a, b, c, d, e, m, k, s) {\n\treturn (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0;\n}\n\nfunction fn5(a, b, c, d, e, m, k, s) {\n\treturn (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0;\n}\n\nfunction RIPEMD160() {\n\tHashBase.call(this, 64);\n\n\t// state\n\tthis._a = 0x67452301;\n\tthis._b = 0xefcdab89;\n\tthis._c = 0x98badcfe;\n\tthis._d = 0x10325476;\n\tthis._e = 0xc3d2e1f0;\n}\n\ninherits(RIPEMD160, HashBase);\n\nRIPEMD160.prototype._update = function () {\n\tvar words = ARRAY16;\n\tfor (var j = 0; j < 16; ++j) {\n\t\twords[j] = this._block.readInt32LE(j * 4);\n\t}\n\n\tvar al = this._a | 0;\n\tvar bl = this._b | 0;\n\tvar cl = this._c | 0;\n\tvar dl = this._d | 0;\n\tvar el = this._e | 0;\n\n\tvar ar = this._a | 0;\n\tvar br = this._b | 0;\n\tvar cr = this._c | 0;\n\tvar dr = this._d | 0;\n\tvar er = this._e | 0;\n\n\t// computation\n\tfor (var i = 0; i < 80; i += 1) {\n\t\tvar tl;\n\t\tvar tr;\n\t\tif (i < 16) {\n\t\t\ttl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n\t\t\ttr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n\t\t} else if (i < 32) {\n\t\t\ttl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n\t\t\ttr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n\t\t} else if (i < 48) {\n\t\t\ttl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n\t\t\ttr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n\t\t} else if (i < 64) {\n\t\t\ttl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n\t\t\ttr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n\t\t} else { // if (i<80) {\n\t\t\ttl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n\t\t\ttr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n\t\t}\n\n\t\tal = el;\n\t\tel = dl;\n\t\tdl = rotl(cl, 10);\n\t\tcl = bl;\n\t\tbl = tl;\n\n\t\tar = er;\n\t\ter = dr;\n\t\tdr = rotl(cr, 10);\n\t\tcr = br;\n\t\tbr = tr;\n\t}\n\n\t// update state\n\tvar t = (this._b + cl + dr) | 0;\n\tthis._b = (this._c + dl + er) | 0;\n\tthis._c = (this._d + el + ar) | 0;\n\tthis._d = (this._e + al + br) | 0;\n\tthis._e = (this._a + bl + cr) | 0;\n\tthis._a = t;\n};\n\nRIPEMD160.prototype._digest = function () {\n\t// create padding and handle blocks\n\tthis._block[this._blockOffset] = 0x80;\n\tthis._blockOffset += 1;\n\tif (this._blockOffset > 56) {\n\t\tthis._block.fill(0, this._blockOffset, 64);\n\t\tthis._update();\n\t\tthis._blockOffset = 0;\n\t}\n\n\tthis._block.fill(0, this._blockOffset, 56);\n\tthis._block.writeUInt32LE(this._length[0], 56);\n\tthis._block.writeUInt32LE(this._length[1], 60);\n\tthis._update();\n\n\t// produce result\n\tvar buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20); // eslint-disable-line no-buffer-constructor\n\tbuffer.writeInt32LE(this._a, 0);\n\tbuffer.writeInt32LE(this._b, 4);\n\tbuffer.writeInt32LE(this._c, 8);\n\tbuffer.writeInt32LE(this._d, 12);\n\tbuffer.writeInt32LE(this._e, 16);\n\treturn buffer;\n};\n\nmodule.exports = RIPEMD160;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\nvar toBuffer = require('to-buffer');\n\nfunction CipherBase(hashMode) {\n\tTransform.call(this);\n\tthis.hashMode = typeof hashMode === 'string';\n\tif (this.hashMode) {\n\t\tthis[hashMode] = this._finalOrDigest;\n\t} else {\n\t\tthis['final'] = this._finalOrDigest;\n\t}\n\tif (this._final) {\n\t\tthis.__final = this._final;\n\t\tthis._final = null;\n\t}\n\tthis._decoder = null;\n\tthis._encoding = null;\n}\ninherits(CipherBase, Transform);\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n\tvar bufferData = toBuffer(data, inputEnc); // asserts correct input type\n\tvar outData = this._update(bufferData);\n\tif (this.hashMode) {\n\t\treturn this;\n\t}\n\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc);\n\t}\n\n\treturn outData;\n};\n\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n\tthrow new Error('trying to get auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAuthTag = function () {\n\tthrow new Error('trying to set auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAAD = function () {\n\tthrow new Error('trying to set aad in unsupported state');\n};\n\nCipherBase.prototype._transform = function (data, _, next) {\n\tvar err;\n\ttry {\n\t\tif (this.hashMode) {\n\t\t\tthis._update(data);\n\t\t} else {\n\t\t\tthis.push(this._update(data));\n\t\t}\n\t} catch (e) {\n\t\terr = e;\n\t} finally {\n\t\tnext(err);\n\t}\n};\nCipherBase.prototype._flush = function (done) {\n\tvar err;\n\ttry {\n\t\tthis.push(this.__final());\n\t} catch (e) {\n\t\terr = e;\n\t}\n\n\tdone(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n\tvar outData = this.__final() || Buffer.alloc(0);\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc, true);\n\t}\n\treturn outData;\n};\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n\tif (!this._decoder) {\n\t\tthis._decoder = new StringDecoder(enc);\n\t\tthis._encoding = enc;\n\t}\n\n\tif (this._encoding !== enc) {\n\t\tthrow new Error('can’t switch encodings');\n\t}\n\n\tvar out = this._decoder.write(value);\n\tif (fin) {\n\t\tout += this._decoder.end();\n\t}\n\n\treturn out;\n};\n\nmodule.exports = CipherBase;\n", "'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n", "import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n", "import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n", "import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n", "import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n", "import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n", "import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n", "/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n", null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountNonceOrdering = exports.AccountAbstractionVersion = exports.TransactionStatus = exports.PriorityOpTree = exports.PriorityQueueType = exports.Network = void 0;\n// Ethereum network\nvar Network;\n(function (Network) {\n    Network[Network[\"Mainnet\"] = 1] = \"Mainnet\";\n    Network[Network[\"Ropsten\"] = 3] = \"Ropsten\";\n    Network[Network[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Network[Network[\"Goerli\"] = 5] = \"Goerli\";\n    Network[Network[\"Localhost\"] = 9] = \"Localhost\";\n})(Network = exports.Network || (exports.Network = {}));\nvar PriorityQueueType;\n(function (PriorityQueueType) {\n    PriorityQueueType[PriorityQueueType[\"Deque\"] = 0] = \"Deque\";\n    PriorityQueueType[PriorityQueueType[\"HeapBuffer\"] = 1] = \"HeapBuffer\";\n    PriorityQueueType[PriorityQueueType[\"Heap\"] = 2] = \"Heap\";\n})(PriorityQueueType = exports.PriorityQueueType || (exports.PriorityQueueType = {}));\nvar PriorityOpTree;\n(function (PriorityOpTree) {\n    PriorityOpTree[PriorityOpTree[\"Full\"] = 0] = \"Full\";\n    PriorityOpTree[PriorityOpTree[\"Rollup\"] = 1] = \"Rollup\";\n})(PriorityOpTree = exports.PriorityOpTree || (exports.PriorityOpTree = {}));\nvar TransactionStatus;\n(function (TransactionStatus) {\n    TransactionStatus[\"NotFound\"] = \"not-found\";\n    TransactionStatus[\"Processing\"] = \"processing\";\n    TransactionStatus[\"Committed\"] = \"committed\";\n    TransactionStatus[\"Finalized\"] = \"finalized\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\nvar AccountAbstractionVersion;\n(function (AccountAbstractionVersion) {\n    AccountAbstractionVersion[AccountAbstractionVersion[\"None\"] = 0] = \"None\";\n    AccountAbstractionVersion[AccountAbstractionVersion[\"Version1\"] = 1] = \"Version1\";\n})(AccountAbstractionVersion = exports.AccountAbstractionVersion || (exports.AccountAbstractionVersion = {}));\nvar AccountNonceOrdering;\n(function (AccountNonceOrdering) {\n    AccountNonceOrdering[AccountNonceOrdering[\"Sequential\"] = 0] = \"Sequential\";\n    AccountNonceOrdering[AccountNonceOrdering[\"Arbitrary\"] = 1] = \"Arbitrary\";\n})(AccountNonceOrdering = exports.AccountNonceOrdering || (exports.AccountNonceOrdering = {}));\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IZkSyncFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IZkSyncFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IZkSyncFactory = IZkSyncFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"blockHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"commitment\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"BlockCommit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"blockHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"commitment\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"BlockExecution\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksCommitted\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksVerified\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"totalBlocksExecuted\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BlocksRevert\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"previousLastVerifiedBlock\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"currentLastVerifiedBlock\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BlocksVerification\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"CancelUpgradeProposal\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"EthWithdrawalFinalized\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ExecuteUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"Freeze\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"isPorterAvailable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"IsPorterAvailableStatusUpdate\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldGovernor\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewGovernor\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"previousBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"newBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"NewL2BootloaderBytecodeHash\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"previousBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"newBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"NewL2DefaultAccountBytecodeHash\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldPendingGovernor\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newPendingGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewPendingGovernor\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"txId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"txHash\",\n                type: \"bytes32\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint64\",\n                name: \"expirationTimestamp\",\n                type: \"uint64\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"txType\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"from\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"to\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"gasPerPubdataByteLimit\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"paymaster\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"value\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256[4]\",\n                        name: \"reserved\",\n                        type: \"uint256[4]\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"factoryDeps\",\n                        type: \"uint256[]\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterInput\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"reservedDynamic\",\n                        type: \"bytes\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct IMailbox.L2CanonicalTransaction\",\n                name: \"transaction\",\n                type: \"tuple\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes[]\",\n                name: \"factoryDeps\",\n                type: \"bytes[]\",\n            },\n        ],\n        name: \"NewPriorityRequest\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"oldPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"newPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"NewPriorityTxMaxGasLimit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"oldVerifier\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newVerifier\",\n                type: \"address\",\n            },\n        ],\n        name: \"NewVerifier\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct VerifierParams\",\n                name: \"oldVerifierParams\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct VerifierParams\",\n                name: \"newVerifierParams\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"NewVerifierParams\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ProposeShadowUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                indexed: false,\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"bytes32\",\n                name: \"proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"ProposeTransparentUpgrade\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"proposalId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes32\",\n                name: \"proposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"SecurityCouncilUpgradeApprove\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"Unfreeze\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"validatorAddress\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"isActive\",\n                type: \"bool\",\n            },\n        ],\n        name: \"ValidatorStatusUpdate\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"acceptGovernor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_proposedUpgradeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"cancelUpgradeProposal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo\",\n                name: \"_lastCommittedBlockData\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"timestamp\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"newStateRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initialStorageChanges\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"repeatedStorageChanges\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"l2Logs\",\n                        type: \"bytes\",\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"l2ArbitraryLengthMessages\",\n                        type: \"bytes[]\",\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"factoryDeps\",\n                        type: \"bytes[]\",\n                    },\n                ],\n                internalType: \"struct IExecutor.CommitBlockInfo[]\",\n                name: \"_newBlocksData\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"commitBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo[]\",\n                name: \"_blocksData\",\n                type: \"tuple[]\",\n            },\n        ],\n        name: \"executeBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_proposalSalt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"executeUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"_selector\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"facetAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"facet\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"facetAddresses\",\n        outputs: [\n            {\n                internalType: \"address[]\",\n                name: \"facets\",\n                type: \"address[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_facet\",\n                type: \"address\",\n            },\n        ],\n        name: \"facetFunctionSelectors\",\n        outputs: [\n            {\n                internalType: \"bytes4[]\",\n                name: \"\",\n                type: \"bytes4[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"facets\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"addr\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes4[]\",\n                        name: \"selectors\",\n                        type: \"bytes4[]\",\n                    },\n                ],\n                internalType: \"struct IGetters.Facet[]\",\n                name: \"\",\n                type: \"tuple[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_message\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"finalizeEthWithdrawal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"freezeDiamond\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getCurrentProposalId\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getFirstUnprocessedPriorityTx\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getGovernor\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getL2BootloaderBytecodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getL2DefaultAccountBytecodeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPendingGovernor\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPriorityQueueSize\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getProposedUpgradeHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getProposedUpgradeTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getSecurityCouncil\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksCommitted\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksExecuted\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalBlocksVerified\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalPriorityTxs\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getUpgradeProposalState\",\n        outputs: [\n            {\n                internalType: \"enum UpgradeState\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getVerifier\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getVerifierParams\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct VerifierParams\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getpriorityTxMaxGasLimit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"isApprovedBySecurityCouncil\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"isDiamondStorageFrozen\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"isEthWithdrawalFinalized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_facet\",\n                type: \"address\",\n            },\n        ],\n        name: \"isFacetFreezable\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"isFreezable\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"_selector\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"isFunctionFreezable\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_address\",\n                type: \"address\",\n            },\n        ],\n        name: \"isValidator\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"l2LogsRootHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"hash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_gasPrice\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasPerPubdataByteLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"l2TransactionBaseCost\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"priorityQueueFrontOperation\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"canonicalTxHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"expirationTimestamp\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint192\",\n                        name: \"layer2Tip\",\n                        type: \"uint192\",\n                    },\n                ],\n                internalType: \"struct PriorityOperation\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_proposalHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint40\",\n                name: \"_proposalId\",\n                type: \"uint40\",\n            },\n        ],\n        name: \"proposeShadowUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"uint40\",\n                name: \"_proposalId\",\n                type: \"uint40\",\n            },\n        ],\n        name: \"proposeTransparentUpgrade\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo\",\n                name: \"_prevBlock\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint64\",\n                        name: \"blockNumber\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"blockHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint64\",\n                        name: \"indexRepeatedStorageChanges\",\n                        type: \"uint64\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"numberOfLayer1Txs\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"priorityOperationsHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"l2LogsTreeRoot\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"timestamp\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"commitment\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct IExecutor.StoredBlockInfo[]\",\n                name: \"_committedBlocks\",\n                type: \"tuple[]\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"recursiveAggregationInput\",\n                        type: \"uint256[]\",\n                    },\n                    {\n                        internalType: \"uint256[]\",\n                        name: \"serializedProof\",\n                        type: \"uint256[]\",\n                    },\n                ],\n                internalType: \"struct IExecutor.ProofInput\",\n                name: \"_proof\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"proveBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TxHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n            {\n                internalType: \"enum TxStatus\",\n                name: \"_status\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"proveL1ToL2TransactionStatus\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_index\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint8\",\n                        name: \"l2ShardId\",\n                        type: \"uint8\",\n                    },\n                    {\n                        internalType: \"bool\",\n                        name: \"isService\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint16\",\n                        name: \"txNumberInBlock\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"key\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"value\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct L2Log\",\n                name: \"_log\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_proof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"proveL2LogInclusion\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_index\",\n                type: \"uint256\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint16\",\n                        name: \"txNumberInBlock\",\n                        type: \"uint16\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"data\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct L2Message\",\n                name: \"_message\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_proof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"proveL2MessageInclusion\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_contractL2\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2Value\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_calldata\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2GasPerPubdataByteLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes[]\",\n                name: \"_factoryDeps\",\n                type: \"bytes[]\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_refundRecipient\",\n                type: \"address\",\n            },\n        ],\n        name: \"requestL2Transaction\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"canonicalTxHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_newLastBlock\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"revertBlocks\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_upgradeProposalHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"securityCouncilUpgradeApprove\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2BootloaderBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"setL2BootloaderBytecodeHash\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"_l2DefaultAccountBytecodeHash\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"setL2DefaultAccountBytecodeHash\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_newPendingGovernor\",\n                type: \"address\",\n            },\n        ],\n        name: \"setPendingGovernor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bool\",\n                name: \"_zkPorterIsAvailable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setPorterAvailability\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_newPriorityTxMaxGasLimit\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setPriorityTxMaxGasLimit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_validator\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_active\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setValidator\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"contract Verifier\",\n                name: \"_newVerifier\",\n                type: \"address\",\n            },\n        ],\n        name: \"setVerifier\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionNodeLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionLeafLevelVkHash\",\n                        type: \"bytes32\",\n                    },\n                    {\n                        internalType: \"bytes32\",\n                        name: \"recursionCircuitsSetVksHash\",\n                        type: \"bytes32\",\n                    },\n                ],\n                internalType: \"struct VerifierParams\",\n                name: \"_newVerifierParams\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"setVerifierParams\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_blockNumber\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"storedBlockHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"unfreezeDiamond\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: \"address\",\n                                name: \"facet\",\n                                type: \"address\",\n                            },\n                            {\n                                internalType: \"enum Diamond.Action\",\n                                name: \"action\",\n                                type: \"uint8\",\n                            },\n                            {\n                                internalType: \"bool\",\n                                name: \"isFreezable\",\n                                type: \"bool\",\n                            },\n                            {\n                                internalType: \"bytes4[]\",\n                                name: \"selectors\",\n                                type: \"bytes4[]\",\n                            },\n                        ],\n                        internalType: \"struct Diamond.FacetCut[]\",\n                        name: \"facetCuts\",\n                        type: \"tuple[]\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"initAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCalldata\",\n                        type: \"bytes\",\n                    },\n                ],\n                internalType: \"struct Diamond.DiamondCutData\",\n                name: \"_diamondCut\",\n                type: \"tuple\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_proposalId\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_salt\",\n                type: \"bytes32\",\n            },\n        ],\n        name: \"upgradeProposalHash\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IERC20MetadataFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IERC20MetadataFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IERC20MetadataFactory = IERC20MetadataFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IL1BridgeFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IL1BridgeFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IL1BridgeFactory = IL1BridgeFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"ClaimedFailedDeposit\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"DepositInitiated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"l1Token\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"WithdrawalFinalized\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_depositSender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TxHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"claimFailedDeposit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l2Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2TxGasLimit\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2TxGasPerPubdataByte\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"deposit\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"txHash\",\n                type: \"bytes32\",\n            },\n        ],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint16\",\n                name: \"_l2TxNumberInBlock\",\n                type: \"uint16\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_message\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"bytes32[]\",\n                name: \"_merkleProof\",\n                type: \"bytes32[]\",\n            },\n        ],\n        name: \"finalizeWithdrawal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_l2BlockNumber\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_l2MessageIndex\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"isWithdrawalFinalized\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l2TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IL2BridgeFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IL2BridgeFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IL2BridgeFactory = IL2BridgeFactory;\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Sender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l2Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"finalizeDeposit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Bridge\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"_l2TokenProxyBytecodeHash\",\n                type: \"bytes32\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_governor\",\n                type: \"address\",\n            },\n        ],\n        name: \"initialize\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"l1Bridge\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l2Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l1TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"l2TokenAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_l2Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"withdraw\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IAllowListFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IAllowListFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IAllowListFactory = IAllowListFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"target\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"previousMode\",\n                type: \"uint8\",\n            },\n            {\n                indexed: false,\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"newMode\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"UpdateAccessMode\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"caller\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"target\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"bytes4\",\n                name: \"functionSig\",\n                type: \"bytes4\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"status\",\n                type: \"bool\",\n            },\n        ],\n        name: \"UpdateCallPermission\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"canCall\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n        ],\n        name: \"getAccessMode\",\n        outputs: [\n            {\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n        ],\n        name: \"getTokenDepositLimitData\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"bool\",\n                        name: \"depositLimitation\",\n                        type: \"bool\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"depositCap\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct IAllowList.Deposit\",\n                name: \"\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"hasSpecialAccessToCall\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"enum IAllowList.AccessMode\",\n                name: \"_accessMode\",\n                type: \"uint8\",\n            },\n        ],\n        name: \"setAccessMode\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address[]\",\n                name: \"_targets\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"enum IAllowList.AccessMode[]\",\n                name: \"_accessMode\",\n                type: \"uint8[]\",\n            },\n        ],\n        name: \"setBatchAccessMode\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address[]\",\n                name: \"_callers\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"address[]\",\n                name: \"_targets\",\n                type: \"address[]\",\n            },\n            {\n                internalType: \"bytes4[]\",\n                name: \"_functionSigs\",\n                type: \"bytes4[]\",\n            },\n            {\n                internalType: \"bool[]\",\n                name: \"_enables\",\n                type: \"bool[]\",\n            },\n        ],\n        name: \"setBatchPermissionToCall\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Token\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_depositLimitation\",\n                type: \"bool\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_depositCap\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"setDepositLimit\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_caller\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_target\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bytes4\",\n                name: \"_functionSig\",\n                type: \"bytes4\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"_enable\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setPermissionToCall\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEthTokenFactory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass IEthTokenFactory {\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.IEthTokenFactory = IEthTokenFactory;\nconst _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Mint\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Withdrawal\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_account\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"pure\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFromTo\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_l1Receiver\",\n                type: \"address\",\n            },\n        ],\n        name: \"withdraw\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\",\n    },\n];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEthTokenFactory = exports.IAllowListFactory = exports.IL2BridgeFactory = exports.IL1BridgeFactory = exports.IERC20MetadataFactory = exports.IZkSyncFactory = void 0;\nvar IZkSyncFactory_1 = require(\"./IZkSyncFactory\");\nObject.defineProperty(exports, \"IZkSyncFactory\", { enumerable: true, get: function () { return IZkSyncFactory_1.IZkSyncFactory; } });\nvar IERC20MetadataFactory_1 = require(\"./IERC20MetadataFactory\");\nObject.defineProperty(exports, \"IERC20MetadataFactory\", { enumerable: true, get: function () { return IERC20MetadataFactory_1.IERC20MetadataFactory; } });\nvar IL1BridgeFactory_1 = require(\"./IL1BridgeFactory\");\nObject.defineProperty(exports, \"IL1BridgeFactory\", { enumerable: true, get: function () { return IL1BridgeFactory_1.IL1BridgeFactory; } });\nvar IL2BridgeFactory_1 = require(\"./IL2BridgeFactory\");\nObject.defineProperty(exports, \"IL2BridgeFactory\", { enumerable: true, get: function () { return IL2BridgeFactory_1.IL2BridgeFactory; } });\nvar IAllowListFactory_1 = require(\"./IAllowListFactory\");\nObject.defineProperty(exports, \"IAllowListFactory\", { enumerable: true, get: function () { return IAllowListFactory_1.IAllowListFactory; } });\nvar IEthTokenFactory_1 = require(\"./IEthTokenFactory\");\nObject.defineProperty(exports, \"IEthTokenFactory\", { enumerable: true, get: function () { return IEthTokenFactory_1.IEthTokenFactory; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdapterL2 = exports.AdapterL1 = void 0;\nconst ethers_1 = require(\"ethers\");\nconst typechain_1 = require(\"../typechain\");\nconst utils_1 = require(\"./utils\");\nfunction AdapterL1(Base) {\n    return class Adapter extends Base {\n        _providerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _providerL1() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _signerL1() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        async getMainContract() {\n            const address = await this._providerL2().getMainContractAddress();\n            return typechain_1.IZkSyncFactory.connect(address, this._signerL1());\n        }\n        async getL1BridgeContracts() {\n            const addresses = await this._providerL2().getDefaultBridgeAddresses();\n            return {\n                erc20: typechain_1.IL1BridgeFactory.connect(addresses.erc20L1, this._signerL1())\n            };\n        }\n        async getBalanceL1(token, blockTag) {\n            token !== null && token !== void 0 ? token : (token = utils_1.ETH_ADDRESS);\n            if ((0, utils_1.isETH)(token)) {\n                return await this._providerL1().getBalance(await this.getAddress(), blockTag);\n            }\n            else {\n                const erc20contract = typechain_1.IERC20MetadataFactory.connect(token, this._providerL1());\n                return await erc20contract.balanceOf(await this.getAddress());\n            }\n        }\n        async l2TokenAddress(token) {\n            if (token == utils_1.ETH_ADDRESS) {\n                return utils_1.ETH_ADDRESS;\n            }\n            else {\n                const erc20Bridge = (await this.getL1BridgeContracts()).erc20;\n                return await erc20Bridge.l2TokenAddress(token);\n            }\n        }\n        async approveERC20(token, amount, overrides) {\n            if ((0, utils_1.isETH)(token)) {\n                throw new Error(\"ETH token can't be approved. The address of the token does not exist on L1.\");\n            }\n            let bridgeAddress = overrides === null || overrides === void 0 ? void 0 : overrides.bridgeAddress;\n            const erc20contract = typechain_1.IERC20MetadataFactory.connect(token, this._signerL1());\n            if (bridgeAddress == null) {\n                bridgeAddress = (await this._providerL2().getDefaultBridgeAddresses()).erc20L1;\n            }\n            else {\n                delete overrides.bridgeAddress;\n            }\n            return await erc20contract.approve(bridgeAddress, amount, overrides);\n        }\n        async getBaseCost(params) {\n            var _a, _b;\n            const zksyncContract = await this.getMainContract();\n            const parameters = { ...(0, utils_1.layer1TxDefaults)(), ...params };\n            (_a = parameters.gasPrice) !== null && _a !== void 0 ? _a : (parameters.gasPrice = await this._providerL1().getGasPrice());\n            (_b = parameters.gasPerPubdataByte) !== null && _b !== void 0 ? _b : (parameters.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            return ethers_1.BigNumber.from(await zksyncContract.l2TransactionBaseCost(parameters.gasPrice, parameters.gasLimit, parameters.gasPerPubdataByte));\n        }\n        async deposit(transaction) {\n            var _a;\n            const depositTx = await this.getDepositTx(transaction);\n            if (transaction.token == utils_1.ETH_ADDRESS) {\n                return this.requestExecute(depositTx);\n            }\n            else {\n                const bridgeContracts = await this.getL1BridgeContracts();\n                if (transaction.approveERC20) {\n                    const approveTx = await this.approveERC20(transaction.token, transaction.amount, {\n                        bridgeAddress: (_a = transaction.bridgeAddress) !== null && _a !== void 0 ? _a : bridgeContracts.erc20.address,\n                        ...transaction.approveOverrides\n                    });\n                    await approveTx.wait();\n                }\n                return await this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(depositTx));\n            }\n        }\n        async estimateGasDeposit(transaction) {\n            const depositTx = await this.getDepositTx(transaction);\n            if (transaction.token == utils_1.ETH_ADDRESS) {\n                return await this.estimateGasRequestExecute(depositTx);\n            }\n            else {\n                return await this._providerL1().estimateGas(depositTx);\n            }\n        }\n        async getDepositTx(transaction) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            const bridgeContracts = await this.getL1BridgeContracts();\n            if (transaction.bridgeAddress) {\n                bridgeContracts.erc20.attach(transaction.bridgeAddress);\n            }\n            const { ...tx } = transaction;\n            (_a = tx.to) !== null && _a !== void 0 ? _a : (tx.to = await this.getAddress());\n            (_b = tx.operatorTip) !== null && _b !== void 0 ? _b : (tx.operatorTip = ethers_1.BigNumber.from(0));\n            (_c = tx.overrides) !== null && _c !== void 0 ? _c : (tx.overrides = {});\n            (_d = tx.gasPerPubdataByte) !== null && _d !== void 0 ? _d : (tx.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            (_e = tx.l2GasLimit) !== null && _e !== void 0 ? _e : (tx.l2GasLimit = await (0, utils_1.estimateDefaultBridgeDepositL2Gas)(this._providerL1(), this._providerL2(), tx.token, tx.amount, tx.to, await this.getAddress(), tx.gasPerPubdataByte));\n            const { to, token, amount, operatorTip, overrides } = tx;\n            await insertGasPrice(this._providerL1(), overrides);\n            const gasPriceForEstimation = overrides.maxFeePerGas || overrides.gasPrice;\n            const zksyncContract = await this.getMainContract();\n            const baseCost = await zksyncContract.l2TransactionBaseCost(await gasPriceForEstimation, tx.l2GasLimit, tx.gasPerPubdataByte);\n            if (token == utils_1.ETH_ADDRESS) {\n                (_f = overrides.value) !== null && _f !== void 0 ? _f : (overrides.value = baseCost.add(operatorTip).add(amount));\n                return {\n                    contractAddress: to,\n                    calldata: '0x',\n                    l2Value: amount,\n                    // For some reason typescript can not deduce that we've already set the\n                    // tx.l2GasLimit\n                    l2GasLimit: tx.l2GasLimit,\n                    ...tx\n                };\n            }\n            else {\n                const args = [\n                    to,\n                    token,\n                    amount,\n                    tx.l2GasLimit,\n                    tx.gasPerPubdataByte\n                ];\n                (_g = overrides.value) !== null && _g !== void 0 ? _g : (overrides.value = baseCost.add(operatorTip));\n                await (0, utils_1.checkBaseCost)(baseCost, overrides.value);\n                // TODO: compatibility layer: using the old API which uses msg.sender as the\n                // refund recipient, to make the SDK compatible with the old contracts.\n                // const contract = bridgeContracts.erc20 as ethers.Contract;\n                return await bridgeContracts.erc20.populateTransaction.deposit(...args, overrides);\n            }\n        }\n        async _getWithdrawalLog(withdrawalHash, index = 0) {\n            const hash = ethers_1.ethers.utils.hexlify(withdrawalHash);\n            const receipt = await this._providerL2().getTransactionReceipt(hash);\n            const log = receipt.logs.filter((log) => log.address == utils_1.L1_MESSENGER_ADDRESS &&\n                log.topics[0] == ethers_1.ethers.utils.id('L1MessageSent(address,bytes32,bytes)'))[index];\n            return {\n                log,\n                l1BatchTxId: receipt.l1BatchTxIndex\n            };\n        }\n        async _getWithdrawalL2ToL1Log(withdrawalHash, index = 0) {\n            const hash = ethers_1.ethers.utils.hexlify(withdrawalHash);\n            const receipt = await this._providerL2().getTransactionReceipt(hash);\n            const messages = Array.from(receipt.l2ToL1Logs.entries()).filter(([_, log]) => log.sender == utils_1.L1_MESSENGER_ADDRESS);\n            const [l2ToL1LogIndex, l2ToL1Log] = messages[index];\n            return {\n                l2ToL1LogIndex,\n                l2ToL1Log\n            };\n        }\n        async finalizeWithdrawalParams(withdrawalHash, index = 0) {\n            const { log, l1BatchTxId } = await this._getWithdrawalLog(withdrawalHash, index);\n            const { l2ToL1LogIndex } = await this._getWithdrawalL2ToL1Log(withdrawalHash, index);\n            const sender = ethers_1.ethers.utils.hexDataSlice(log.topics[1], 12);\n            const proof = await this._providerL2().getLogProof(withdrawalHash, l2ToL1LogIndex);\n            const message = ethers_1.ethers.utils.defaultAbiCoder.decode(['bytes'], log.data)[0];\n            return {\n                l1BatchNumber: log.l1BatchNumber,\n                l2MessageIndex: proof.id,\n                l2TxNumberInBlock: l1BatchTxId,\n                message,\n                sender,\n                proof: proof.proof\n            };\n        }\n        async finalizeWithdrawal(withdrawalHash, index = 0, overrides) {\n            const { l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, sender, proof } = await this.finalizeWithdrawalParams(withdrawalHash, index);\n            if ((0, utils_1.isETH)(sender)) {\n                const contractAddress = await this._providerL2().getMainContractAddress();\n                const zksync = typechain_1.IZkSyncFactory.connect(contractAddress, this._signerL1());\n                return await zksync.finalizeEthWithdrawal(l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, proof, overrides !== null && overrides !== void 0 ? overrides : {});\n            }\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(sender, this._providerL2());\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(await l2Bridge.l1Bridge(), this._signerL1());\n            return await l1Bridge.finalizeWithdrawal(l1BatchNumber, l2MessageIndex, l2TxNumberInBlock, message, proof, overrides !== null && overrides !== void 0 ? overrides : {});\n        }\n        async isWithdrawalFinalized(withdrawalHash, index = 0) {\n            const { log } = await this._getWithdrawalLog(withdrawalHash, index);\n            const { l2ToL1LogIndex } = await this._getWithdrawalL2ToL1Log(withdrawalHash, index);\n            const sender = ethers_1.ethers.utils.hexDataSlice(log.topics[1], 12);\n            // `getLogProof` is called not to get proof but\n            // to get the index of the corresponding L2->L1 log,\n            // which is returned as `proof.id`.\n            const proof = await this._providerL2().getLogProof(withdrawalHash, l2ToL1LogIndex);\n            if ((0, utils_1.isETH)(sender)) {\n                const contractAddress = await this._providerL2().getMainContractAddress();\n                const zksync = typechain_1.IZkSyncFactory.connect(contractAddress, this._signerL1());\n                return await zksync.isEthWithdrawalFinalized(log.l1BatchNumber, proof.id);\n            }\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(sender, this._providerL2());\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(await l2Bridge.l1Bridge(), this._providerL1());\n            return await l1Bridge.isWithdrawalFinalized(log.l1BatchNumber, proof.id);\n        }\n        async claimFailedDeposit(depositHash, overrides) {\n            const receipt = await this._providerL2().getTransactionReceipt(ethers_1.ethers.utils.hexlify(depositHash));\n            const successL2ToL1LogIndex = receipt.l2ToL1Logs.findIndex((l2ToL1log) => l2ToL1log.sender == utils_1.BOOTLOADER_FORMAL_ADDRESS && l2ToL1log.key == depositHash);\n            const successL2ToL1Log = receipt.l2ToL1Logs[successL2ToL1LogIndex];\n            if (successL2ToL1Log.value != ethers_1.ethers.constants.HashZero) {\n                throw new Error('Cannot claim successful deposit');\n            }\n            const tx = await this._providerL2().getTransaction(ethers_1.ethers.utils.hexlify(depositHash));\n            // Undo the aliasing, since the Mailbox contract set it as for contract address.\n            const l1BridgeAddress = (0, utils_1.undoL1ToL2Alias)(receipt.from);\n            const l2BridgeAddress = receipt.to;\n            const l1Bridge = typechain_1.IL1BridgeFactory.connect(l1BridgeAddress, this._signerL1());\n            const l2Bridge = typechain_1.IL2BridgeFactory.connect(l2BridgeAddress, this._providerL2());\n            const calldata = l2Bridge.interface.decodeFunctionData('finalizeDeposit', tx.data);\n            const proof = await this._providerL2().getLogProof(depositHash, successL2ToL1LogIndex);\n            return await l1Bridge.claimFailedDeposit(calldata['_l1Sender'], calldata['_l1Token'], depositHash, receipt.l1BatchNumber, proof.id, receipt.l1BatchTxIndex, proof.proof, overrides !== null && overrides !== void 0 ? overrides : {});\n        }\n        async requestExecute(transaction) {\n            const requestExecuteTx = await this.getRequestExecuteTx(transaction);\n            return this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(requestExecuteTx));\n        }\n        async estimateGasRequestExecute(transaction) {\n            const requestExecuteTx = await this.getRequestExecuteTx(transaction);\n            return this._providerL1().estimateGas(requestExecuteTx);\n        }\n        async getRequestExecuteTx(transaction) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            const zksyncContract = await this.getMainContract();\n            const { ...tx } = transaction;\n            (_a = tx.l2Value) !== null && _a !== void 0 ? _a : (tx.l2Value = ethers_1.BigNumber.from(0));\n            (_b = tx.operatorTip) !== null && _b !== void 0 ? _b : (tx.operatorTip = ethers_1.BigNumber.from(0));\n            (_c = tx.factoryDeps) !== null && _c !== void 0 ? _c : (tx.factoryDeps = []);\n            (_d = tx.overrides) !== null && _d !== void 0 ? _d : (tx.overrides = {});\n            (_e = tx.gasPerPubdataByte) !== null && _e !== void 0 ? _e : (tx.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n            (_f = tx.refundRecipient) !== null && _f !== void 0 ? _f : (tx.refundRecipient = await this.getAddress());\n            (_g = tx.l2GasLimit) !== null && _g !== void 0 ? _g : (tx.l2GasLimit = await this._providerL2().estimateL1ToL2Execute(transaction));\n            const { contractAddress, l2Value, calldata, l2GasLimit, factoryDeps, operatorTip, overrides, gasPerPubdataByte, refundRecipient } = tx;\n            await insertGasPrice(this._providerL1(), overrides);\n            const gasPriceForEstimation = overrides.maxFeePerGas || overrides.gasPrice;\n            const baseCost = await this.getBaseCost({\n                gasPrice: await gasPriceForEstimation,\n                gasPerPubdataByte,\n                gasLimit: l2GasLimit\n            });\n            (_h = overrides.value) !== null && _h !== void 0 ? _h : (overrides.value = baseCost.add(operatorTip).add(l2Value));\n            await (0, utils_1.checkBaseCost)(baseCost, overrides.value);\n            return await zksyncContract.populateTransaction.requestL2Transaction(contractAddress, l2Value, calldata, l2GasLimit, utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT, factoryDeps, refundRecipient, overrides);\n        }\n    };\n}\nexports.AdapterL1 = AdapterL1;\nfunction AdapterL2(Base) {\n    return class Adapter extends Base {\n        _providerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        _signerL2() {\n            throw new Error('Must be implemented by the derived class!');\n        }\n        async getBalance(token, blockTag = 'committed') {\n            return await this._providerL2().getBalance(await this.getAddress(), blockTag, token);\n        }\n        async getAllBalances() {\n            return await this._providerL2().getAllAccountBalances(await this.getAddress());\n        }\n        async getL2BridgeContracts() {\n            const addresses = await this._providerL2().getDefaultBridgeAddresses();\n            return {\n                erc20: typechain_1.IL2BridgeFactory.connect(addresses.erc20L2, this._signerL2())\n            };\n        }\n        _fillCustomData(data) {\n            var _a, _b;\n            const customData = { ...data };\n            (_a = customData.gasPerPubdata) !== null && _a !== void 0 ? _a : (customData.gasPerPubdata = utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT);\n            (_b = customData.factoryDeps) !== null && _b !== void 0 ? _b : (customData.factoryDeps = []);\n            return customData;\n        }\n        async withdraw(transaction) {\n            const withdrawTx = await this._providerL2().getWithdrawTx({\n                from: await this.getAddress(),\n                ...transaction\n            });\n            const txResponse = await this.sendTransaction(withdrawTx);\n            return this._providerL2()._wrapTransaction(txResponse);\n        }\n        async transfer(transaction) {\n            const transferTx = await this._providerL2().getTransferTx({\n                from: await this.getAddress(),\n                ...transaction\n            });\n            const txResponse = await this.sendTransaction(transferTx);\n            return this._providerL2()._wrapTransaction(txResponse);\n        }\n    };\n}\nexports.AdapterL2 = AdapterL2;\n/// @dev This method checks if the overrides contain a gasPrice (or maxFeePerGas), if not it will insert\n/// the maxFeePerGas\nasync function insertGasPrice(l1Provider, overrides) {\n    if (!overrides.gasPrice && !overrides.maxFeePerGas) {\n        const l1FeeData = await l1Provider.getFeeData();\n        // Sometimes baseFeePerGas is not available, so we use gasPrice instead.\n        const baseFee = l1FeeData.lastBaseFeePerGas || l1FeeData.gasPrice;\n        // ethers.js by default uses multiplcation by 2, but since the price for the L2 part\n        // will depend on the L1 part, doubling base fee is typically too much.\n        const maxFeePerGas = baseFee.mul(3).div(2).add(l1FeeData.maxPriorityFeePerGas);\n        overrides.maxFeePerGas = maxFeePerGas;\n        overrides.maxPriorityFeePerGas = l1FeeData.maxPriorityFeePerGas;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.L1Signer = exports.Signer = exports.EIP712Signer = exports.eip712Types = void 0;\nconst ethers_1 = require(\"ethers\");\nconst utils_1 = require(\"./utils\");\nconst hash_1 = require(\"@ethersproject/hash\");\nconst adapters_1 = require(\"./adapters\");\nexports.eip712Types = {\n    Transaction: [\n        { name: 'txType', type: 'uint256' },\n        { name: 'from', type: 'uint256' },\n        { name: 'to', type: 'uint256' },\n        { name: 'gasLimit', type: 'uint256' },\n        { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n        { name: 'maxFeePerGas', type: 'uint256' },\n        { name: 'maxPriorityFeePerGas', type: 'uint256' },\n        { name: 'paymaster', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'value', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n        { name: 'factoryDeps', type: 'bytes32[]' },\n        { name: 'paymasterInput', type: 'bytes' }\n    ]\n};\nclass EIP712Signer {\n    constructor(ethSigner, chainId) {\n        this.ethSigner = ethSigner;\n        this.eip712Domain = Promise.resolve(chainId).then((chainId) => ({\n            name: 'zkSync',\n            version: '2',\n            chainId\n        }));\n    }\n    static getSignInput(transaction) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const maxFeePerGas = transaction.maxFeePerGas || transaction.gasPrice;\n        const maxPriorityFeePerGas = transaction.maxPriorityFeePerGas || maxFeePerGas;\n        const gasPerPubdataByteLimit = ((_a = transaction.customData) === null || _a === void 0 ? void 0 : _a.gasPerPubdata) || utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT;\n        const signInput = {\n            txType: transaction.type,\n            from: transaction.from,\n            to: transaction.to,\n            gasLimit: transaction.gasLimit,\n            gasPerPubdataByteLimit: gasPerPubdataByteLimit,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            paymaster: ((_c = (_b = transaction.customData) === null || _b === void 0 ? void 0 : _b.paymasterParams) === null || _c === void 0 ? void 0 : _c.paymaster) || ethers_1.ethers.constants.AddressZero,\n            nonce: transaction.nonce,\n            value: transaction.value,\n            data: transaction.data,\n            factoryDeps: ((_e = (_d = transaction.customData) === null || _d === void 0 ? void 0 : _d.factoryDeps) === null || _e === void 0 ? void 0 : _e.map((dep) => (0, utils_1.hashBytecode)(dep))) || [],\n            paymasterInput: ((_g = (_f = transaction.customData) === null || _f === void 0 ? void 0 : _f.paymasterParams) === null || _g === void 0 ? void 0 : _g.paymasterInput) || '0x'\n        };\n        return signInput;\n    }\n    async sign(transaction) {\n        return await this.ethSigner._signTypedData(await this.eip712Domain, exports.eip712Types, EIP712Signer.getSignInput(transaction));\n    }\n    static getSignedDigest(transaction) {\n        if (!transaction.chainId) {\n            throw Error(\"Transaction chainId isn't set\");\n        }\n        const domain = {\n            name: 'zkSync',\n            version: '2',\n            chainId: transaction.chainId\n        };\n        return hash_1._TypedDataEncoder.hash(domain, exports.eip712Types, EIP712Signer.getSignInput(transaction));\n    }\n}\nexports.EIP712Signer = EIP712Signer;\n// This class is to be used on the frontend, with metamask injection.\n// It only contains L2 operations. For L1 operations, see L1Signer.\n// Sample usage:\n// const provider = new zkweb3.Web3Provider(window.ethereum);\n// const signer = provider.getSigner();\n// const tx = await signer.sendTransaction({ ... });\nclass Signer extends (0, adapters_1.AdapterL2)(ethers_1.ethers.providers.JsonRpcSigner) {\n    _signerL2() {\n        return this;\n    }\n    _providerL2() {\n        return this.provider;\n    }\n    static from(signer) {\n        const newSigner = Object.setPrototypeOf(signer, Signer.prototype);\n        // @ts-ignore\n        newSigner.eip712 = new EIP712Signer(newSigner, newSigner.getChainId());\n        return newSigner;\n    }\n    // an alias with a better name\n    async getNonce(blockTag) {\n        return await this.getTransactionCount(blockTag);\n    }\n    async sendTransaction(transaction) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (transaction.customData == null && transaction.type == null) {\n            // use legacy txs by default\n            transaction.type = 0;\n        }\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            return (await super.sendTransaction(transaction));\n        }\n        else {\n            const address = await this.getAddress();\n            (_a = transaction.from) !== null && _a !== void 0 ? _a : (transaction.from = address);\n            if (transaction.from.toLowerCase() != address.toLowerCase()) {\n                throw new Error('Transaction `from` address mismatch');\n            }\n            transaction.type = utils_1.EIP712_TX_TYPE;\n            (_b = transaction.value) !== null && _b !== void 0 ? _b : (transaction.value = 0);\n            (_c = transaction.data) !== null && _c !== void 0 ? _c : (transaction.data = '0x');\n            (_d = transaction.nonce) !== null && _d !== void 0 ? _d : (transaction.nonce = await this.getNonce());\n            transaction.customData = this._fillCustomData(transaction.customData);\n            (_e = transaction.gasPrice) !== null && _e !== void 0 ? _e : (transaction.gasPrice = await this.provider.getGasPrice());\n            (_f = transaction.gasLimit) !== null && _f !== void 0 ? _f : (transaction.gasLimit = await this.provider.estimateGas(transaction));\n            (_g = transaction.chainId) !== null && _g !== void 0 ? _g : (transaction.chainId = (await this.provider.getNetwork()).chainId);\n            transaction.customData.customSignature = await this.eip712.sign(transaction);\n            const txBytes = (0, utils_1.serialize)(transaction);\n            return await this.provider.sendTransaction(txBytes);\n        }\n    }\n}\nexports.Signer = Signer;\n// This class is to be used on the frontend with metamask injection.\n// It only contains L1 operations. For L2 operations, see Signer.\n// Sample usage:\n// const provider = new ethers.Web3Provider(window.ethereum);\n// const zksyncProvider = new zkweb3.Provider('<rpc_url>');\n// const signer = zkweb3.L1Signer.from(provider.getSigner(), zksyncProvider);\n// const tx = await signer.deposit({ ... });\nclass L1Signer extends (0, adapters_1.AdapterL1)(ethers_1.ethers.providers.JsonRpcSigner) {\n    _providerL2() {\n        return this.providerL2;\n    }\n    _providerL1() {\n        return this.provider;\n    }\n    _signerL1() {\n        return this;\n    }\n    static from(signer, zksyncProvider) {\n        const newSigner = Object.setPrototypeOf(signer, L1Signer.prototype);\n        newSigner.providerL2 = zksyncProvider;\n        return newSigner;\n    }\n    connectToL2(provider) {\n        this.providerL2 = provider;\n        return this;\n    }\n}\nexports.L1Signer = L1Signer;\n", "{\n  \"abi\": [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_minAllowance\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_innerInput\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"approvalBased\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"input\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"general\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPaymasterParams = exports.getGeneralPaymasterInput = exports.getApprovalBasedPaymasterInput = exports.IPaymasterFlow = void 0;\nconst ethers_1 = require(\"ethers\");\nexports.IPaymasterFlow = new ethers_1.ethers.utils.Interface(require('../../abi/IPaymasterFlow.json').abi);\nfunction getApprovalBasedPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('approvalBased', [\n        paymasterInput.token,\n        paymasterInput.minimalAllowance,\n        paymasterInput.innerInput\n    ]);\n}\nexports.getApprovalBasedPaymasterInput = getApprovalBasedPaymasterInput;\nfunction getGeneralPaymasterInput(paymasterInput) {\n    return exports.IPaymasterFlow.encodeFunctionData('general', [paymasterInput.innerInput]);\n}\nexports.getGeneralPaymasterInput = getGeneralPaymasterInput;\nfunction getPaymasterParams(paymasterAddress, paymasterInput) {\n    if (paymasterInput.type == 'General') {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getGeneralPaymasterInput(paymasterInput)\n        };\n    }\n    else {\n        return {\n            paymaster: paymasterAddress,\n            paymasterInput: getApprovalBasedPaymasterInput(paymasterInput)\n        };\n    }\n}\nexports.getPaymasterParams = getPaymasterParams;\n", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"blockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"blockHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"commitment\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"BlockCommit\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"blockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"blockHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"commitment\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"BlockExecution\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"totalBlocksCommitted\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"totalBlocksVerified\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"totalBlocksExecuted\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"BlocksRevert\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"previousLastVerifiedBlock\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"currentLastVerifiedBlock\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"BlocksVerification\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"CancelUpgradeProposal\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"EthWithdrawalFinalized\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalSalt\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"ExecuteUpgrade\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [],\n      \"name\": \"Freeze\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"isPorterAvailable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"IsPorterAvailableStatusUpdate\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"oldGovernor\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newGovernor\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewGovernor\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"previousBytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"newBytecodeHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"NewL2BootloaderBytecodeHash\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"previousBytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"newBytecodeHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"NewL2DefaultAccountBytecodeHash\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"oldPendingGovernor\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newPendingGovernor\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewPendingGovernor\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"txId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"txHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint64\",\n          \"name\": \"expirationTimestamp\",\n          \"type\": \"uint64\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"txType\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"from\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"to\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"gasLimit\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"gasPerPubdataByteLimit\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"maxFeePerGas\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"maxPriorityFeePerGas\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"paymaster\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"nonce\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256[4]\",\n              \"name\": \"reserved\",\n              \"type\": \"uint256[4]\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"signature\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"factoryDeps\",\n              \"type\": \"uint256[]\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"paymasterInput\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"reservedDynamic\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct IMailbox.L2CanonicalTransaction\",\n          \"name\": \"transaction\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes[]\",\n          \"name\": \"factoryDeps\",\n          \"type\": \"bytes[]\"\n        }\n      ],\n      \"name\": \"NewPriorityRequest\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"oldPriorityTxMaxGasLimit\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"newPriorityTxMaxGasLimit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"NewPriorityTxMaxGasLimit\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"oldVerifier\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newVerifier\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"NewVerifier\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionNodeLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionLeafLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionCircuitsSetVksHash\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct VerifierParams\",\n          \"name\": \"oldVerifierParams\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionNodeLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionLeafLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionCircuitsSetVksHash\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct VerifierParams\",\n          \"name\": \"newVerifierParams\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"NewVerifierParams\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"ProposeShadowUpgrade\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"facet\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"enum Diamond.Action\",\n                  \"name\": \"action\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"bool\",\n                  \"name\": \"isFreezable\",\n                  \"type\": \"bool\"\n                },\n                {\n                  \"internalType\": \"bytes4[]\",\n                  \"name\": \"selectors\",\n                  \"type\": \"bytes4[]\"\n                }\n              ],\n              \"internalType\": \"struct Diamond.FacetCut[]\",\n              \"name\": \"facetCuts\",\n              \"type\": \"tuple[]\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"initAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"initCalldata\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct Diamond.DiamondCutData\",\n          \"name\": \"diamondCut\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalSalt\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"ProposeTransparentUpgrade\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"proposalHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"SecurityCouncilUpgradeApprove\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [],\n      \"name\": \"Unfreeze\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"validatorAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"isActive\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ValidatorStatusUpdate\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"acceptGovernor\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_proposedUpgradeHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"cancelUpgradeProposal\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"blockNumber\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"blockHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"indexRepeatedStorageChanges\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"numberOfLayer1Txs\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priorityOperationsHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"l2LogsTreeRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"commitment\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.StoredBlockInfo\",\n          \"name\": \"_lastCommittedBlockData\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"blockNumber\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"indexRepeatedStorageChanges\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"newStateRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"numberOfLayer1Txs\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"l2LogsTreeRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priorityOperationsHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"initialStorageChanges\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"repeatedStorageChanges\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"l2Logs\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"bytes[]\",\n              \"name\": \"l2ArbitraryLengthMessages\",\n              \"type\": \"bytes[]\"\n            },\n            {\n              \"internalType\": \"bytes[]\",\n              \"name\": \"factoryDeps\",\n              \"type\": \"bytes[]\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.CommitBlockInfo[]\",\n          \"name\": \"_newBlocksData\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"commitBlocks\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"blockNumber\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"blockHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"indexRepeatedStorageChanges\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"numberOfLayer1Txs\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priorityOperationsHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"l2LogsTreeRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"commitment\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.StoredBlockInfo[]\",\n          \"name\": \"_blocksData\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"executeBlocks\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"facet\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"enum Diamond.Action\",\n                  \"name\": \"action\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"bool\",\n                  \"name\": \"isFreezable\",\n                  \"type\": \"bool\"\n                },\n                {\n                  \"internalType\": \"bytes4[]\",\n                  \"name\": \"selectors\",\n                  \"type\": \"bytes4[]\"\n                }\n              ],\n              \"internalType\": \"struct Diamond.FacetCut[]\",\n              \"name\": \"facetCuts\",\n              \"type\": \"tuple[]\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"initAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"initCalldata\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct Diamond.DiamondCutData\",\n          \"name\": \"_diamondCut\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_proposalSalt\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"executeUpgrade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"_selector\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"facetAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"facet\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"facetAddresses\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"facets\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_facet\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"facetFunctionSelectors\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes4[]\",\n          \"name\": \"\",\n          \"type\": \"bytes4[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"facets\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"addr\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes4[]\",\n              \"name\": \"selectors\",\n              \"type\": \"bytes4[]\"\n            }\n          ],\n          \"internalType\": \"struct IGetters.Facet[]\",\n          \"name\": \"\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"_l2TxNumberInBlock\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_message\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_merkleProof\",\n          \"type\": \"bytes32[]\"\n        }\n      ],\n      \"name\": \"finalizeEthWithdrawal\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"freezeDiamond\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getCurrentProposalId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getFirstUnprocessedPriorityTx\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getGovernor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getL2BootloaderBytecodeHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getL2DefaultAccountBytecodeHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getPendingGovernor\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getPriorityQueueSize\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getProposedUpgradeHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getProposedUpgradeTimestamp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getSecurityCouncil\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTotalBlocksCommitted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTotalBlocksExecuted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTotalBlocksVerified\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTotalPriorityTxs\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getUpgradeProposalState\",\n      \"outputs\": [\n        {\n          \"internalType\": \"enum UpgradeState\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getVerifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getVerifierParams\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionNodeLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionLeafLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionCircuitsSetVksHash\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct VerifierParams\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getpriorityTxMaxGasLimit\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"isApprovedBySecurityCouncil\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"isDiamondStorageFrozen\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isEthWithdrawalFinalized\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_facet\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isFacetFreezable\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"isFreezable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"_selector\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"isFunctionFreezable\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_address\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isValidator\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_blockNumber\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"l2LogsRootHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"hash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_gasPrice\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2GasLimit\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2GasPerPubdataByteLimit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"l2TransactionBaseCost\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"priorityQueueFrontOperation\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"canonicalTxHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"expirationTimestamp\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint192\",\n              \"name\": \"layer2Tip\",\n              \"type\": \"uint192\"\n            }\n          ],\n          \"internalType\": \"struct PriorityOperation\",\n          \"name\": \"\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_proposalHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint40\",\n          \"name\": \"_proposalId\",\n          \"type\": \"uint40\"\n        }\n      ],\n      \"name\": \"proposeShadowUpgrade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"facet\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"enum Diamond.Action\",\n                  \"name\": \"action\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"bool\",\n                  \"name\": \"isFreezable\",\n                  \"type\": \"bool\"\n                },\n                {\n                  \"internalType\": \"bytes4[]\",\n                  \"name\": \"selectors\",\n                  \"type\": \"bytes4[]\"\n                }\n              ],\n              \"internalType\": \"struct Diamond.FacetCut[]\",\n              \"name\": \"facetCuts\",\n              \"type\": \"tuple[]\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"initAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"initCalldata\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct Diamond.DiamondCutData\",\n          \"name\": \"_diamondCut\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint40\",\n          \"name\": \"_proposalId\",\n          \"type\": \"uint40\"\n        }\n      ],\n      \"name\": \"proposeTransparentUpgrade\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"blockNumber\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"blockHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"indexRepeatedStorageChanges\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"numberOfLayer1Txs\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priorityOperationsHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"l2LogsTreeRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"commitment\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.StoredBlockInfo\",\n          \"name\": \"_prevBlock\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"blockNumber\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"blockHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"indexRepeatedStorageChanges\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"numberOfLayer1Txs\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priorityOperationsHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"l2LogsTreeRoot\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"timestamp\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"commitment\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.StoredBlockInfo[]\",\n          \"name\": \"_committedBlocks\",\n          \"type\": \"tuple[]\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"recursiveAggregationInput\",\n              \"type\": \"uint256[]\"\n            },\n            {\n              \"internalType\": \"uint256[]\",\n              \"name\": \"serializedProof\",\n              \"type\": \"uint256[]\"\n            }\n          ],\n          \"internalType\": \"struct IExecutor.ProofInput\",\n          \"name\": \"_proof\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"proveBlocks\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_l2TxHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"_l2TxNumberInBlock\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_merkleProof\",\n          \"type\": \"bytes32[]\"\n        },\n        {\n          \"internalType\": \"enum TxStatus\",\n          \"name\": \"_status\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"proveL1ToL2TransactionStatus\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_blockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_index\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"l2ShardId\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isService\",\n              \"type\": \"bool\"\n            },\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"txNumberInBlock\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"sender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"key\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"value\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct L2Log\",\n          \"name\": \"_log\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_proof\",\n          \"type\": \"bytes32[]\"\n        }\n      ],\n      \"name\": \"proveL2LogInclusion\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_blockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_index\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"uint16\",\n              \"name\": \"txNumberInBlock\",\n              \"type\": \"uint16\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"sender\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"data\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct L2Message\",\n          \"name\": \"_message\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_proof\",\n          \"type\": \"bytes32[]\"\n        }\n      ],\n      \"name\": \"proveL2MessageInclusion\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_contractL2\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2Value\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_calldata\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2GasLimit\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2GasPerPubdataByteLimit\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes[]\",\n          \"name\": \"_factoryDeps\",\n          \"type\": \"bytes[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_refundRecipient\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"requestL2Transaction\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"canonicalTxHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_newLastBlock\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"revertBlocks\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_upgradeProposalHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"securityCouncilUpgradeApprove\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_l2BootloaderBytecodeHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"setL2BootloaderBytecodeHash\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_l2DefaultAccountBytecodeHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"setL2DefaultAccountBytecodeHash\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_newPendingGovernor\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPendingGovernor\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_zkPorterIsAvailable\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setPorterAvailability\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_newPriorityTxMaxGasLimit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setPriorityTxMaxGasLimit\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_validator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"_active\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setValidator\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"contract Verifier\",\n          \"name\": \"_newVerifier\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setVerifier\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionNodeLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionLeafLevelVkHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"recursionCircuitsSetVksHash\",\n              \"type\": \"bytes32\"\n            }\n          ],\n          \"internalType\": \"struct VerifierParams\",\n          \"name\": \"_newVerifierParams\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"setVerifierParams\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_blockNumber\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"storedBlockHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"unfreezeDiamond\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address\",\n                  \"name\": \"facet\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"enum Diamond.Action\",\n                  \"name\": \"action\",\n                  \"type\": \"uint8\"\n                },\n                {\n                  \"internalType\": \"bool\",\n                  \"name\": \"isFreezable\",\n                  \"type\": \"bool\"\n                },\n                {\n                  \"internalType\": \"bytes4[]\",\n                  \"name\": \"selectors\",\n                  \"type\": \"bytes4[]\"\n                }\n              ],\n              \"internalType\": \"struct Diamond.FacetCut[]\",\n              \"name\": \"facetCuts\",\n              \"type\": \"tuple[]\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"initAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"initCalldata\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct Diamond.DiamondCutData\",\n          \"name\": \"_diamondCut\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_proposalId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_salt\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"upgradeProposalHash\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"accountAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"enum IContractDeployer.AccountNonceOrdering\",\n          \"name\": \"nonceOrdering\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"AccountNonceOrderingUpdated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"accountAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n          \"name\": \"aaVersion\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"AccountVersionUpdated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"deployerAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"contractAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ContractDeployed\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_salt\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_input\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"create\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_salt\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_input\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"create2\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_salt\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_input\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n          \"name\": \"_aaVersion\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"create2Account\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_input\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n          \"name\": \"_aaVersion\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"createAccount\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_address\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"extendedAccountVersion\",\n      \"outputs\": [\n        {\n          \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"bytecodeHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"newAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"callConstructor\",\n              \"type\": \"bool\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"input\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct ContractDeployer.ForceDeployment\",\n          \"name\": \"_deployment\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_sender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"forceDeployOnAddress\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"bytecodeHash\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"newAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"callConstructor\",\n              \"type\": \"bool\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"input\",\n              \"type\": \"bytes\"\n            }\n          ],\n          \"internalType\": \"struct ContractDeployer.ForceDeployment[]\",\n          \"name\": \"_deployments\",\n          \"type\": \"tuple[]\"\n        }\n      ],\n      \"name\": \"forceDeployOnAddresses\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_address\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getAccountInfo\",\n      \"outputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n              \"name\": \"supportedAAVersion\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum IContractDeployer.AccountNonceOrdering\",\n              \"name\": \"nonceOrdering\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"internalType\": \"struct IContractDeployer.AccountInfo\",\n          \"name\": \"info\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_senderNonce\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getNewAddressCreate\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_bytecodeHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_salt\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_input\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"getNewAddressCreate2\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"enum IContractDeployer.AccountAbstractionVersion\",\n          \"name\": \"_version\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"updateAccountVersion\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"enum IContractDeployer.AccountNonceOrdering\",\n          \"name\": \"_nonceOrdering\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"updateNonceOrdering\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"_sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"bytes32\",\n          \"name\": \"_hash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bytes\",\n          \"name\": \"_message\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"L1MessageSent\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_message\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"sendToL1\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "{\n    \"abi\": [\n        {\n            \"inputs\": [\n                {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"hash\",\n                    \"type\": \"bytes32\"\n                },\n                {\n                    \"internalType\": \"bytes\",\n                    \"name\": \"signature\",\n                    \"type\": \"bytes\"\n                }\n            ],\n            \"name\": \"isValidSignature\",\n            \"outputs\": [\n                {\n                    \"internalType\": \"bytes4\",\n                    \"name\": \"magicValue\",\n                    \"type\": \"bytes4\"\n                }\n            ],\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }\n    ]\n}", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ClaimedFailedDeposit\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"DepositInitiated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"WithdrawalFinalized\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_depositSender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"_l2TxHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"_l2TxNumberInBlock\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_merkleProof\",\n          \"type\": \"bytes32[]\"\n        }\n      ],\n      \"name\": \"claimFailedDeposit\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l2Receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2TxGasLimit\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2TxGasPerPubdataByte\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"deposit\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"txHash\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint16\",\n          \"name\": \"_l2TxNumberInBlock\",\n          \"type\": \"uint16\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_message\",\n          \"type\": \"bytes\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"_merkleProof\",\n          \"type\": \"bytes32[]\"\n        }\n      ],\n      \"name\": \"finalizeWithdrawal\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2BlockNumber\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_l2MessageIndex\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isWithdrawalFinalized\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Token\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"l2TokenAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "{\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l1Sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l2Receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l2Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"FinalizeDeposit\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l2Sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l1Receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"l2Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"WithdrawalInitiated\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l2Receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"_data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"finalizeDeposit\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"l1Bridge\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l2Token\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"l1TokenAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Token\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"l2TokenAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l1Receiver\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_l2Token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"withdraw\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.estimateDefaultBridgeDepositL2Gas = exports.isTypedDataSignatureCorrect = exports.isMessageSignatureCorrect = exports.getERC20BridgeCalldata = exports.undoL1ToL2Alias = exports.applyL1ToL2Alias = exports.getL2HashFromPriorityOp = exports.parseTransaction = exports.hashBytecode = exports.serialize = exports.checkBaseCost = exports.createAddress = exports.create2Address = exports.getDeployedContracts = exports.getHashedL2ToL1Msg = exports.layer1TxDefaults = exports.sleep = exports.isETH = exports.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT = exports.DEFAULT_GAS_PER_PUBDATA_LIMIT = exports.MAX_BYTECODE_LEN_BYTES = exports.PRIORITY_OPERATION_L2_TX_TYPE = exports.EIP712_TX_TYPE = exports.EIP1271_MAGIC_VALUE = exports.L1_TO_L2_ALIAS_OFFSET = exports.L2_ETH_TOKEN_ADDRESS = exports.L1_MESSENGER_ADDRESS = exports.CONTRACT_DEPLOYER_ADDRESS = exports.BOOTLOADER_FORMAL_ADDRESS = exports.L2_BRIDGE_ABI = exports.L1_BRIDGE_ABI = exports.IERC1271 = exports.IERC20 = exports.L1_MESSENGER = exports.CONTRACT_DEPLOYER = exports.ZKSYNC_MAIN_ABI = exports.ETH_ADDRESS = void 0;\nconst ethers_1 = require(\"ethers\");\nconst types_1 = require(\"./types\");\nconst signer_1 = require(\"./signer\");\nconst typechain_1 = require(\"../typechain\");\nconst utils_1 = require(\"ethers/lib/utils\");\n__exportStar(require(\"./paymaster-utils\"), exports);\nexports.ETH_ADDRESS = '0x0000000000000000000000000000000000000000';\nexports.ZKSYNC_MAIN_ABI = new ethers_1.utils.Interface(require('../../abi/IZkSync.json').abi);\nexports.CONTRACT_DEPLOYER = new ethers_1.utils.Interface(require('../../abi/ContractDeployer.json').abi);\nexports.L1_MESSENGER = new ethers_1.utils.Interface(require('../../abi/IL1Messenger.json').abi);\nexports.IERC20 = new ethers_1.utils.Interface(require('../../abi/IERC20.json').abi);\nexports.IERC1271 = new ethers_1.utils.Interface(require('../../abi/IERC1271.json').abi);\nexports.L1_BRIDGE_ABI = new ethers_1.utils.Interface(require('../../abi/IL1Bridge.json').abi);\nexports.L2_BRIDGE_ABI = new ethers_1.utils.Interface(require('../../abi/IL2Bridge.json').abi);\nexports.BOOTLOADER_FORMAL_ADDRESS = '0x0000000000000000000000000000000000008001';\nexports.CONTRACT_DEPLOYER_ADDRESS = '0x0000000000000000000000000000000000008006';\nexports.L1_MESSENGER_ADDRESS = '0x0000000000000000000000000000000000008008';\nexports.L2_ETH_TOKEN_ADDRESS = '0x000000000000000000000000000000000000800a';\nexports.L1_TO_L2_ALIAS_OFFSET = '0x1111000000000000000000000000000000001111';\nexports.EIP1271_MAGIC_VALUE = '0x1626ba7e';\nexports.EIP712_TX_TYPE = 0x71;\nexports.PRIORITY_OPERATION_L2_TX_TYPE = 0xff;\nexports.MAX_BYTECODE_LEN_BYTES = ((1 << 16) - 1) * 32;\n// The large L2 gas per pubdata to sign. This gas is enough to ensure that\n// any reasonable limit will be accepted. Note, that the operator is NOT required to\n// use the honest value of gas per pubdata and it can use any value up to the one signed by the user.\n// In the future releases, we will provide a way to estimate the current gasPerPubdata.\nexports.DEFAULT_GAS_PER_PUBDATA_LIMIT = 50000;\n// It is possible to provide practically any gasPerPubdataByte for L1->L2 transactions, since\n// the cost per gas will be adjusted respectively. We will use 800 as an relatively optimal value for now.\nexports.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT = 800;\nfunction isETH(token) {\n    return token.toLowerCase() == exports.ETH_ADDRESS || token.toLowerCase() == exports.L2_ETH_TOKEN_ADDRESS;\n}\nexports.isETH = isETH;\nfunction sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n}\nexports.sleep = sleep;\nfunction layer1TxDefaults() {\n    return {\n        queueType: types_1.PriorityQueueType.Deque,\n        opTree: types_1.PriorityOpTree.Full\n    };\n}\nexports.layer1TxDefaults = layer1TxDefaults;\nfunction getHashedL2ToL1Msg(sender, msg, txNumberInBlock) {\n    const encodedMsg = new Uint8Array([\n        0,\n        1,\n        ...ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.hexlify(txNumberInBlock), 2),\n        ...ethers_1.ethers.utils.arrayify(exports.L1_MESSENGER_ADDRESS),\n        ...ethers_1.ethers.utils.zeroPad(sender, 32),\n        ...ethers_1.ethers.utils.arrayify(ethers_1.ethers.utils.keccak256(msg))\n    ]);\n    return ethers_1.ethers.utils.keccak256(encodedMsg);\n}\nexports.getHashedL2ToL1Msg = getHashedL2ToL1Msg;\nfunction getDeployedContracts(receipt) {\n    const addressBytesLen = 40;\n    const deployedContracts = receipt.logs\n        .filter((log) => log.topics[0] == ethers_1.utils.id('ContractDeployed(address,bytes32,address)') &&\n        log.address == exports.CONTRACT_DEPLOYER_ADDRESS)\n        // Take the last topic (deployed contract address as U256) and extract address from it (U160).\n        .map((log) => {\n        const sender = `0x${log.topics[1].slice(log.topics[1].length - addressBytesLen)}`;\n        const bytesCodehash = log.topics[2];\n        const address = `0x${log.topics[3].slice(log.topics[3].length - addressBytesLen)}`;\n        return {\n            sender: ethers_1.utils.getAddress(sender),\n            bytecodeHash: bytesCodehash,\n            deployedAddress: ethers_1.utils.getAddress(address)\n        };\n    });\n    return deployedContracts;\n}\nexports.getDeployedContracts = getDeployedContracts;\nfunction create2Address(sender, bytecodeHash, salt, input) {\n    const prefix = ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.toUtf8Bytes('zksyncCreate2'));\n    const inputHash = ethers_1.ethers.utils.keccak256(input);\n    const addressBytes = ethers_1.ethers.utils\n        .keccak256(ethers_1.ethers.utils.concat([prefix, ethers_1.ethers.utils.zeroPad(sender, 32), salt, bytecodeHash, inputHash]))\n        .slice(26);\n    return ethers_1.ethers.utils.getAddress(addressBytes);\n}\nexports.create2Address = create2Address;\nfunction createAddress(sender, senderNonce) {\n    const prefix = ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.toUtf8Bytes('zksyncCreate'));\n    const addressBytes = ethers_1.ethers.utils\n        .keccak256(ethers_1.ethers.utils.concat([\n        prefix,\n        ethers_1.ethers.utils.zeroPad(sender, 32),\n        ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.hexlify(senderNonce), 32)\n    ]))\n        .slice(26);\n    return ethers_1.ethers.utils.getAddress(addressBytes);\n}\nexports.createAddress = createAddress;\nasync function checkBaseCost(baseCost, value) {\n    if (baseCost.gt(await value)) {\n        throw new Error(`The base cost of performing the priority operation is higher than the provided value parameter ` +\n            `for the transaction: baseCost: ${baseCost}, provided value: ${value}`);\n    }\n}\nexports.checkBaseCost = checkBaseCost;\nfunction serialize(transaction, signature) {\n    var _a;\n    if (transaction.customData == null && transaction.type != exports.EIP712_TX_TYPE) {\n        return ethers_1.utils.serializeTransaction(transaction, signature);\n    }\n    if (!transaction.chainId) {\n        throw Error(\"Transaction chainId isn't set\");\n    }\n    function formatNumber(value, name) {\n        const result = ethers_1.utils.stripZeros(ethers_1.BigNumber.from(value).toHexString());\n        if (result.length > 32) {\n            throw new Error('invalid length for ' + name);\n        }\n        return result;\n    }\n    if (!transaction.from) {\n        throw new Error('Explicitly providing `from` field is reqiured for EIP712 transactions');\n    }\n    const from = transaction.from;\n    const meta = transaction.customData;\n    let maxFeePerGas = transaction.maxFeePerGas || transaction.gasPrice || 0;\n    let maxPriorityFeePerGas = transaction.maxPriorityFeePerGas || maxFeePerGas;\n    const fields = [\n        formatNumber(transaction.nonce || 0, 'nonce'),\n        formatNumber(maxPriorityFeePerGas, 'maxPriorityFeePerGas'),\n        formatNumber(maxFeePerGas, 'maxFeePerGas'),\n        formatNumber(transaction.gasLimit || 0, 'gasLimit'),\n        transaction.to != null ? ethers_1.utils.getAddress(transaction.to) : '0x',\n        formatNumber(transaction.value || 0, 'value'),\n        transaction.data || '0x'\n    ];\n    if (signature) {\n        const sig = ethers_1.utils.splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, 'recoveryParam'));\n        fields.push(ethers_1.utils.stripZeros(sig.r));\n        fields.push(ethers_1.utils.stripZeros(sig.s));\n    }\n    else {\n        fields.push(formatNumber(transaction.chainId, 'chainId'));\n        fields.push('0x');\n        fields.push('0x');\n    }\n    fields.push(formatNumber(transaction.chainId, 'chainId'));\n    fields.push(ethers_1.utils.getAddress(from));\n    // Add meta\n    fields.push(formatNumber(meta.gasPerPubdata || exports.DEFAULT_GAS_PER_PUBDATA_LIMIT, 'gasPerPubdata'));\n    fields.push(((_a = meta.factoryDeps) !== null && _a !== void 0 ? _a : []).map((dep) => ethers_1.utils.hexlify(dep)));\n    if (meta.customSignature && ethers_1.ethers.utils.arrayify(meta.customSignature).length == 0) {\n        throw new Error('Empty signatures are not supported');\n    }\n    fields.push(meta.customSignature || '0x');\n    if (meta.paymasterParams) {\n        fields.push([meta.paymasterParams.paymaster, ethers_1.ethers.utils.hexlify(meta.paymasterParams.paymasterInput)]);\n    }\n    else {\n        fields.push([]);\n    }\n    return ethers_1.utils.hexConcat([[exports.EIP712_TX_TYPE], ethers_1.utils.RLP.encode(fields)]);\n}\nexports.serialize = serialize;\nfunction hashBytecode(bytecode) {\n    // For getting the consistent length we first convert the bytecode to UInt8Array\n    const bytecodeAsArray = ethers_1.ethers.utils.arrayify(bytecode);\n    if (bytecodeAsArray.length % 32 != 0) {\n        throw new Error('The bytecode length in bytes must be divisible by 32');\n    }\n    if (bytecodeAsArray.length > exports.MAX_BYTECODE_LEN_BYTES) {\n        throw new Error(`Bytecode can not be longer than ${exports.MAX_BYTECODE_LEN_BYTES} bytes`);\n    }\n    const hashStr = ethers_1.ethers.utils.sha256(bytecodeAsArray);\n    const hash = ethers_1.ethers.utils.arrayify(hashStr);\n    // Note that the length of the bytecode\n    // should be provided in 32-byte words.\n    const bytecodeLengthInWords = bytecodeAsArray.length / 32;\n    if (bytecodeLengthInWords % 2 == 0) {\n        throw new Error('Bytecode length in 32-byte words must be odd');\n    }\n    const bytecodeLength = ethers_1.ethers.utils.arrayify(bytecodeLengthInWords);\n    // The bytecode should always take the first 2 bytes of the bytecode hash,\n    // so we pad it from the left in case the length is smaller than 2 bytes.\n    const bytecodeLengthPadded = ethers_1.ethers.utils.zeroPad(bytecodeLength, 2);\n    const codeHashVersion = new Uint8Array([1, 0]);\n    hash.set(codeHashVersion, 0);\n    hash.set(bytecodeLengthPadded, 2);\n    return hash;\n}\nexports.hashBytecode = hashBytecode;\nfunction parseTransaction(payload) {\n    function handleAddress(value) {\n        if (value === '0x') {\n            return null;\n        }\n        return ethers_1.utils.getAddress(value);\n    }\n    function handleNumber(value) {\n        if (value === '0x') {\n            return ethers_1.BigNumber.from(0);\n        }\n        return ethers_1.BigNumber.from(value);\n    }\n    function arrayToPaymasterParams(arr) {\n        if (arr.length == 0) {\n            return undefined;\n        }\n        if (arr.length != 2) {\n            throw new Error(`Invalid paymaster parameters, expected to have length of 2, found ${arr.length}`);\n        }\n        return {\n            paymaster: ethers_1.utils.getAddress(arr[0]),\n            paymasterInput: ethers_1.utils.arrayify(arr[1])\n        };\n    }\n    const bytes = ethers_1.utils.arrayify(payload);\n    if (bytes[0] != exports.EIP712_TX_TYPE) {\n        return ethers_1.utils.parseTransaction(bytes);\n    }\n    const raw = ethers_1.utils.RLP.decode(bytes.slice(1));\n    const transaction = {\n        type: exports.EIP712_TX_TYPE,\n        nonce: handleNumber(raw[0]).toNumber(),\n        maxPriorityFeePerGas: handleNumber(raw[1]),\n        maxFeePerGas: handleNumber(raw[2]),\n        gasLimit: handleNumber(raw[3]),\n        to: handleAddress(raw[4]),\n        value: handleNumber(raw[5]),\n        data: raw[6],\n        chainId: handleNumber(raw[10]),\n        from: handleAddress(raw[11]),\n        customData: {\n            gasPerPubdata: handleNumber(raw[12]),\n            factoryDeps: raw[13],\n            customSignature: raw[14],\n            paymasterParams: arrayToPaymasterParams(raw[15])\n        }\n    };\n    const ethSignature = {\n        v: handleNumber(raw[7]).toNumber(),\n        r: raw[8],\n        s: raw[9]\n    };\n    if ((ethers_1.utils.hexlify(ethSignature.r) == '0x' || ethers_1.utils.hexlify(ethSignature.s) == '0x') &&\n        !transaction.customData.customSignature) {\n        return transaction;\n    }\n    if (ethSignature.v !== 0 && ethSignature.v !== 1 && !transaction.customData.customSignature) {\n        throw new Error('Failed to parse signature');\n    }\n    if (!transaction.customData.customSignature) {\n        transaction.v = ethSignature.v;\n        transaction.s = ethSignature.s;\n        transaction.r = ethSignature.r;\n    }\n    transaction.hash = eip712TxHash(transaction, ethSignature);\n    return transaction;\n}\nexports.parseTransaction = parseTransaction;\nfunction getSignature(transaction, ethSignature) {\n    var _a;\n    if (((_a = transaction === null || transaction === void 0 ? void 0 : transaction.customData) === null || _a === void 0 ? void 0 : _a.customSignature) && transaction.customData.customSignature.length) {\n        return ethers_1.ethers.utils.arrayify(transaction.customData.customSignature);\n    }\n    if (!ethSignature) {\n        throw new Error('No signature provided');\n    }\n    const r = ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.arrayify(ethSignature.r), 32);\n    const s = ethers_1.ethers.utils.zeroPad(ethers_1.ethers.utils.arrayify(ethSignature.s), 32);\n    const v = ethSignature.v;\n    return new Uint8Array([...r, ...s, v]);\n}\nfunction eip712TxHash(transaction, ethSignature) {\n    const signedDigest = signer_1.EIP712Signer.getSignedDigest(transaction);\n    const hashedSignature = ethers_1.ethers.utils.keccak256(getSignature(transaction, ethSignature));\n    return ethers_1.ethers.utils.keccak256(ethers_1.ethers.utils.hexConcat([signedDigest, hashedSignature]));\n}\nfunction getL2HashFromPriorityOp(txReceipt, zkSyncAddress) {\n    let txHash = null;\n    for (const log of txReceipt.logs) {\n        if (log.address.toLowerCase() != zkSyncAddress.toLowerCase()) {\n            continue;\n        }\n        try {\n            const priorityQueueLog = exports.ZKSYNC_MAIN_ABI.parseLog(log);\n            if (priorityQueueLog && priorityQueueLog.args.txHash != null) {\n                txHash = priorityQueueLog.args.txHash;\n            }\n        }\n        catch { }\n    }\n    if (!txHash) {\n        throw new Error('Failed to parse tx logs');\n    }\n    return txHash;\n}\nexports.getL2HashFromPriorityOp = getL2HashFromPriorityOp;\nconst ADDRESS_MODULO = ethers_1.BigNumber.from(2).pow(160);\nfunction applyL1ToL2Alias(address) {\n    return ethers_1.ethers.utils.hexlify(ethers_1.ethers.BigNumber.from(address).add(exports.L1_TO_L2_ALIAS_OFFSET).mod(ADDRESS_MODULO));\n}\nexports.applyL1ToL2Alias = applyL1ToL2Alias;\nfunction undoL1ToL2Alias(address) {\n    let result = ethers_1.ethers.BigNumber.from(address).sub(exports.L1_TO_L2_ALIAS_OFFSET);\n    if (result.lt(ethers_1.BigNumber.from(0))) {\n        result = result.add(ADDRESS_MODULO);\n    }\n    return ethers_1.ethers.utils.hexlify(result);\n}\nexports.undoL1ToL2Alias = undoL1ToL2Alias;\n/// Getters data used to correctly initialize the L1 token counterpart on L2\nasync function getERC20GettersData(l1TokenAddress, provider) {\n    const token = typechain_1.IERC20MetadataFactory.connect(l1TokenAddress, provider);\n    const name = await token.name();\n    const symbol = await token.symbol();\n    const decimals = await token.decimals();\n    const coder = new utils_1.AbiCoder();\n    const nameBytes = coder.encode(['string'], [name]);\n    const symbolBytes = coder.encode(['string'], [symbol]);\n    const decimalsBytes = coder.encode(['uint256'], [decimals]);\n    return coder.encode(['bytes', 'bytes', 'bytes'], [nameBytes, symbolBytes, decimalsBytes]);\n}\n/// The method that returns the calldata that will be sent by an L1 ERC20 bridge to its L2 counterpart\n/// during bridging of a token.\nasync function getERC20BridgeCalldata(l1TokenAddress, l1Sender, l2Receiver, amount, provider) {\n    const gettersData = await getERC20GettersData(l1TokenAddress, provider);\n    return exports.L2_BRIDGE_ABI.encodeFunctionData('finalizeDeposit', [\n        l1Sender,\n        l2Receiver,\n        l1TokenAddress,\n        amount,\n        gettersData\n    ]);\n}\nexports.getERC20BridgeCalldata = getERC20BridgeCalldata;\n// The method with similar functionality is already available in ethers.js,\n// the only difference is that we provide additional `try { } catch { }`\n// for error-resilience.\n//\n// It will also pave the road for allowing future EIP-1271 signature verification, by\n// letting our SDK have functionality to verify signatures.\nfunction isECDSASignatureCorrect(address, msgHash, signature) {\n    try {\n        return address == ethers_1.ethers.utils.recoverAddress(msgHash, signature);\n    }\n    catch {\n        // In case ECDSA signature verification has thrown an error,\n        // we simply consider the signature as incorrect.\n        return false;\n    }\n}\nasync function isEIP1271SignatureCorrect(provider, address, msgHash, signature) {\n    const accountContract = new ethers_1.ethers.Contract(address, exports.IERC1271, provider);\n    // This line may throw an exception if the contract does not implement the EIP1271 correctly.\n    // But it may also throw an exception in case the internet connection is lost.\n    // It is the caller's responsibility to handle the exception.\n    const result = await accountContract.isValidSignature(msgHash, signature);\n    return result == exports.EIP1271_MAGIC_VALUE;\n}\nasync function isSignatureCorrect(provider, address, msgHash, signature) {\n    let isContractAccount = false;\n    const code = await provider.getCode(address);\n    isContractAccount = ethers_1.ethers.utils.arrayify(code).length != 0;\n    if (!isContractAccount) {\n        return isECDSASignatureCorrect(address, msgHash, signature);\n    }\n    else {\n        return await isEIP1271SignatureCorrect(provider, address, msgHash, signature);\n    }\n}\n// Returns `true` or `false` depending on whether or not the account abstraction's\n// signature is correct. Note, that while currently it does not do any `async` actions.\n// in the future it will. That's why the `Promise<boolean>` is returned.\nasync function isMessageSignatureCorrect(provider, address, message, signature) {\n    const msgHash = ethers_1.ethers.utils.hashMessage(message);\n    return await isSignatureCorrect(provider, address, msgHash, signature);\n}\nexports.isMessageSignatureCorrect = isMessageSignatureCorrect;\n// Returns `true` or `false` depending on whether or not the account abstraction's\n// EIP712 signature is correct. Note, that while currently it does not do any `async` actions.\n// in the future it will. That's why the `Promise<boolean>` is returned.\nasync function isTypedDataSignatureCorrect(provider, address, domain, types, value, signature) {\n    const msgHash = ethers_1.ethers.utils._TypedDataEncoder.hash(domain, types, value);\n    return await isSignatureCorrect(provider, address, msgHash, signature);\n}\nexports.isTypedDataSignatureCorrect = isTypedDataSignatureCorrect;\nasync function estimateDefaultBridgeDepositL2Gas(providerL1, providerL2, token, amount, to, from, gasPerPubdataByte) {\n    // If the `from` address is not provided, we use a random address, because\n    // due to storage slot aggregation, the gas estimation will depend on the address\n    // and so estimation for the zero address may be smaller than for the sender.\n    from !== null && from !== void 0 ? from : (from = ethers_1.ethers.Wallet.createRandom().address);\n    if (token == exports.ETH_ADDRESS) {\n        return await providerL2.estimateL1ToL2Execute({\n            contractAddress: to,\n            gasPerPubdataByte: gasPerPubdataByte,\n            caller: from,\n            calldata: '0x',\n            l2Value: amount\n        });\n    }\n    else {\n        const l1ERC20BridgeAddresses = (await providerL2.getDefaultBridgeAddresses()).erc20L1;\n        const erc20BridgeAddress = (await providerL2.getDefaultBridgeAddresses()).erc20L2;\n        const calldata = await getERC20BridgeCalldata(token, from, to, amount, providerL1);\n        return await providerL2.estimateL1ToL2Execute({\n            caller: applyL1ToL2Alias(l1ERC20BridgeAddresses),\n            contractAddress: erc20BridgeAddress,\n            gasPerPubdataByte: gasPerPubdataByte,\n            calldata: calldata\n        });\n    }\n}\nexports.estimateDefaultBridgeDepositL2Gas = estimateDefaultBridgeDepositL2Gas;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wallet = void 0;\nconst signer_1 = require(\"./signer\");\nconst utils_1 = require(\"./utils\");\nconst ethers_1 = require(\"ethers\");\nconst adapters_1 = require(\"./adapters\");\nclass Wallet extends (0, adapters_1.AdapterL2)((0, adapters_1.AdapterL1)(ethers_1.ethers.Wallet)) {\n    _providerL1() {\n        if (this.providerL1 == null) {\n            throw new Error('L1 provider missing: use `connectToL1` to specify');\n        }\n        return this.providerL1;\n    }\n    _providerL2() {\n        return this.provider;\n    }\n    _signerL1() {\n        return this.ethWallet();\n    }\n    _signerL2() {\n        return this;\n    }\n    ethWallet() {\n        return new ethers_1.ethers.Wallet(this._signingKey(), this._providerL1());\n    }\n    // an alias with a better name\n    async getNonce(blockTag) {\n        return await this.getTransactionCount(blockTag);\n    }\n    connect(provider) {\n        return new Wallet(this._signingKey(), provider, this.providerL1);\n    }\n    connectToL1(provider) {\n        return new Wallet(this._signingKey(), this.provider, provider);\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        const wallet = super.fromMnemonic(mnemonic, path, wordlist);\n        return new Wallet(wallet._signingKey());\n    }\n    static async fromEncryptedJson(json, password, callback) {\n        const wallet = await super.fromEncryptedJson(json, password, callback);\n        return new Wallet(wallet._signingKey());\n    }\n    static fromEncryptedJsonSync(json, password) {\n        const wallet = super.fromEncryptedJsonSync(json, password);\n        return new Wallet(wallet._signingKey());\n    }\n    static createRandom(options) {\n        const wallet = super.createRandom(options);\n        return new Wallet(wallet._signingKey());\n    }\n    constructor(privateKey, providerL2, providerL1) {\n        super(privateKey, providerL2);\n        if (this.provider != null) {\n            const chainId = this.getChainId();\n            // @ts-ignore\n            this.eip712 = new signer_1.EIP712Signer(this, chainId);\n        }\n        this.providerL1 = providerL1;\n    }\n    async populateTransaction(transaction) {\n        var _a, _b;\n        if (transaction.type == null && transaction.customData == null) {\n            // use legacy txs by default\n            transaction.type = 0;\n        }\n        transaction = await super.populateTransaction(transaction);\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            return transaction;\n        }\n        transaction.type = utils_1.EIP712_TX_TYPE;\n        (_a = transaction.value) !== null && _a !== void 0 ? _a : (transaction.value = 0);\n        (_b = transaction.data) !== null && _b !== void 0 ? _b : (transaction.data = '0x');\n        transaction.customData = this._fillCustomData(transaction.customData);\n        transaction.gasPrice = await this.provider.getGasPrice();\n        return transaction;\n    }\n    async signTransaction(transaction) {\n        var _a;\n        if (transaction.customData == null && transaction.type != utils_1.EIP712_TX_TYPE) {\n            if (transaction.type == 2 && transaction.maxFeePerGas == null) {\n                transaction.maxFeePerGas = await this.provider.getGasPrice();\n            }\n            return await super.signTransaction(transaction);\n        }\n        else {\n            (_a = transaction.from) !== null && _a !== void 0 ? _a : (transaction.from = this.address);\n            if (transaction.from.toLowerCase() != this.address.toLowerCase()) {\n                throw new Error('Transaction `from` address mismatch');\n            }\n            transaction.customData.customSignature = await this.eip712.sign(transaction);\n            return (0, utils_1.serialize)(transaction);\n        }\n    }\n    async sendTransaction(transaction) {\n        // Typescript isn't smart enough to recognise that wallet.sendTransaction\n        // calls provider.sendTransaction which returns our extended type and not ethers' one.\n        return (await super.sendTransaction(transaction));\n    }\n}\nexports.Wallet = Wallet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Web3Provider = exports.Provider = void 0;\nconst ethers_1 = require(\"ethers\");\nvar Formatter = ethers_1.providers.Formatter;\nconst web_1 = require(\"@ethersproject/web\");\nconst typechain_1 = require(\"../typechain\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst signer_1 = require(\"./signer\");\nlet defaultFormatter = null;\nclass Provider extends ethers_1.ethers.providers.JsonRpcProvider {\n    async getTransactionReceipt(transactionHash) {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n        return (0, web_1.poll)(async () => {\n            const result = await this.perform('getTransactionReceipt', params);\n            if (result == null) {\n                if (this._emitted['t:' + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n            if (result.blockNumber == null && result.status != null && ethers_1.BigNumber.from(result.status).isZero()) {\n                // transaction is rejected in the state-keeper\n                return {\n                    ...this.formatter.receipt({\n                        ...result,\n                        confirmations: 1,\n                        blockNumber: 0,\n                        blockHash: ethers_1.ethers.constants.HashZero\n                    }),\n                    blockNumber: null,\n                    blockHash: null,\n                    l1BatchNumber: null,\n                    l1BatchTxIndex: null\n                };\n            }\n            if (result.blockHash == null) {\n                // receipt is not ready\n                return undefined;\n            }\n            else {\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = blockNumber - receipt.blockNumber + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }\n        }, { oncePoll: this });\n    }\n    async getBlock(blockHashOrBlockTag) {\n        return this._getBlock(blockHashOrBlockTag, false);\n    }\n    async getBlockWithTransactions(blockHashOrBlockTag) {\n        return this._getBlock(blockHashOrBlockTag, true);\n    }\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n            const number = defaultFormatter.number.bind(defaultFormatter);\n            const boolean = defaultFormatter.boolean.bind(defaultFormatter);\n            const hash = defaultFormatter.hash.bind(defaultFormatter);\n            const address = defaultFormatter.address.bind(defaultFormatter);\n            defaultFormatter.formats.receiptLog.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.l2Tol1Log = {\n                blockNumber: number,\n                blockHash: hash,\n                l1BatchNumber: Formatter.allowNull(number),\n                transactionIndex: number,\n                shardId: number,\n                isService: boolean,\n                sender: address,\n                key: hash,\n                value: hash,\n                transactionHash: hash,\n                logIndex: number\n            };\n            defaultFormatter.formats.receipt.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.receipt.l1BatchTxIndex = Formatter.allowNull(number);\n            defaultFormatter.formats.receipt.l2ToL1Logs = Formatter.arrayOf((value) => Formatter.check(defaultFormatter.formats.l2Tol1Log, value));\n            defaultFormatter.formats.block.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.block.l1BatchTimestamp = Formatter.allowNull(number);\n            defaultFormatter.formats.blockWithTransactions.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.blockWithTransactions.l1BatchTimestamp = Formatter.allowNull(number);\n            defaultFormatter.formats.transaction.l1BatchNumber = Formatter.allowNull(number);\n            defaultFormatter.formats.transaction.l1BatchTxIndex = Formatter.allowNull(number);\n            defaultFormatter.formats.filterLog.l1BatchNumber = Formatter.allowNull(number);\n        }\n        return defaultFormatter;\n    }\n    async getBalance(address, blockTag, tokenAddress) {\n        const tag = this.formatter.blockTag(blockTag);\n        if (tokenAddress == null || (0, utils_1.isETH)(tokenAddress)) {\n            // requesting ETH balance\n            return await super.getBalance(address, tag);\n        }\n        else {\n            try {\n                let token = typechain_1.IERC20MetadataFactory.connect(tokenAddress, this);\n                return await token.balanceOf(address, { blockTag: tag });\n            }\n            catch {\n                return ethers_1.BigNumber.from(0);\n            }\n        }\n    }\n    async l2TokenAddress(token) {\n        if (token == utils_1.ETH_ADDRESS) {\n            return utils_1.ETH_ADDRESS;\n        }\n        else {\n            const erc20BridgeAddress = (await this.getDefaultBridgeAddresses()).erc20L2;\n            const erc20Bridge = typechain_1.IL2BridgeFactory.connect(erc20BridgeAddress, this);\n            return await erc20Bridge.l2TokenAddress(token);\n        }\n    }\n    async l1TokenAddress(token) {\n        if (token == utils_1.ETH_ADDRESS) {\n            return utils_1.ETH_ADDRESS;\n        }\n        else {\n            const erc20BridgeAddress = (await this.getDefaultBridgeAddresses()).erc20L2;\n            const erc20Bridge = typechain_1.IL2BridgeFactory.connect(erc20BridgeAddress, this);\n            return await erc20Bridge.l1TokenAddress(token);\n        }\n    }\n    // This function is used when formatting requests for\n    // eth_call and eth_estimateGas. We override it here\n    // because we have extra stuff to serialize (customData).\n    // This function is for internal use only.\n    static hexlifyTransaction(transaction, allowExtra) {\n        var _a;\n        const result = ethers_1.ethers.providers.JsonRpcProvider.hexlifyTransaction(transaction, {\n            ...allowExtra,\n            customData: true,\n            from: true\n        });\n        if (transaction.customData == null) {\n            return result;\n        }\n        result.eip712Meta = {\n            gasPerPubdata: ethers_1.utils.hexValue((_a = transaction.customData.gasPerPubdata) !== null && _a !== void 0 ? _a : 0)\n        };\n        transaction.type = utils_1.EIP712_TX_TYPE;\n        if (transaction.customData.factoryDeps) {\n            // @ts-ignore\n            result.eip712Meta.factoryDeps = transaction.customData.factoryDeps.map((dep) => \n            // TODO (SMA-1605): we arraify instead of hexlifying because server expects Vec<u8>.\n            //  We should change deserialization there.\n            Array.from(ethers_1.utils.arrayify(dep)));\n        }\n        if (transaction.customData.paymasterParams) {\n            // @ts-ignore\n            result.eip712Meta.paymasterParams = {\n                paymaster: ethers_1.utils.hexlify(transaction.customData.paymasterParams.paymaster),\n                paymasterInput: Array.from(ethers_1.utils.arrayify(transaction.customData.paymasterParams.paymasterInput))\n            };\n        }\n        return result;\n    }\n    async estimateGas(transaction) {\n        await this.getNetwork();\n        const params = await ethers_1.utils.resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n        if (transaction.customData != null) {\n            // @ts-ignore\n            params.transaction.customData = transaction.customData;\n        }\n        const result = await this.perform('estimateGas', params);\n        try {\n            return ethers_1.BigNumber.from(result);\n        }\n        catch (error) {\n            throw new Error(`bad result from backend (estimateGas): ${result}`);\n        }\n    }\n    async estimateGasL1(transaction) {\n        await this.getNetwork();\n        const params = await ethers_1.utils.resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n        if (transaction.customData != null) {\n            // @ts-ignore\n            params.transaction.customData = transaction.customData;\n        }\n        const result = await this.send('zks_estimateGasL1ToL2', [\n            Provider.hexlifyTransaction(params.transaction, { from: true })\n        ]);\n        try {\n            return ethers_1.BigNumber.from(result);\n        }\n        catch (error) {\n            throw new Error(`bad result from backend (zks_estimateGasL1ToL2): ${result}`);\n        }\n    }\n    async getGasPrice(token) {\n        const params = token ? [token] : [];\n        const price = await this.send('eth_gasPrice', params);\n        return ethers_1.BigNumber.from(price);\n    }\n    constructor(url, network) {\n        super(url, network);\n        this.pollingInterval = 500;\n        const blockTag = this.formatter.blockTag.bind(this.formatter);\n        this.formatter.blockTag = (tag) => {\n            if (tag == 'committed' || tag == 'finalized') {\n                return tag;\n            }\n            return blockTag(tag);\n        };\n        this.contractAddresses = {};\n        this.formatter.transaction = utils_1.parseTransaction;\n    }\n    async getMessageProof(blockNumber, sender, messageHash, logIndex) {\n        return await this.send('zks_getL2ToL1MsgProof', [\n            ethers_1.BigNumber.from(blockNumber).toNumber(),\n            sender,\n            ethers_1.ethers.utils.hexlify(messageHash),\n            logIndex\n        ]);\n    }\n    async getLogProof(txHash, index) {\n        return await this.send('zks_getL2ToL1LogProof', [ethers_1.ethers.utils.hexlify(txHash), index]);\n    }\n    async getL1BatchBlockRange(l1BatchNumber) {\n        const range = await this.send('zks_getL1BatchBlockRange', [l1BatchNumber]);\n        if (range == null) {\n            return null;\n        }\n        return [parseInt(range[0], 16), parseInt(range[1], 16)];\n    }\n    async getMainContractAddress() {\n        if (!this.contractAddresses.mainContract) {\n            this.contractAddresses.mainContract = await this.send('zks_getMainContract', []);\n        }\n        return this.contractAddresses.mainContract;\n    }\n    async getTestnetPaymasterAddress() {\n        // Unlike contract's addresses, the testnet paymaster is not cached, since it can be trivially changed\n        // on the fly by the server and should not be relied to be constant\n        return await this.send('zks_getTestnetPaymaster', []);\n    }\n    async getDefaultBridgeAddresses() {\n        if (!this.contractAddresses.erc20BridgeL1) {\n            let addresses = await this.send('zks_getBridgeContracts', []);\n            this.contractAddresses.erc20BridgeL1 = addresses.l1Erc20DefaultBridge;\n            this.contractAddresses.erc20BridgeL2 = addresses.l2Erc20DefaultBridge;\n        }\n        return {\n            erc20L1: this.contractAddresses.erc20BridgeL1,\n            erc20L2: this.contractAddresses.erc20BridgeL2\n        };\n    }\n    async getConfirmedTokens(start = 0, limit = 255) {\n        const tokens = await this.send('zks_getConfirmedTokens', [start, limit]);\n        return tokens.map((token) => ({ address: token.l2Address, ...token }));\n    }\n    async getTokenPrice(token) {\n        return await this.send('zks_getTokenPrice', [token]);\n    }\n    async getAllAccountBalances(address) {\n        let balances = await this.send('zks_getAllAccountBalances', [address]);\n        for (let token in balances) {\n            balances[token] = ethers_1.BigNumber.from(balances[token]);\n        }\n        return balances;\n    }\n    async l1ChainId() {\n        const res = await this.send('zks_L1ChainId', []);\n        return ethers_1.BigNumber.from(res).toNumber();\n    }\n    async getL1BatchNumber() {\n        const number = await this.send('zks_L1BatchNumber', []);\n        return ethers_1.BigNumber.from(number).toNumber();\n    }\n    async getL1BatchDetails(number) {\n        return await this.send('zks_getL1BatchDetails', [number]);\n    }\n    async getBlockDetails(number) {\n        return await this.send('zks_getBlockDetails', [number]);\n    }\n    async getTransactionDetails(txHash) {\n        return await this.send('zks_getTransactionDetails', [txHash]);\n    }\n    async getWithdrawTx(transaction) {\n        var _a, _b, _c;\n        var _d;\n        const { ...tx } = transaction;\n        if (tx.to == null && tx.from == null) {\n            throw new Error('withdrawal target address is undefined');\n        }\n        (_a = tx.to) !== null && _a !== void 0 ? _a : (tx.to = tx.from);\n        (_b = tx.overrides) !== null && _b !== void 0 ? _b : (tx.overrides = {});\n        (_c = (_d = tx.overrides).from) !== null && _c !== void 0 ? _c : (_d.from = tx.from);\n        if ((0, utils_1.isETH)(tx.token)) {\n            if (!tx.overrides.value) {\n                tx.overrides.value = tx.amount;\n            }\n            const passedValue = ethers_1.BigNumber.from(tx.overrides.value);\n            if (!passedValue.eq(tx.amount)) {\n                // To avoid users shooting themselves into the foot, we will always use the amount to withdraw\n                // as the value\n                throw new Error('The tx.value is not equal to the value withdrawn');\n            }\n            const ethL2Token = typechain_1.IEthTokenFactory.connect(utils_1.L2_ETH_TOKEN_ADDRESS, this);\n            return ethL2Token.populateTransaction.withdraw(tx.to, tx.overrides);\n        }\n        if (tx.bridgeAddress == null) {\n            const bridges = await this.getDefaultBridgeAddresses();\n            tx.bridgeAddress = bridges.erc20L2;\n        }\n        const bridge = typechain_1.IL2BridgeFactory.connect(tx.bridgeAddress, this);\n        return bridge.populateTransaction.withdraw(tx.to, tx.token, tx.amount, tx.overrides);\n    }\n    async estimateGasWithdraw(transaction) {\n        const withdrawTx = await this.getWithdrawTx(transaction);\n        return await this.estimateGas(withdrawTx);\n    }\n    async getTransferTx(transaction) {\n        var _a, _b;\n        var _c;\n        const { ...tx } = transaction;\n        (_a = tx.overrides) !== null && _a !== void 0 ? _a : (tx.overrides = {});\n        (_b = (_c = tx.overrides).from) !== null && _b !== void 0 ? _b : (_c.from = tx.from);\n        if (tx.token == null || tx.token == utils_1.ETH_ADDRESS) {\n            return {\n                ...(await ethers_1.ethers.utils.resolveProperties(tx.overrides)),\n                to: tx.to,\n                value: tx.amount\n            };\n        }\n        else {\n            const token = typechain_1.IERC20MetadataFactory.connect(tx.token, this);\n            return await token.populateTransaction.transfer(tx.to, tx.amount, tx.overrides);\n        }\n    }\n    async estimateGasTransfer(transaction) {\n        const transferTx = await this.getTransferTx(transaction);\n        return await this.estimateGas(transferTx);\n    }\n    static getDefaultProvider() {\n        // TODO (SMA-1606): Add different urls for different networks.\n        return new Provider(process.env.ZKSYNC_WEB3_API_URL || 'http://localhost:3050');\n    }\n    async newFilter(filter) {\n        filter = await filter;\n        const id = await this.send('eth_newFilter', [this._prepareFilter(filter)]);\n        return ethers_1.BigNumber.from(id);\n    }\n    async newBlockFilter() {\n        const id = await this.send('eth_newBlockFilter', []);\n        return ethers_1.BigNumber.from(id);\n    }\n    async newPendingTransactionsFilter() {\n        const id = await this.send('eth_newPendingTransactionFilter', []);\n        return ethers_1.BigNumber.from(id);\n    }\n    async getFilterChanges(idx) {\n        const logs = await this.send('eth_getFilterChanges', [idx.toHexString()]);\n        return typeof logs[0] === 'string' ? logs : this._parseLogs(logs);\n    }\n    async getLogs(filter = {}) {\n        filter = await filter;\n        const logs = await this.send('eth_getLogs', [this._prepareFilter(filter)]);\n        return this._parseLogs(logs);\n    }\n    _parseLogs(logs) {\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n    _prepareFilter(filter) {\n        return {\n            ...filter,\n            fromBlock: filter.fromBlock == null ? null : this.formatter.blockTag(filter.fromBlock),\n            toBlock: filter.fromBlock == null ? null : this.formatter.blockTag(filter.toBlock)\n        };\n    }\n    _wrapTransaction(tx, hash) {\n        const response = super._wrapTransaction(tx, hash);\n        response.waitFinalize = async () => {\n            const receipt = await response.wait();\n            while (true) {\n                const block = await this.getBlock('finalized');\n                if (receipt.blockNumber <= block.number) {\n                    return await this.getTransactionReceipt(receipt.transactionHash);\n                }\n                else {\n                    await (0, utils_1.sleep)(this.pollingInterval);\n                }\n            }\n        };\n        return response;\n    }\n    // This is inefficient. Status should probably be indicated in the transaction receipt.\n    async getTransactionStatus(txHash) {\n        const tx = await this.getTransaction(txHash);\n        if (tx == null) {\n            return types_1.TransactionStatus.NotFound;\n        }\n        if (tx.blockNumber == null) {\n            return types_1.TransactionStatus.Processing;\n        }\n        const verifiedBlock = await this.getBlock('finalized');\n        if (tx.blockNumber <= verifiedBlock.number) {\n            return types_1.TransactionStatus.Finalized;\n        }\n        return types_1.TransactionStatus.Committed;\n    }\n    async getTransaction(hash) {\n        hash = await hash;\n        const tx = await super.getTransaction(hash);\n        return tx ? this._wrapTransaction(tx, hash) : null;\n    }\n    async sendTransaction(transaction) {\n        return (await super.sendTransaction(transaction));\n    }\n    async getL2TransactionFromPriorityOp(l1TxResponse) {\n        const receipt = await l1TxResponse.wait();\n        const l2Hash = (0, utils_1.getL2HashFromPriorityOp)(receipt, await this.getMainContractAddress());\n        let status = null;\n        do {\n            status = await this.getTransactionStatus(l2Hash);\n            await (0, utils_1.sleep)(this.pollingInterval);\n        } while (status == types_1.TransactionStatus.NotFound);\n        return await this.getTransaction(l2Hash);\n    }\n    async getPriorityOpResponse(l1TxResponse) {\n        const l2Response = { ...l1TxResponse };\n        l2Response.waitL1Commit = l2Response.wait;\n        l2Response.wait = async () => {\n            const l2Tx = await this.getL2TransactionFromPriorityOp(l1TxResponse);\n            return await l2Tx.wait();\n        };\n        l2Response.waitFinalize = async () => {\n            const l2Tx = await this.getL2TransactionFromPriorityOp(l1TxResponse);\n            return await l2Tx.waitFinalize();\n        };\n        return l2Response;\n    }\n    async getContractAccountInfo(address) {\n        const deployerContract = new ethers_1.Contract(utils_1.CONTRACT_DEPLOYER_ADDRESS, utils_1.CONTRACT_DEPLOYER, this);\n        const data = await deployerContract.getAccountInfo(address);\n        return {\n            supportedAAVersion: data.supportedAAVersion,\n            nonceOrdering: data.nonceOrdering\n        };\n    }\n    // TODO (EVM-3): support refundRecipient for fee estimation\n    async estimateL1ToL2Execute(transaction) {\n        var _a, _b;\n        (_a = transaction.gasPerPubdataByte) !== null && _a !== void 0 ? _a : (transaction.gasPerPubdataByte = utils_1.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT);\n        // If the `from` address is not provided, we use a random address, because\n        // due to storage slot aggregation, the gas estimation will depend on the address\n        // and so estimation for the zero address may be smaller than for the sender.\n        (_b = transaction.caller) !== null && _b !== void 0 ? _b : (transaction.caller = ethers_1.ethers.Wallet.createRandom().address);\n        const customData = {\n            gasPerPubdataByte: transaction.gasPerPubdataByte\n        };\n        if (transaction.factoryDeps) {\n            Object.assign(customData, { factoryDeps: transaction.factoryDeps });\n        }\n        const fee = await this.estimateGasL1({\n            from: transaction.caller,\n            data: transaction.calldata,\n            to: transaction.contractAddress,\n            value: transaction.l2Value,\n            customData\n        });\n        return fee;\n    }\n}\nexports.Provider = Provider;\nclass Web3Provider extends Provider {\n    constructor(provider, network) {\n        if (provider == null) {\n            throw new Error('missing provider');\n        }\n        if (!provider.request) {\n            throw new Error('provider must implement eip-1193');\n        }\n        let path = provider.host || provider.path || (provider.isMetaMask ? 'metamask' : 'eip-1193:');\n        super(path, network);\n        this.provider = provider;\n    }\n    async send(method, params) {\n        params !== null && params !== void 0 ? params : (params = []);\n        // Metamask complains about eth_sign (and on some versions hangs)\n        if (method == 'eth_sign' && (this.provider.isMetaMask || this.provider.isStatus)) {\n            // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n            method = 'personal_sign';\n            params = [params[1], params[0]];\n        }\n        return await this.provider.request({ method, params });\n    }\n    getSigner(addressOrIndex) {\n        return signer_1.Signer.from(super.getSigner(addressOrIndex));\n    }\n    async estimateGas(transaction) {\n        const gas = await super.estimateGas(transaction);\n        const metamaskMinimum = ethers_1.BigNumber.from(21000);\n        const isEIP712 = transaction.customData != null || transaction.type == utils_1.EIP712_TX_TYPE;\n        return gas.gt(metamaskMinimum) || isEIP712 ? gas : metamaskMinimum;\n    }\n}\nexports.Web3Provider = Web3Provider;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractFactory = exports.Contract = void 0;\nconst ethers_1 = require(\"ethers\");\nconst utils_1 = require(\"./utils\");\nconst types_1 = require(\"./types\");\nvar ethers_2 = require(\"ethers\");\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return ethers_2.Contract; } });\nclass ContractFactory extends ethers_1.ethers.ContractFactory {\n    constructor(abi, bytecode, signer, deploymentType) {\n        super(abi, bytecode, signer);\n        this.deploymentType = deploymentType || 'create';\n    }\n    encodeCalldata(salt, bytecodeHash, constructorCalldata) {\n        if (this.deploymentType == 'create') {\n            return utils_1.CONTRACT_DEPLOYER.encodeFunctionData('create', [salt, bytecodeHash, constructorCalldata]);\n        }\n        else if (this.deploymentType == 'createAccount') {\n            return utils_1.CONTRACT_DEPLOYER.encodeFunctionData('createAccount', [\n                salt,\n                bytecodeHash,\n                constructorCalldata,\n                types_1.AccountAbstractionVersion.Version1\n            ]);\n        }\n        else {\n            throw new Error(`Unsupported deployment type ${this.deploymentType}`);\n        }\n    }\n    getDeployTransaction(...args) {\n        var _a, _b, _c;\n        var _d, _e;\n        // TODO (SMA-1585): Users should be able to provide the salt.\n        let salt = '0x0000000000000000000000000000000000000000000000000000000000000000';\n        // The overrides will be popped out in this call:\n        const txRequest = super.getDeployTransaction(...args);\n        // Removing overrides\n        if (this.interface.deploy.inputs.length + 1 == args.length) {\n            args.pop();\n        }\n        // Salt argument is not used, so we provide a placeholder value.\n        const bytecodeHash = (0, utils_1.hashBytecode)(this.bytecode);\n        const constructorCalldata = ethers_1.utils.arrayify(this.interface.encodeDeploy(args));\n        const deployCalldata = this.encodeCalldata(salt, bytecodeHash, constructorCalldata);\n        txRequest.type = utils_1.EIP712_TX_TYPE;\n        txRequest.to = utils_1.CONTRACT_DEPLOYER_ADDRESS;\n        txRequest.data = deployCalldata;\n        (_a = txRequest.customData) !== null && _a !== void 0 ? _a : (txRequest.customData = {});\n        (_b = (_d = txRequest.customData).factoryDeps) !== null && _b !== void 0 ? _b : (_d.factoryDeps = []);\n        (_c = (_e = txRequest.customData).gasPerPubdata) !== null && _c !== void 0 ? _c : (_e.gasPerPubdata = utils_1.DEFAULT_GAS_PER_PUBDATA_LIMIT);\n        // The number of factory deps is relatively low, so it is efficient enough.\n        if (!txRequest.customData.factoryDeps.includes(this.bytecode)) {\n            txRequest.customData.factoryDeps.push(this.bytecode);\n        }\n        return txRequest;\n    }\n    async deploy(...args) {\n        const contract = await super.deploy(...args);\n        const deployTxReceipt = await contract.deployTransaction.wait();\n        const deployedAddresses = (0, utils_1.getDeployedContracts)(deployTxReceipt).map((info) => info.deployedAddress);\n        const contractWithCorrectAddress = new ethers_1.ethers.Contract(deployedAddresses[deployedAddresses.length - 1], contract.interface, contract.signer);\n        ethers_1.utils.defineReadOnly(contractWithCorrectAddress, 'deployTransaction', contract.deployTransaction);\n        return contractWithCorrectAddress;\n    }\n}\nexports.ContractFactory = ContractFactory;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = exports.ContractFactory = exports.Provider = exports.Web3Provider = exports.Wallet = exports.L1Signer = exports.Signer = exports.EIP712Signer = exports.types = exports.utils = void 0;\nexports.utils = __importStar(require(\"./utils\"));\nexports.types = __importStar(require(\"./types\"));\nvar signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"EIP712Signer\", { enumerable: true, get: function () { return signer_1.EIP712Signer; } });\nObject.defineProperty(exports, \"Signer\", { enumerable: true, get: function () { return signer_1.Signer; } });\nObject.defineProperty(exports, \"L1Signer\", { enumerable: true, get: function () { return signer_1.L1Signer; } });\nvar wallet_1 = require(\"./wallet\");\nObject.defineProperty(exports, \"Wallet\", { enumerable: true, get: function () { return wallet_1.Wallet; } });\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"Web3Provider\", { enumerable: true, get: function () { return provider_1.Web3Provider; } });\nObject.defineProperty(exports, \"Provider\", { enumerable: true, get: function () { return provider_1.Provider; } });\nvar contract_1 = require(\"./contract\");\nObject.defineProperty(exports, \"ContractFactory\", { enumerable: true, get: function () { return contract_1.ContractFactory; } });\nObject.defineProperty(exports, \"Contract\", { enumerable: true, get: function () { return contract_1.Contract; } });\n", null, null, null, "export const version = \"logger/5.7.0\";\n", "\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n", "export const version = \"bytes/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n", "export const version = \"bignumber/5.7.0\";\n", "\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n", "export { BigNumber, BigNumberish } from \"./bignumber\";\nexport { formatFixed, FixedFormat, FixedNumber, parseFixed } from \"./fixednumber\";\n\n// Internal methods used by address\nexport { _base16To36, _base36To16 } from \"./bignumber\";\n", "export const version = \"properties/5.7.0\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n", "export const version = \"abi/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n", "\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n", "export const version = \"rlp/5.7.0\";\n", "\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n", "export const version = \"address/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n", "\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n", "export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n", "import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n", "export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n", "\"use strict\";\n\nexport { AddressZero } from \"./addresses\";\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256\n} from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n", "export const version = \"strings/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n", "\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n", "\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n", "\"use strict\";\n\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFunc, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\n\nexport {\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFunc,\n    Utf8ErrorFuncs,\n    Utf8ErrorReason,\n\n    UnicodeNormalizationForm,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    nameprep\n}\n", "\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n", "\"use strict\";\n\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, JsonFragmentType, ParamType } from \"./fragments\";\nimport { AbiCoder, CoerceFunc, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, Result, TransactionDescription } from \"./interface\";\n\nexport {\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    Fragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    AbiCoder,\n    defaultAbiCoder,\n\n    Interface,\n    Indexed,\n\n    /////////////////////////\n    // Types\n\n    CoerceFunc,\n    JsonFragment,\n    JsonFragmentType,\n\n    Result,\n    checkResultErrors,\n\n    LogDescription,\n    TransactionDescription\n};\n", "export const version = \"abstract-provider/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n", "export const version = \"abstract-signer/5.7.0\";\n", "\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n", "export const version = \"contracts/5.7.0\";\n", "\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n", "/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n", "export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n", "export const version = \"sha2/5.7.0\";\n", "\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n", "import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nexport {\n    computeHmac,\n\n    ripemd160,\n\n    sha256,\n    sha512,\n\n    SupportedAlgorithm\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n", "\nexport { pbkdf2 } from \"./pbkdf2\";\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map", "export const version = \"signing-key/5.7.0\";\n", "\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n", "export const version = \"wordlists/5.7.0\";\n", "\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n", "\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n", "\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n", "\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\nimport { logger, Wordlist } from \"./wordlist\";\n\nimport { wordlists } from \"./wordlists\";\n\nexport {\n    logger,\n    Wordlist,\n    wordlists\n}\n", "export const version = \"hdnode/5.7.0\";\n", "\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n", "export const version = \"random/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n", "\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n", "\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n", "export const version = \"json-wallets/5.7.0\";\n", "\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n", "\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n", "\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n", "\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n", "export const version = \"wallet/5.7.0\";\n", "\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "export const version = \"networks/5.7.1\";\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n", "\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n", "\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n", "export const version = \"web/5.7.1\";\n", "\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n", "\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n", "export const version = \"providers/5.7.2\";\n", "\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n", "\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n", "\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n", "\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n", "\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n", "\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n", "\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n", "\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n", "\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n", "/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n", "\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n", "\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n", "export const version = \"solidity/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n", "export const version = \"units/5.7.0\";\n", "\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n", "\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n", "export const version = \"ethers/5.7.2\";\n", "\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n", "\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { ethers } from 'ethers';\nimport { SafeService, SafeEthersSigner } from '@safe-global/safe-ethers-adapters';\nimport safeCoreSdk from '@safe-global/safe-core-sdk';\nimport safeEthersLib from '@safe-global/safe-ethers-lib';\nimport 'eventemitter3';\n\n// excerpt from https://docs.safe.global/api-supported-networks#safe-transaction-service\nconst CHAIN_ID_TO_GNOSIS_SERVER_URL = {\n  // mainnet\n  1: \"https://safe-transaction-mainnet.safe.global\",\n  // Sepolia\n  11155111: \"https://safe-transaction-sepolia.safe.global\",\n  // optimism\n  10: \"https://safe-transaction-optimism.safe.global\",\n  // bsc\n  56: \"https://safe-transaction-bsc.safe.global\",\n  // gnosis\n  100: \"https://safe-transaction-gnosis-chain.safe.global\",\n  // polygon\n  137: \"https://safe-transaction-polygon.safe.global\",\n  // avalanche\n  43114: \"https://safe-transaction-avalanche.safe.global\",\n  // arbitrum\n  42161: \"https://safe-transaction-arbitrum.safe.global\",\n  // celo\n  42220: \"https://safe-transaction-celo.safe.global\",\n  // Base mainnet\n  8453: \"https://safe-transaction-base.safe.global\",\n  // aurora\n  1313161554: \"https://safe-transaction-aurora.safe.global\",\n  //  Polygon zkEVM\n  1101: \"https://safe-transaction-zkevm.safe.global\",\n  //  ZkSync Mainnet\n  324: \"https://safe-transaction-zksync.safe.global\"\n};\n\nconst CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS = {\n  // mainnet\n  1: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // polygon\n  137: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // bsc\n  56: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // arbitrum\n  42161: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // aurora\n  1313161554: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // avalanche\n  43114: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // optimism\n  10: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // celo\n  42220: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // gnosis chain - https://docs.safe.global/smart-account-supported-networks/v1.3.0#gnosis\n  100: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // Sepolia - https://docs.safe.global/smart-account-supported-networks/v1.3.0#sepolia\n  11155111: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // base mainnet - https://docs.safe.global/smart-account-supported-networks/v1.3.0#base\n  8453: \"0x98FFBBF51bb33A056B08ddf711f289936AafF717\",\n  // Polygon zkEVM - https://docs.safe.global/smart-account-supported-networks/v1.3.0#polygon-zkevm\n  1101: \"0xA65387F16B013cf2Af4605Ad8aA5ec25a2cbA3a2\",\n  // ZkSync Mainnet - https://docs.safe.global/smart-account-supported-networks/v1.3.0#zksync-mainnet\n  324: \"0x357147caf9C0cCa67DfA0CF5369318d8193c8407\"\n};\nconst SIGN_MESSAGE_LIB_ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"msgHash\",\n    type: \"bytes32\"\n  }],\n  name: \"SignMsg\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"message\",\n    type: \"bytes\"\n  }],\n  name: \"getMessageHash\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"_data\",\n    type: \"bytes\"\n  }],\n  name: \"signMessage\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst __IS_SERVER__ = \"object\" === \"undefined\";\nclass SafeConnector extends Connector {\n  // config\n\n  // private options: SafeOptions;\n\n  constructor() {\n    super();\n    _defineProperty(this, \"supportedChains\", SafeConnector.supportedChains);\n    _defineProperty(this, \"id\", \"safe-wallet\");\n    _defineProperty(this, \"ready\", !__IS_SERVER__);\n    _defineProperty(this, \"name\", \"Safe Wallet\");\n    {\n      this.ready = true;\n    }\n  }\n  async connect(args) {\n    if (!(args.chain.chainId in CHAIN_ID_TO_GNOSIS_SERVER_URL)) {\n      throw new Error(\"Chain not supported by Safe\");\n    }\n    this.safeSigner = await this.createSafeSigner(args);\n    return await this.getAddress();\n  }\n  async createSafeSigner(params) {\n    this.personalWallet = params.personalWallet;\n    const signer = await params.personalWallet.getSigner();\n    const safeAddress = params.safeAddress;\n    const safeChainId = params.chain.chainId;\n    if (!signer) {\n      throw new Error(\"cannot create Gnosis Safe signer without a personal signer\");\n    }\n    const signerChainId = await signer.getChainId();\n    if (signerChainId !== safeChainId) {\n      throw new Error(\"chainId of personal signer has to match safe chainId\");\n    }\n    if (!safeAddress) {\n      throw new Error(\"safeAddress is required\");\n    }\n    if (!safeChainId) {\n      throw new Error(\"safeChainId is required\");\n    }\n    const serverUrl = CHAIN_ID_TO_GNOSIS_SERVER_URL[safeChainId];\n    const signMessageLibAddress = CHAIN_ID_TO_SIGN_MESSAGE_LIB_ADDRESS[safeChainId];\n    if (!serverUrl || !signMessageLibAddress) {\n      throw new Error(\"Chain not supported\");\n    }\n    const ethAdapter = new safeEthersLib({\n      ethers,\n      signerOrProvider: signer\n    });\n    const safe = await safeCoreSdk.create({\n      ethAdapter: ethAdapter,\n      safeAddress\n    });\n    const service = new SafeService(serverUrl);\n    const safeSigner = new SafeEthersSigner(safe, service, signer.provider);\n    safeSigner.signMessage = async message => {\n      // Encode the request to the signMessage function of the SafeMessageLib\n      const contract = new ethers.BaseContract(signMessageLibAddress, SIGN_MESSAGE_LIB_ABI);\n      const data = contract.interface.encodeFunctionData(\"signMessage\", [ethers.utils.hashMessage(message)]);\n      const to = signMessageLibAddress;\n      const value = \"0\";\n      const operation = 1; // 1 indicates a delegatecall\n      const safeTxGas = 50000;\n      const baseGas = 50000;\n      const gasPrice = 0;\n      const gasToken = ethers.constants.AddressZero;\n      const refundReceiver = ethers.constants.AddressZero;\n\n      // Create the safe transaction to approve the signature\n      const safeTx = await safe.createTransaction({\n        safeTransactionData: {\n          to,\n          value,\n          operation,\n          data,\n          baseGas,\n          safeTxGas,\n          gasPrice,\n          gasToken,\n          refundReceiver\n        }\n      });\n\n      // Sign and propose the safe transaction\n      const safeTxHash = await safe.getTransactionHash(safeTx);\n      const safeSignature = await safe.signTransactionHash(safeTxHash);\n      await service.proposeTx(safe.getAddress(), safeTxHash, safeTx, safeSignature);\n\n      // Poll while we wait for the safe transaction to reach minimum confirmations\n      while (true) {\n        try {\n          const txDetails = await service.getSafeTxDetails(safeTxHash);\n          if (txDetails.transactionHash) {\n            await signer.provider?.waitForTransaction(txDetails.transactionHash);\n            break;\n          }\n        } catch (e) {}\n        await new Promise(resolve => setTimeout(resolve, 5000));\n      }\n\n      // For on-chain signatures, safe expects just \"0x\" as the signature\n      return \"0x\";\n    };\n\n    // set the personal signer as \"previous connector\" so that we can re-connect to it later when disconnecting\n    this.previousConnector = params.personalWallet;\n    return safeSigner;\n  }\n  async disconnect() {\n    this.safeSigner = undefined;\n    this.previousConnector = undefined;\n    return undefined;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    return await signer.getAddress();\n  }\n  async getChainId() {\n    return (await this.getSigner()).getChainId();\n  }\n  async getProvider() {\n    const provider = (await this.getSigner()).provider;\n    if (!provider) {\n      throw new Error(\"No provider available\");\n    }\n    return provider;\n  }\n  async getSigner() {\n    if (!this.safeSigner) {\n      throw new Error(\"not connected - please call connect() first\");\n    }\n    return this.safeSigner;\n  }\n  async isConnected() {\n    try {\n      const account = await this.getAddress();\n      return !!account;\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: ethers.utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  switchChain() {\n    throw new Error(\"Safe connector does not support switching chains\");\n  }\n  updateChains() {}\n  async setupListeners() {}\n}\n_defineProperty(SafeConnector, \"supportedChains\", /* @__PURE__ */(() => Object.keys(CHAIN_ID_TO_GNOSIS_SERVER_URL))());\n\nexport { SafeConnector };\n"],
  "mappings": "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AAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,aAAa,QAAQ;AAAA,QACzC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa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AAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,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,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAA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,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QA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,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QAC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AQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,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AC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,aAAa,QAAQ;AAAA,QACzC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,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AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW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,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAA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AA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;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UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,aAAa,QAAQ;AAAA,QACzC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,Q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AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,cAAc;AAAA,QACd,eAAe;AAAA,QACf,gBAAgB;AAAA,MACpB;AAAA,MACA,KAAO;AAAA,QACH;AAAA,UACI,QAAU,CAAC;AAAA,UACX,iBAAmB;AAAA,UACnB,MAAQ;AAAA,QACZ;AAAA,QACA;AAAA,UACI,QAAU;AAAA,YACN;AAAA,cACI,cAAgB;AAAA,cAChB,MAAQ;AAAA,cACR,MAAQ;AAAA,YACZ;AAAA,UACJ;AAAA,UACA,MAAQ;AAAA,UACR,SAAW,CAAC;AAAA,UACZ,iBAAmB;AAAA,UACnB,MAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AClWA,IAAAC,sBAAA;AAAA;AAAA;AAAA,MACI,UAAY;AAAA,MACZ,cAAgB;AAAA,MAChB,SAAW;AAAA,MACX,aAAe;AAAA,QACX,WAAa;AAAA,UACT,SAAW;AAAA,UACX,UAAY;AAAA,QAChB;AAAA,MACJ;AAAA,MACA,kBAAoB;AAAA,QAChB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,MAChB;AAAA,MACA,KAAO;AAAA,QACH;AAAA,UACI,QAAU,CAAC;AAAA,UACX,iBAAmB;AAAA,UACnB,MAAQ;AAAA,QACZ;AAAA,QACA;AAAA,UACI,QAAU;AAAA,YACN;AAAA,cACI,cAAgB;AAAA,cAChB,MAAQ;AAAA,cACR,MAAQ;AAAA,YACZ;AAAA,UACJ;AAAA,UACA,MAAQ;AAAA,UACR,SAAW,CAAC;AAAA,UACZ,iBAAmB;AAAA,UACnB,MAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAAA,MACI,UAAY;AAAA,MACZ,cAAgB;AAAA,MAChB,SAAW;AAAA,MACX,aAAe;AAAA,QACX,WAAa;AAAA,UACT,SAAW;AAAA,UACX,UAAY;AAAA,QAChB;AAAA,QACA,QAAU;AAAA,UACN,SAAW;AAAA,UACX,UAAY;AAAA,QAChB;AAAA,QACA,QAAU;AAAA,UACN,SAAW;AAAA,UACX,UAAY;AAAA,QAChB;AAAA,MACJ;AAAA,MACA,kBAAoB;AAAA,QAChB,KAAK,CAAC,aAAa,QAAQ;AAAA,QAC3B,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM,CAAC,aAAa,QAAQ;AAAA,QAC5B,MAAM,CAAC,aAAa,QAAQ;AAAA,QAC5B,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,CAAC,UAAU,WAAW;AAAA,QAC5B,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO,CAAC,UAAU,aAAa,QAAQ;AAAA,QACvC,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,UAAU,aAAa,QAAQ;AAAA,QACvC,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,UAAU,aAAa,QAAQ;AAAA,QACvC,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO,CAAC,UAAU,WAAW;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,OAAO;AAAA,QACP,OAAO,CAAC,aAAa,QAAQ;AAAA,QAC7B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,aAAa,QAAQ;AAAA,QACzC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC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R,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,Q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,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,aAAa,QAAQ;AAAA,QACzC,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS,CAAC,aAAa,QAAQ;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,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,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,WAAW;AAA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R,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,aAAa,QAAQ;AAAA,QACxC,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,aAAa,QAAQ;AAAA,QAC9B,QAAQ;AAAA,QACR,QA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ACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA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B,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS,CAAC,UAAU,WAAW;AAAA,QAC/B,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,QACT,SAAS;AAAA,Q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,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,CAAC,UAAU,WAAW;AAAA,QAC9B,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,QAC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N,MAAM;;;QAGV,MAAM;QACN,MAAM;;MAER;QACE,WAAW;QACX,QAAQ;UACN;YACE,SAAS;YACT,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,MAAM;;MAER;QACE,WAAW;QACX,QAAQ;UACN;YACE,SAAS;YACT,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,MAAM;;MAER;QACE,WAAW;QACX,QAAQ;UACN;YACE,SAAS;YACT,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;UAER;YACE,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;;AAIV,QAAa,uBAAb,MAAiC;MAE/B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CjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;;AAIV,Q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AQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS,CAAA;QACT,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;MAER;QACE,UAAU;QACV,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,SAAS;QACT,iBAAiB;QACjB,MAAM;;;AAIV,QAAa,uBAAb,MAAiC;MAE/B,OAAO,kBAAe;AACpB,eAAO,IAAI,SAAA,MAAM,UAAU,IAAI;MACjC;MACA,OAAO,QACL,SACA,kBAAmC;AAEnC,eAAO,IAAI,SAAA,SAAS,SAAS,MAAM,gBAAgB;MACrD;;AAVF,YAAA,uBAAA;AACkB,yBAAA,MAAM;;;;;;;;;;AC9+BxB,QAAA,WAAA;AAOA,QAAM,OAAO;MACX;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;Y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;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ,CAAA;QACR,MAAM;QACN,SAAS;UACP;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;QAGV,iBAAiB;QACjB,MAAM;;MAER;QACE,QAAQ;UACN;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;UAER;YACE,cAAc;YACd,MAAM;YACN,MAAM;;;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",
  "names": ["require_utils", "key", "encode", "serialize", "key", "id", "toJSON", "key", "key", "key", "version", "require_axios", "SafeService", "signature", "OperationType", "require_types", "require_simulate_tx_accessor", "require_simulate_tx_accessor", "require_proxy_factory", "require_proxy_factory", "require_safe_proxy_factory", "require_compatibility_fallback_handler", "require_compatibility_fallback_handler", "require_gnosis_safe", "require_gnosis_safe", "require_gnosis_safe", "require_safe", "require_safe_l2", "require_multi_send", "require_multi_send", "require_multi_send", "require_multi_send_call_only", "require_multi_send_call_only", "require_create_call", "require_create_call", "require_sign_message_lib", "require_sign_message_lib", "require_safe_migration", "require_safe_to_l2_setup", "require_utils", "version", "utils_1", "utils_1", "utils_1", "utils_1", "utils_1", "require_dist", "exports", "utils_1", "SafeEthersSigner", "signature", "version", "require_bn", "module", "exports", "assert", "BN", "base", "Buffer", "init", "mul", "inspect", "zeros", "toJSON", "neg", "add", "self", "comb10MulTo", "N", "eq", "prime", "require_src", "require_src", "require_src", "BN", "BN", "base", "isBytes", "hash", "assert", "isBytes", "randomBytes", "hash", "key", "hmac", "isBytes", "reseed", "hash", "key", "neg", "base", "window", "s", "point", "key", "Point", "mul", "a", "Signature", "hash", "randomBytes", "sign", "verify", "signature", "r", "tv5", "c1", "c2", "utils_1", "hash", "key", "hash", "Point", "utils_1", "point", "Point", "rand", "signature", "require_secp256k1", "encode", "decode", "_decode", "add", "require_utils", "utils_1", "hash", "key", "isHexString", "zeros", "stripZeros", "utils_1", "hash", "TypeOutput", "signature", "base", "error", "self", "add", "key", "key", "key", "require_util", "getOwnPropertyDescriptors", "inspect", "x", "hash", "base", "key", "add", "self", "base", "key", "decode", "encode", "inspect", "key", "inspect", "key", "inspect", "key", "inspect", "key", "inspect", "key", "require_utils", "compactQueue", "arrayToObject", "merge", "key", "decode", "encode", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "key", "isNonNullishPrimitive", "stringify", "value", "normalizeStringifyOptions", "key", "normalizeParseOptions", "require_lib", "parse", "hash", "add", "isBytes", "randomBytes", "require_utils", "utils_1", "keccak256", "addSlice", "require_dist", "utils_1", "hash", "isAddress", "require_utils", "BN", "keccak256", "toBN", "isAddress", "sha3", "sign", "toHex", "hexValue", "BN", "require_browser", "Buffer", "crypto", "randomBytes", "require_lib", "BN", "network", "SAFE_FEATURES", "version", "utils_1", "utils_1", "utils_1", "module", "utils_1", "require_lib", "assert", "require_utils", "BN", "getNAF", "getJSF", "key", "cachedProperty", "BN", "getNAF", "getJSF", "assert", "BaseCurve", "point", "validate", "_fixedNafMul", "_wnafMul", "_wnafMulAdd", "BasePoint", "eq", "decodePoint", "encodeCompressed", "_encode", "encode", "precompute", "_hasDoubles", "_getDoubles", "_getNAFPoints", "dbl", "_getBeta", "dblp", "BN", "assert", "ShortCurve", "_getEndomorphism", "_getEndoRoots", "_getEndoBasis", "_endoSplit", "pointFromX", "validate", "point", "_endoWnafMulAdd", "Point", "pointFromJSON", "_getBeta", "toJSON", "fromJSON", "obj", "inspect", "isInfinity", "add", "dbl", "getX", "getY", "mul", "mulAdd", "jmulAdd", "eq", "neg", "toJ", "JPoint", "jpoint", "toP", "mixedAdd", "dblp", "_zeroDbl", "_threeDbl", "_dbl", "trpl", "eqXToP", "BN", "validate", "point", "Point", "decodePoint", "pointFromJSON", "precompute", "_encode", "fromJSON", "inspect", "isInfinity", "dbl", "add", "mul", "mulAdd", "eq", "getX", "BN", "assert", "jpoint", "pointFromX", "validate", "point", "Point", "pointFromJSON", "fromJSON", "inspect", "isInfinity", "dbl", "add", "mul", "mulAdd", "jmulAdd", "neg", "getX", "getY", "eq", "eqXToP", "require_curve", "require_secp256k1", "hash", "assert", "curve", "BN", "assert", "KeyPair", "ec", "fromPublic", "fromPrivate", "validate", "getPublic", "getPrivate", "_importPrivate", "key", "_importPublic", "derive", "sign", "verify", "signature", "inspect", "require_signature", "BN", "assert", "Signature", "Position", "getLength", "rmPadding", "_importDER", "constructLength", "toDER", "BN", "HmacDRBG", "rand", "assert", "KeyPair", "Signature", "EC", "keyPair", "keyFromPrivate", "keyFromPublic", "genKeyPair", "_truncateToN", "sign", "key", "verify", "signature", "e", "require_key", "assert", "KeyPair", "fromPublic", "hash", "sign", "verify", "getPublic", "require_signature", "BN", "assert", "Signature", "toHex", "hash", "assert", "KeyPair", "Signature", "sign", "key", "verify", "keyFromPublic", "point", "decodePoint", "require_elliptic", "EC", "ec", "BN", "point", "data", "sha256", "hash", "require_elliptic", "__export", "key", "isHexString", "zeros", "stripZeros", "hash", "require_to_buffer", "Buffer", "require_safe_buffer", "Buffer", "key", "require_util", "Buffer", "concat", "err", "self", "Buffer", "keys", "key", "self", "require_string_decoder", "Buffer", "self", "Buffer", "self", "n", "Buffer", "Buffer", "Buffer", "words", "key", "Buffer", "require_browser", "hash", "keccak256", "sha256", "hash", "ripemd160", "TypeOutput", "Account", "hash", "Address", "signature", "self", "serialize", "signature", "utils_1", "signature", "hash", "signature", "utils_1", "signature", "hash", "require_types", "Network", "PriorityQueueType", "PriorityOpTree", "TransactionStatus", "AccountAbstractionVersion", "AccountNonceOrdering", "utils_1", "hash", "log", "require_signer", "utils_1", "chainId", "Signer", "require_utils", "exports", "utils_1", "serialize", "signature", "hash", "utils_1", "Wallet", "wordlist", "require_provider", "Formatter", "utils_1", "defaultFormatter", "Provider", "hash", "id", "Web3Provider", "utils_1", "ContractFactory", "require_src", "utils_1", "utils_1", "init_lib", "LogLevel", "ErrorCode", "version", "key", "error", "version", "init_version", "signature", "vs", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "_BN", "version", "key", "throwFault", "logger", "_constructorGuard", "init_lib", "init_version", "version", "key", "init_lib", "version", "init_version", "key", "logger", "init_lib", "init_version", "version", "version", "init_version", "logger", "parent", "node", "key", "_constructorGuard", "init_lib", "init_version", "version", "result", "key", "logger", "init_lib", "init_version", "version", "sha3", "init_lib", "version", "init_version", "lib_exports", "length", "logger", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "version", "init_lib", "logger", "init_lib", "init_version", "version", "init_lib", "init_lib", "NegativeOne", "Zero", "init_lib", "lib_exports", "NegativeOne", "Zero", "init_lib", "init_lib", "NegativeOne", "Zero", "version", "init_version", "logger", "init_lib", "init_version", "version", "UnicodeNormalizationForm", "Utf8ErrorReason", "init_lib", "value", "init_lib", "init_lib", "logger", "init_lib", "init_version", "version", "logger", "init_lib", "init_version", "version", "signature", "value", "init_lib", "version", "init_version", "logger", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "version", "key", "__awaiter", "version", "init_version", "logger", "paramType", "__awaiter", "key", "allowedTransactionKeys", "init_lib", "init_version", "version", "signature", "runningEvent", "init_lib", "SupportedAlgorithm", "version", "init_version", "hash", "key", "logger", "import_hash", "init_lib", "init_version", "version", "init_lib", "init_lib", "init_lib", "BN", "Base", "utils", "assert", "ec", "curves", "EC", "toHex", "encode", "minAssert", "minUtils", "getNAF", "getJSF", "key", "cachedProperty", "validate", "_encode", "dbl", "inherits", "point", "_getBeta", "obj", "eq", "neg", "add", "dblp", "mul", "inspect", "isInfinity", "require$$0", "require$$1", "curve", "hash", "signature", "KeyPair", "HmacDRBG", "sign", "Signature", "verify", "e", "require$$2", "require$$3", "_ec", "version", "init_version", "signature", "key", "logger", "init_lib", "init_version", "version", "keyPair", "version", "init_version", "logger", "init_lib", "init_version", "version", "words", "wordlist", "anyGlobal", "init_lib", "version", "init_version", "wordlist", "words", "logger", "_constructorGuard", "init_lib", "init_version", "version", "key", "version", "init_version", "logger", "init_lib", "init_version", "version", "init_lib", "version", "init_version", "key", "randomBytes", "init_lib", "logger", "key", "aes", "init_lib", "init_version", "version", "init_lib", "key", "aes", "logger", "pbkdf2", "N", "scrypt", "decrypt", "now", "import_aes_js", "init_lib", "init_version", "version", "decrypt", "init_lib", "version", "init_version", "hasMnemonic", "signature", "logger", "init_lib", "init_version", "version", "wordlist", "version", "init_version", "network", "standard", "logger", "init_lib", "init_version", "version", "decode", "encode", "init_lib", "lib_exports", "decode", "encode", "init_lib", "version", "init_version", "key", "init_lib", "logger", "key", "encode", "decode", "timer", "stall", "body", "timeout", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "version", "hash", "value", "key", "logger", "topic", "getEventTag", "init_lib", "init_version", "version", "words", "bech32", "hash", "encode", "key", "now", "receipt", "__awaiter", "timer", "blockNumber", "avatar", "key", "logger", "_constructorGuard", "allowedTransactionKeys", "init_lib", "init_version", "version", "__awaiter", "hash", "network", "error", "getNetwork", "result", "self", "poll", "init_lib", "init_version", "logger", "version", "logger", "init_lib", "init_version", "version", "id", "param", "event", "hash", "subId", "logger", "init_lib", "init_version", "version", "key", "logger", "init_lib", "init_version", "version", "logger", "defaultApiKey", "init_lib", "init_version", "version", "logger", "init_lib", "init_version", "version", "key", "getResult", "checkError", "logger", "init_lib", "init_version", "version", "url", "networks", "logger", "serialize", "key", "stall", "timer", "now", "init_lib", "init_version", "version", "i", "logger", "init_lib", "init_version", "version", "init_lib", "request", "inflightRequest", "logger", "defaultApiKey", "init_lib", "init_version", "version", "logger", "init_lib", "init_version", "version", "error", "logger", "init_lib", "init_version", "version", "lib_exports", "logger", "init_lib", "init_version", "version", "version", "init_version", "logger", "value", "pack", "keccak256", "sha256", "init_lib", "init_version", "version", "version", "init_version", "logger", "init_lib", "init_version", "version", "lib_exports", "keccak256", "pack", "sha256", "init_utils", "init_lib", "version", "init_version", "ethers_exports", "lib_exports", "logger", "version", "init_lib", "init_utils", "init_version", "lib_exports", "ethers_exports", "logger", "version", "init_lib", "anyGlobal", "utils_1", "utils_1", "hash", "utils_1", "utils_1", "utils_1", "utils_1", "proxyAddress", "utils_1", "utils_1", "signature", "init_lib", "safeEthersLib", "safeCoreSdk"]
}
